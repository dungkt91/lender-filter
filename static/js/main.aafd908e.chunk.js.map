{"version":3,"sources":["ListFilter.js","RangeFilter.js","Filter.js","LenderInputs.js","Lender.js","LeftPanel.js","Api.js","Car.js","Loader.js","CarShow.js","Menubar.js","GlobalVariables.js","HomePage.js","CarDescription.js","CarImagesGallery.js","CarShowElement.js","CarShowElementButtons.js","CarList.js","CarPage.js","App.js","serviceWorker.js","index.js","CarCalculation.js"],"names":["ListFilter","props","optionCheckedDict","options","state","selectAll","bind","optionOnchange","this","init","newState","checkedAll","option","isChecked","includes","setState","onChange","title","selectedOptions","push","event","selectAllCheckbox","target","selectedCheckboxState","checked","name","checkbox","console","log","sortedOptions","sort","manyOptions","length","Grid","container","className","item","xs","Checkbox","color","map","titleTransformFunc","displayCount","counts","React","Component","RangeFilter","onChangeDebounced","min","max","value_type","Math","values","debounce","sliderOnChange","textFieldName","value","current_min","current_max","undefined","minTitle","maxTitle","toText","style","padding","TextField","label","getMinTitle","variant","size","textFieldOnChange","align","getToText","getMaxTitle","Slider","valueLabelDisplay","step","Filter","filters","filtersInitializationHappened","filter","filterOnChange","createFilter","expandOrCollapse","filterTitle","stateKeyName","dependentFilter","dependentList","refsDict","getValues","newOptions","Set","forEach","add","Array","from","filterType","stateName","filterIndex","filterComponent","ref","curFilter","Fragment","onClick","Collapse","in","LenderInputs","key","replace","toLowerCase","split","word","charAt","toUpperCase","slice","join","Paper","IconButton","handleDeleteBtnClick","Object","keys","inputs","input","keyToTitle","Lender","lenderMenuItems","beginningState","lenderInputs","selectLender","selectTier","addLender","reset","deleteLenderInput","selectedTier","tierMenuItems","tierSelectDisabled","selectedLender","lenderSelectDisabled","currencyFields","error","percentageFields","isTextFieldsEnabled","nextProps","lenderName","MenuItem","lenderToPrograms","fieldLabel","newValue","isError","isNaN","newCurrencyFields","newPercentageFields","selectLenderName","tierName","selectIndex","hasAnyErrors","lenderInput","hasAnyErrorsInLenderInput","newLenderInputs","lenderInputIndex","splice","spacing","Select","disabled","width","currencyFieldLabel","sm","md","textboxOnChange","helperText","InputProps","startAdornment","InputAdornment","position","percentageFieldLabel","textAlign","Button","marginLeft","LeftPanel","handleChange","filterRef","createRef","lenderRef","parseProps","carDetails","selectedTabIndex","newSelectedTabIndex","str","result","substring","makes","makeToModelsDict","makeToCountDict","modelToCountDict","models","yearSet","i","carDetail","make","model","year","yearRangeList","filtersExpanded","convertStr","createRangeListContinuousValue","parseInt","lenderIdToLenderName","lenders","lender","lenderPrograms","lenderProgram","partsCount","current","getFilterValues","getLenderInputs","Tabs","Tab","lenderOnChange","domain","Car","carYear","details","carMake","carModel","carTrim","images","image","original","carImgSrc","detailsImages","displayOnlyMoney","cardMinHeight","Card","minHeight","CardContent","src","getCarTitle","clipLoaderCss","css","Loader","isVisible","hideLoader","timeout","setTimeout","display","justifyContent","children","CarShow","sortOptionIndex","selectSortOption","carOnClick","number","carDetail1","carDetail2","total_cost","reverseNumberSign","mileage","hasFilterValues","filterValues","filterValue","filterFieldName","filterTitleToFieldName","selectedOptionsSet","has","minVal","maxVal","Number","MAX_SAFE_INTEGER","sortCarDetails","history","results","carDetailsAfterFilterAndSort","lg","withRouter","Menubar","AppBar","isBigScreen","Toolbar","aria-label","aria-controls","aria-haspopup","menuBtnOnClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","closeMenu","globalDict","lenderData","HomePage","leftPanelRef","newFilterValues","smooth","backgroundColor","isLoading","carJson","lendersJson","lenderProgramsJson","CarDescription","getRowValue","trim","rowName","row","getRowWithName","matches","Table","TableRow","TableCell","colSpan","fontSize","CarImagesGallery","items","showPlayButton","showFullscreenButton","showThumbnails","CarShowElement","fieldName","convertDict","excludeCarDetailFields","convertFieldNameToLabel","isCurrencyField","convertToImages","convertToCarDetails","CarCalculation","filtersInputs","CarList","callOnChange","carIndex","detailsList","noCars","selectedCarIndex","previousBtnDisabled","nextBtnDisabled","next","previous","newCarIndex","updateBtnDisabled","startCarIndex","endCarIndex","index","height","alignItems","CarPage","location","goBack","selectCarInCarList","carDetailsAvailable","href","AppClass","lenderTermsJson","Promise","all","fetch","then","responses","response","json","jsons","convertKmToMileage","newLenderData","car","mileageLowerCase","floor","parseFloat","basename","process","path","App","theme","useTheme","mdUp","useMediaQuery","breakpoints","up","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","StyledTableCell","withStyles","head","palette","primary","main","common","white","body","StyledTableRow","root","background","default","CarCalculationClass","mileageToKms","addCurrencySymbol","abs","pv","rate","periods","payment","future","type","eval","pow","getLenderId","calculateProfitFirstInterest","filterInputs","interests","createCalculationDetail","profit","selectedInterest","lenderTerms","advance","interest","term","foundLenderTerm","foundLenderProgram","lenderId","lender_id","rateMin","rate_min","rateMax","rate_max","carKms","lenderTerm","min_kms","max_kms","maxFront","termType","x_clean","clean","average","rough","round","maxProfit","financed","holdBack","hold_back","funded","tradeAllowance","tradePayOff","downPayment","tradeAcv","paidOut","userInputTax","netPaid","calculationDetailsColumnHeaders","calculationDetailsValues","selectInterestEvent","selectedInterests","newCalculationDetailsValues","entries","isValidFilterInputs","calculationDetails","firstInterest","selectedLenderIndex","selectedTierIndex","lenderIndex","newInterest","header","columnValues","columnValue","interestMenuItems","tables","lenderCalculationDetailsValues","createCell","userInputsFilterData","createCalculationDetails","renderWithOneTable","renderWithThreeTables"],"mappings":"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","file":"static/js/main.aafd908e.chunk.js","sourcesContent":["import React from 'react';\nimport {Checkbox} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport './ListFilter.css';\n\nclass ListFilter extends React.Component{\n    constructor(props) {\n        super(props);\n        let optionCheckedDict = {};\n\n        for(let option of this.props.options){\n            optionCheckedDict[option] = true;\n        }\n\n        this.state = {\n            'Select All': true,\n            ...optionCheckedDict\n        };\n\n        this.selectAll = this.selectAll.bind(this);\n        this.optionOnchange = this.optionOnchange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.init){\n            let newState = {...this.state};\n\n            let checkedAll = true;\n\n            for(let option of this.props.options){\n                let isChecked = this.props.init.includes(option);\n                newState[option] = isChecked;\n\n                if(!isChecked) {\n                    checkedAll = false;\n                }\n            }\n\n            newState['Select All'] = checkedAll;\n\n            this.setState(newState, this.props.onChange);\n        }\n    }\n\n    getTitle(){\n        return this.props.title;\n    }\n\n    getValues(){\n        let selectedOptions = [];\n\n        for (let option of this.props.options){\n            if (this.state[option]){\n                selectedOptions.push(option);\n            }\n        }\n\n        return {\"selectedOptions\":selectedOptions};\n    }\n\n    selectAll(event){\n        let selectAllCheckbox = event.target;\n        let selectedCheckboxState = selectAllCheckbox.checked;\n        let newState = {...this.state};\n\n        for(let option of this.props.options){\n            if (selectAllCheckbox.checked){\n                newState[option] = true;\n            }else {\n                newState[option] = false;\n            }\n        }\n\n        newState['Select All'] = selectedCheckboxState;\n        this.setState(newState, this.props.onChange);\n    }\n\n    optionOnchange(event, name){\n\n        let checkbox = event.target;\n        let newState = {...this.state};\n        newState[name] = checkbox.checked;\n\n        let selectAll = true;\n\n        for(let option of this.props.options){\n            if(!newState[option]){\n                selectAll = false;\n            }\n        }\n\n        newState['Select All'] = selectAll;\n\n        this.setState(newState, this.props.onChange);\n        console.log((checkbox.checked?'Check ':'Unchecked ') + name);\n    }\n\n    render(){\n        let sortedOptions = [...this.props.options];\n        sortedOptions.sort();\n\n        let manyOptions = sortedOptions.length > 10;\n\n        return (\n            <Grid container className={'item_wrapper ' + (manyOptions?'many_options':'')}>\n                <Grid item xs={12}>\n                    <Checkbox checked={this.state['Select All']} color={\"primary\"} onChange={this.selectAll} />All\n                </Grid>\n                {\n                    sortedOptions.map(item => (\n                        <Grid item xs={12}>\n                            <Checkbox checked={this.state[item]} color={\"primary\"}\n                                      onChange={(event) => this.optionOnchange(event, item)}/>\n                            {this.props.titleTransformFunc?this.props.titleTransformFunc(item):item}\n                            {this.props.displayCount?<span className={\"filter_item_count\"}>  ({this.props.counts[item]})</span>:null}\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default ListFilter;","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport debounce from \"lodash/debounce\";\nimport Slider from '@material-ui/core/Slider';\n\nclass RangeFilter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let min = \"\";\n        let max = \"\";\n\n        if (this.props.value_type == \"discrete\"){\n            min = Math.min(...this.props.values);\n            max = Math.max(...this.props.values);\n        } else if (this.props.value_type == \"continuous\"){\n            min = this.props.values[0];\n            max = this.props.values[1];\n        }\n\n        this.state = {\n            \"min\":min,\n            \"max\":max,\n            \"current_min\":min,\n            \"current_max\":max\n        }\n\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 1000);\n        this.sliderOnChange = this.sliderOnChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.init){\n            this.setState({\"current_min\":this.props.init[\"min\"], \"current_max\":this.props.init[\"max\"]});\n        }\n    }\n\n    textFieldOnChange(event, textFieldName){\n        let newState = {};\n\n        newState[textFieldName] = event.target.value;\n\n        this.setState(newState);\n        this.onChangeDebounced();\n    }\n\n    onChangeDebounced = () => {\n        this.props.onChange();\n    }\n\n    getValues(){\n        return {\"min\":this.state.current_min, \"max\":this.state.current_max};\n    }\n\n    getMinTitle(){\n        return this.props.minTitle == undefined?\"Min\":this.props.minTitle;\n    }\n\n    getMaxTitle(){\n        return this.props.maxTitle == undefined?\"Max\":this.props.maxTitle;\n    }\n\n    getToText(){\n        return this.props.toText == undefined?\"To\":this.props.toText;\n    }\n\n    sliderOnChange(event, values){\n        this.setState({current_min:values[0], current_max:values[1]});\n        this.onChangeDebounced();\n    }\n\n    render(){\n        return (\n            <Grid container style={{padding:20}}>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"current_min\"]} label={this.getMinTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"current_min\")}/>\n                </Grid>\n                <Grid item xs={4} align={\"center\"}>\n                    {this.getToText()}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"current_max\"]} label={this.getMaxTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"current_max\")}/>\n                </Grid>\n                <Slider min={this.state.min} max={this.state.max} value={[this.state.current_min, this.state.current_max]} valueLabelDisplay=\"auto\" step={1} onChange={this.sliderOnChange}/>\n            </Grid>\n        )\n    }\n}\n\nexport default RangeFilter;","import React from 'react';\nimport ListFilter from \"./ListFilter\";\nimport RangeFilter from \"./RangeFilter\";\nimport {Collapse} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {filters:this.props.filters, filtersInitializationHappened:{}};\n\n        for(let filter of this.props.filters){\n            if (\"expand\" in filter) {\n                this.state[filter[\"title\"] + '_expand'] = filter[\"expand\"];\n            }else{\n                this.state[filter[\"title\"] + '_expand'] = true;\n            }\n        }\n\n        this.filterOnChange = this.filterOnChange.bind(this);\n        this.createFilter = this.createFilter.bind(this);\n        this.expandOrCollapse = this.expandOrCollapse.bind(this);\n    }\n\n    componentDidMount(){\n        let filtersInitializationHappened = {};\n\n        for(let filter of this.props.filters){\n            if(filter[\"init\"]){\n                filtersInitializationHappened[filter[\"title\"]] = true;\n            }\n        }\n\n        this.setState({filtersInitializationHappened:filtersInitializationHappened});\n    }\n\n    expandBtnOnClick(event, filterTitle) {\n        let stateKeyName = filterTitle + '_expand';\n        let newState = {};\n        newState[stateKeyName] = !this.state[stateKeyName];\n\n        this.setState(newState);\n    }\n\n    filterOnChange(event, filterTitle){\n\n        let newState = {...this.state};\n\n        for(let filter of newState.filters){\n            let isDependentList = filter[\"type\"] == \"list\" && \"dependent_filter\" in filter && \"dependent_list\" in filter;\n\n            if (isDependentList){\n                let dependentFilter = filter[\"dependent_filter\"];\n                let dependentList = filter[\"dependent_list\"];\n\n                if (this.refsDict[dependentFilter]) {\n                    let selectedOptions = this.refsDict[dependentFilter].getValues()[\"selectedOptions\"];\n                    let newOptions = new Set();\n\n                    for (let selectedOption of selectedOptions) {\n                        dependentList[selectedOption].forEach(newOptions.add, newOptions);\n                    }\n\n                    filter[\"options\"] = Array.from(newOptions);\n                }\n            }\n\n            if(this.state.filtersInitializationHappened[filter[\"title\"]]){\n                delete filter[\"init\"];\n            }\n        }\n\n        console.log(newState);\n        this.setState(newState, this.props.onChange);\n    }\n\n    getFilterValues(){\n        let values = {};\n\n        for(let title in this.refsDict){\n            let filterType = this.state.filters.filter(filter => filter[\"title\"]===title)[0][\"type\"];\n            values[title] = {\n                \"type\":filterType,\n                ...this.refsDict[title].getValues()\n            }\n        }\n\n        return values;\n    }\n\n    expandOrCollapse(event, filterTitle){\n        let stateName = filterTitle + '_expand';\n        let newState = {};\n\n        newState[stateName] = !this.state[stateName];\n        this.setState(newState);\n    }\n\n    createFilter(filter, filterIndex){\n        let lastFilterIndex = this.state.filters.length - 1;\n        let filterType = filter[\"type\"];\n        let filterComponent = undefined;\n\n        if (filterType == \"list\"){\n            filterComponent = <ListFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>;\n        }else if (filterType == \"range\"){\n            filterComponent = <RangeFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>\n        }\n\n        return (\n            <React.Fragment>\n                <Grid item xs={12} className={\"filter\"}>\n                    <Grid container className={\"expandable\"} onClick={(event) => this.expandOrCollapse(event, filter[\"title\"])}>\n                        <Grid item xs={10}>\n                            <span className={'filter_title'}>{filter[\"title\"]}</span>\n                        </Grid>\n                        <Grid item xs={2} align='right'>\n                            {this.state[filter[\"title\"] + \"_expand\"]?(<ExpandLess/>):(<ExpandMore />)}\n                        </Grid>\n                    </Grid>\n                    <Collapse in={this.state[filter[\"title\"] + \"_expand\"]}>\n                        {filterComponent}\n                    </Collapse>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n\n    render(){\n        this.refsDict = {};\n\n        return (\n            <Grid container className={\"filter_main_content\"}>\n                {\n                    this.state.filters.map(this.createFilter)\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport { Paper } from '@material-ui/core';\n\nclass LenderInputs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    keyToTitle(key){\n        let result = key.replace('_',' ');\n\n        return result\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    render(){\n        return (\n        <Paper style={{padding:10}}>\n            <Grid container>\n                <Grid item xs={12} align={\"right\"}>\n                    <IconButton color=\"secondary\" onClick={this.props.handleDeleteBtnClick}>\n                        <Close />\n                    </IconButton>\n                </Grid>\n                {\n                    Object.keys(this.props.inputs).map(input =>\n                        <React.Fragment>\n                            <Grid item xs={6}>\n                            {this.keyToTitle(input)}\n                            </Grid>\n                            <Grid item xs={6}>\n                                {this.props.inputs[input]}\n                            </Grid>\n                        </React.Fragment>)\n                }\n        </Grid>\n        </Paper>);\n    }\n}\n\nexport default LenderInputs;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport LenderInputs from \"./LenderInputs\";\nimport './Lender.css';\n\nclass Lender extends React.Component {\n    beginningState(){\n        return {\n            selectedTier:'NONE',\n            tierMenuItems:[],\n            tierSelectDisabled:true,\n\n            selectedLender:'NONE',\n            lenderSelectDisabled:false,\n\n            currencyFields:{\n                \"Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Down Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Allowance\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Payoff\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trace a.c.v\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            percentageFields:{\n                \"Tax\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            isTextFieldsEnabled:false\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lenderMenuItems:[],\n            ...this.beginningState(),\n            lenderInputs:[]\n        }\n\n        this.selectLender = this.selectLender.bind(this);\n        this.selectTier = this.selectTier.bind(this);\n        this.addLender = this.addLender.bind(this);\n        this.reset = this.reset.bind(this);\n        this.deleteLenderInput = this.deleteLenderInput.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let lenderMenuItems = [];\n\n        lenderMenuItems.push(<MenuItem value={'NONE'}>Please select lender</MenuItem>);\n\n        for (let lenderName in nextProps.lenderToPrograms){\n            lenderMenuItems.push(<MenuItem value={lenderName}>{lenderName}</MenuItem>);\n        }\n\n        this.setState({lenderMenuItems:lenderMenuItems});\n    }\n\n    textboxOnChange(event, fieldLabel){\n        let newValue = event.target.value;\n        let isError = isNaN(newValue);\n        console.log(isError);\n\n        if (fieldLabel in this.state.currencyFields){\n            let newCurrencyFields = {...this.state.currencyFields};\n            newCurrencyFields[fieldLabel] =  {\n                value:newValue,\n                error:isError\n            }\n\n            this.setState({currencyFields:newCurrencyFields});\n        }else if (fieldLabel in this.state.percentageFields){\n            let newPercentageFields = {...this.state.percentageFields};\n            newPercentageFields[fieldLabel] = {\n                value:newValue,\n                error:isError\n            }\n            this.setState({percentageFields:newPercentageFields})\n        }\n    }\n\n    selectLender(event){\n        let selectLenderName = event.target.value;\n\n        let tierSelectDisabled = true;\n\n        if (selectLenderName != 'NONE'){\n            tierSelectDisabled = false;\n        }\n\n        let tierMenuItems = [];\n        tierMenuItems.push(<MenuItem value={'NONE'}>Please select tier</MenuItem>);\n\n        for(let tierName of this.props.lenderToPrograms[selectLenderName]) {\n            tierMenuItems.push(<MenuItem value={tierName}>{tierName}</MenuItem>);\n        }\n\n        this.setState({\n            selectedLender:selectLenderName,\n            selectedTier:'NONE',\n            tierSelectDisabled: tierSelectDisabled,\n            tierMenuItems:tierMenuItems\n        });\n    }\n\n    selectTier(event){\n        let selectIndex = event.target.value;\n\n        this.setState({\n            selectedTier : selectIndex,\n            isTextFieldsEnabled:true\n        })\n    }\n\n    hasAnyErrorsInLenderInput(){\n        let hasAnyErrors = false;\n\n        Object.keys(this.state.currencyFields).forEach((key) => {\n            if (this.state.currencyFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        Object.keys(this.state.percentageFields).forEach((key) => {\n            if (this.state.percentageFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        return hasAnyErrors;\n    }\n\n    addLender(event){\n        let lenderInput = {};\n        let hasAnyErrors = this.hasAnyErrorsInLenderInput();\n\n        if (this.state.selectedLender != 'NONE' && this.state.selectedTier != 'NONE' && !hasAnyErrors) {\n            lenderInput[\"lender\"] = this.state.selectedLender;\n            lenderInput[\"tier\"] = this.state.selectedTier;\n            lenderInput[\"payment\"] = this.state.currencyFields[\"Payment\"].value;\n            lenderInput[\"down payment\"] = this.state.currencyFields[\"Down Payment\"].value;\n            lenderInput[\"trade allowance\"] = this.state.currencyFields[\"Trade Allowance\"].value;\n            lenderInput[\"trade payoff\"] = this.state.currencyFields[\"Trade Payoff\"].value;\n            lenderInput[\"trade a.c.v\"] = this.state.currencyFields[\"Trace a.c.v\"].value;\n            lenderInput[\"tax\"] = this.state.percentageFields[\"Tax\"].value;\n\n            let newLenderInputs = this.state.lenderInputs;\n            newLenderInputs.push(lenderInput);\n\n            this.setState({lenderInputs: newLenderInputs}, this.props.onChange);\n        }\n    }\n\n    reset(event){\n        this.setState({...this.beginningState()});\n    }\n\n    deleteLenderInput(event, lenderInputIndex){\n        let newLenderInputs = this.state.lenderInputs;\n\n        newLenderInputs.splice(lenderInputIndex, 1);\n\n        this.setState({lenderInputs:newLenderInputs}, this.props.onChange);\n    }\n\n    getLenderInputs(){\n        return this.state.lenderInputs;\n    }\n\n    render(){\n        return (\n          <Grid container className={\"lender_main_content padding10\"} spacing={2}>\n              <Grid item xs={12}>\n                  <Select onChange={this.selectLender} value={this.state.selectedLender} disabled={this.state.lenderSelectDisabled} style={{width:'100%'}}>\n                      {this.state.lenderMenuItems}\n                  </Select>\n              </Grid>\n              <Grid item xs={12}>\n                  <Select onChange={this.selectTier} value={this.state.selectedTier} disabled={this.state.tierSelectDisabled} style={{width:'100%'}}>\n                      {this.state.tierMenuItems}\n                  </Select>\n              </Grid>\n              {Object.keys(this.state.currencyFields).map(currencyFieldLabel => (\n                      <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                      label={currencyFieldLabel}\n                                                                                      variant=\"outlined\"\n                                                                                      onChange={(event) => this.textboxOnChange(event, currencyFieldLabel)}\n                                                                                      error = {this.state.currencyFields[currencyFieldLabel].error}\n                                                                                      helperText={this.state.currencyFields[currencyFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                      value={this.state.currencyFields[currencyFieldLabel].value}\n                                                                                      InputProps={{\n                                                                                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                                                                      }\n                                                                                      }\n                                                                                      size={\"small\"}\n                      /></Grid>\n                  )\n              )\n              }\n              {Object.keys(this.state.percentageFields).map(percentageFieldLabel => (\n                      <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                      label={percentageFieldLabel}\n                                                                                      variant=\"outlined\"\n                                                                                      onChange={(event) => this.textboxOnChange(event, percentageFieldLabel)}\n                                                                                      error = {this.state.percentageFields[percentageFieldLabel].error}\n                                                                                      helperText={this.state.percentageFields[percentageFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                      value={this.state.percentageFields[percentageFieldLabel].value}\n                                                                                      InputProps={{\n                                                                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                                                                                      }}\n                                                                                      size={\"small\"}\n                      /></Grid>\n                  )\n              )\n              }\n              <Grid item xs={12} style={{textAlign:\"center\"}}>\n                  <Button variant=\"contained\" color={\"primary\"} onClick={this.addLender}>Add</Button>\n                  <Button variant=\"contained\" color={\"secondary\"} onClick={this.reset} style={{marginLeft:10}}>Reset</Button>\n              </Grid>\n              {\n                  this.state.lenderInputs.map((lenderInput, lenderInputIndex) =>\n                      <Grid item xs={12}>\n                          <LenderInputs inputs={lenderInput} handleDeleteBtnClick={(event) => this.deleteLenderInput(lenderInputIndex)}/>\n                      </Grid>)\n              }\n          </Grid>\n        );\n    }\n}\n\nexport default Lender;","import React from 'react';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Filter from './Filter';\nimport './LeftPanel.css';\nimport Lender from './Lender';\n\nclass LeftPanel extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.filterRef = React.createRef();\n        this.lenderRef = React.createRef();\n        const {filters, lenderToPrograms, carDetails} = this.parseProps(this.props);\n        console.log(this.props);\n        console.log(filters);\n\n        this.state = {\n            selectedTabIndex:0,\n            filters:filters,\n            lenderToPrograms:lenderToPrograms,\n            carDetails:carDetails\n        }\n    }\n\n    handleChange(event, newSelectedTabIndex){\n        this.setState({selectedTabIndex:newSelectedTabIndex});\n    }\n\n    convertStr(str){\n        let words = str.split(/(\\s+)/);\n\n        return words.map(word => {\n            let result = '';\n\n            if (word.length > 0){\n                result += word.charAt(0).toUpperCase();\n            }\n\n            if (word.length > 1){\n                result += word.substring(1).toLowerCase();\n            }\n\n            return result;\n        }).join(' ');\n    }\n\n    parseProps(props) {\n        let makes = new Set();\n        let makeToModelsDict = {};\n        let makeToCountDict = {};\n        let modelToCountDict = {};\n        let models = new Set();\n        let yearSet = new Set();\n\n        for (let i = 0; i < props.carDetails.length; i++) {\n            let carDetail = props.carDetails[i];\n            let make = carDetail[\"make\"];\n            let model = carDetail[\"model\"];\n            let year = carDetail[\"year\"];\n\n            makes.add(make);\n            models.add(model);\n            if (!isNaN(year)) {\n                yearSet.add(year);\n            }\n\n            if (!(make in makeToModelsDict)) {\n                makeToModelsDict[make] = new Set();\n            }\n\n            makeToModelsDict[make].add(model);\n\n            if(!(make in makeToCountDict)){\n                makeToCountDict[make] = 0;\n            }\n\n            makeToCountDict[make] = makeToCountDict[make] + 1;\n\n            if(!(model in modelToCountDict)){\n                modelToCountDict[model] = 0;\n            }\n\n            modelToCountDict[model] = modelToCountDict[model] + 1;\n        }\n\n        let yearRangeList = [];\n\n        // Create year range list\n        for (let year of yearSet) {\n            yearRangeList.push([year]);\n        }\n\n        let filters = [\n            {\n                \"title\": \"Make\",\n                \"type\": \"list\",\n                \"options\": Array.from(makes),\n                \"expand\": this.props.filtersExpanded,\n                \"displayCount\":true,\n                \"counts\": makeToCountDict,\n                \"titleTransformFunc\":this.convertStr\n            },\n            {\n                \"title\": \"Model\",\n                \"type\": \"list\",\n                \"dependent_filter\": \"Make\",\n                \"dependent_list\": makeToModelsDict,\n                \"options\": Array.from(models),\n                \"expand\": this.props.filtersExpanded,\n                \"displayCount\":true,\n                \"counts\":modelToCountDict,\n                \"titleTransformFunc\":this.convertStr\n            },\n            {\n                \"title\": \"Year\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"discrete\",\n                \"values\":yearRangeList,\n                \"expand\": this.props.filtersExpanded\n            },\n            {\n                \"title\": \"Mileage\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"continuous\",\n                \"values\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"mileage\"])), 10),\n                \"expand\": this.props.filtersExpanded\n            },\n            {\n                \"title\": \"Total cost\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"continuous\",\n                \"values\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"total_cost\"])), 10),\n                \"expand\": this.props.filtersExpanded\n            }\n        ];\n\n        if(this.props.init){\n            for(let filterTitle in this.props.init){\n                for(let filter of filters){\n                    if (filter[\"title\"] == filterTitle){\n                        if (filter[\"type\"] == \"list\"){\n                            filter[\"init\"] = this.props.init[filterTitle][\"selectedOptions\"];\n                        }else{\n                            filter[\"init\"] = this.props.init[filterTitle];\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        let lenderToPrograms = {};\n        let lenderIdToLenderName = {};\n        props.lenders.forEach(lender => {\n            lenderIdToLenderName[lender[\"id\"]] = lender[\"name\"];\n        });\n\n        props.lenderPrograms.forEach(lenderProgram => {\n            let lenderName = lenderIdToLenderName[lenderProgram[\"lender_id\"]];\n\n            if (!(lenderName in lenderToPrograms)) {\n                lenderToPrograms[lenderName] = [];\n            }\n\n            lenderToPrograms[lenderName].push(lenderProgram[\"name\"]);\n        });\n\n        return {filters: filters, lenderToPrograms: lenderToPrograms, carDetails: props.carDetails};\n    }\n\n    createRangeListContinuousValue(values, partsCount){\n        let min = Math.min(...values);\n        let max = Math.max(...values);\n        let x = (max - min)/partsCount;\n\n        return [min, max];\n    }\n\n    getFilterValues(){\n        return this.filterRef.current.getFilterValues();\n    }\n\n    getLenderInputs(){\n        return this.lenderRef.current.getLenderInputs();\n    }\n\n    render(){\n        return (\n        <React.Fragment>\n            <Tabs value={this.state.selectedTabIndex} onChange={this.handleChange}>\n                <Tab label={\"Filter\"} className={this.state.selectedTabIndex==0?\"tab_selected\":\"tab_deselected\"}/>\n                <Tab label={\"Lender\"} className={this.state.selectedTabIndex==1?\"tab_selected\":\"tab_deselected\"} />\n            </Tabs>\n            <div className={this.state.selectedTabIndex==0?'':'hide'}>\n                <Filter ref={this.filterRef} filters={this.state.filters}\n                        onChange={this.props.filterOnChange}\n                />\n            </div>\n            <div className={this.state.selectedTabIndex==1?'':'hide'}>\n                <Lender ref={this.lenderRef} lenderToPrograms={this.state.lenderToPrograms} onChange={this.props.lenderOnChange}/>\n            </div>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default LeftPanel;","var domain = 'https://lender-filter-backend-test.herokuapp.com';\n\nfunction fetchCars(){\n    return fetch(`${domain}/cars/`);\n}\n\nfunction fetchLenders(){\n    return fetch(`${domain}/lenders/`);\n}\n\nfunction fetchLenderPrograms(){\n    return fetch(`${domain}/lenders/programs/`);\n}\n\nfunction fetchLenderTerms(){\n    return fetch(`${domain}/lenders/terms/`)\n}\n\n\nexport {fetchCars, fetchLenders, fetchLenderPrograms, fetchLenderTerms};","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from \"@material-ui/core/Grid\";\nimport ImageGallery from \"react-image-gallery\";\n\nclass Car extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    getCarTitle(){\n        let carYear = this.props.details['year'];\n        let carMake = this.props.details['make'];\n        let carModel = this.props.details['model'];\n        let carTrim = this.props.details['trim'];\n\n        return `${carYear} ${carMake} ${carModel} ${carTrim}`;\n    }\n\n    convertImages(images){\n        return images.map(image => {return {original:image}});\n    }\n\n    render(){\n        let carImgSrc = '';\n        let detailsImages = this.props.details[\"images\"];\n\n        if (detailsImages && detailsImages.length > 0){\n            carImgSrc = detailsImages[0][\"src\"];\n        }\n\n        let displayOnlyMoney = this.props.displayOnlyMoney;\n        let cardMinHeight = 250;\n        if (displayOnlyMoney){\n            cardMinHeight = 160;\n        }\n\n        return (\n            <Card className={\"car\"} style={{minHeight:cardMinHeight}} onClick={(event) => {\n                if(this.props.onClick)\n                    this.props.onClick(event, this.props.details)\n            }}>\n                <CardContent>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <img src={carImgSrc} style={{width:'100%'}}/>\n                        </Grid>\n                        {displayOnlyMoney\n                            ?(\n                                <Grid item xs={12} style={{textAlign:'center'}}>\n                                    <span className={\"car_total_cost\"}>${this.props.details['total_cost']}</span>\n                                </Grid>\n                            ):(\n                                <>\n                                    <Grid item xs={12}>\n                                        <span className={\"car_title\"}>{this.getCarTitle()}</span>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <span className={\"car_total_cost\"}>${this.props.details['total_cost']}</span>\n                                    </Grid>\n                                    <Grid item xs={6} align={\"right\"}>\n                                        <span className={\"car_mileage\"}>{this.props.details['mileage']} mi.</span>\n                                    </Grid>\n                                </>\n                            )\n                        }\n                    </Grid>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default Car;","import {css} from \"@emotion/core\";\nimport * as React from \"react\";\nimport {ClipLoader} from \"react-spinners\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass Loader extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible:true\n        }\n\n        this.hideLoader = this.hideLoader.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({isVisible: true}, this.hideLoader);\n    }\n\n    hideLoader(){\n        if(this.props.timeout)\n            setTimeout(() => {\n                this.setState({isVisible:false})\n            }, this.props.timeout);\n    }\n\n    componentDidMount() {\n        this.hideLoader();\n    }\n\n    render(){\n        return this.state.isVisible?<div style={{display:'flex', justifyContent:'center'}}><ClipLoader css={clipLoaderCss}/></div>:this.props.children;\n    }\n}\n\nexport default Loader;","import * as React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {styled, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {css} from \"@emotion/core\";\nimport {ClipLoader} from \"react-spinners\";\nimport './CarShow.css';\nimport {fetchCars} from \"./Api\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {calculateProfitFirstInterest} from \"./CarCalculation\";\nimport Car from './Car.js';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Loader from './Loader';\nimport { withRouter } from \"react-router\";\n\nclass CarShow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sortOptionIndex:-1\n        }\n\n        this.selectSortOption = this.selectSortOption.bind(this);\n        this.carOnClick = this.carOnClick.bind(this);\n    }\n\n    filterTitleToFieldName(filterTitle){\n        let dict = {\n            \"Make\":\"make\",\n            \"Model\":\"model\",\n            \"Year\":\"year\",\n            \"Total cost\":\"total_cost\",\n            \"Mileage\":\"mileage\"\n        }\n\n        return dict[filterTitle];\n    }\n\n    reverseNumberSign(number){\n        return -number;\n    }\n\n    sortCarDetails(carDetails, sortOptionIndex){\n        switch(sortOptionIndex){\n            case 1:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost));\n                break;\n            case 2:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost)));\n                break;\n            case 3:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage));\n                break;\n            case 4:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage)));\n                break;\n            case 5:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.year) - parseInt(carDetail2.year)));\n                break;\n            case 6:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.year) - parseInt(carDetail2.year));\n                break;\n        }\n\n        return carDetails;\n    }\n\n    carDetails(){\n        let filterValuesLength = Object.keys(this.props.filterValues).length;\n        let hasFilterValues = filterValuesLength > 0;\n        let carDetails = [...this.props.carDetails];\n\n        if (hasFilterValues) {\n\n\n            for(let filterTitle in this.props.filterValues){\n                let filterValue = this.props.filterValues[filterTitle];\n                let filterType = filterValue[\"type\"];\n                let filterFieldName = this.filterTitleToFieldName(filterTitle);\n\n                if (filterType == \"list\"){\n                    let selectedOptions = filterValue[\"selectedOptions\"];\n                    let selectedOptionsSet = new Set(selectedOptions);\n\n                    carDetails = carDetails.filter(carDetail => selectedOptionsSet.has(carDetail[filterFieldName]));\n                }else if(filterType == \"range\"){\n                    let minVal = filterValue[\"min\"];\n                    let maxVal = filterValue[\"max\"];\n\n                    if (minVal !== \"\" || maxVal != \"\") {\n                        if (minVal == \"\") {\n                            minVal = 0;\n                        }\n\n                        if (maxVal == \"\") {\n                            maxVal = Number.MAX_SAFE_INTEGER;\n                        }\n\n                        carDetails = carDetails.filter(carDetail => carDetail[filterFieldName] >= minVal && carDetail[filterFieldName] <= maxVal);\n                    }\n                }\n            }\n\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }else{\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }\n    }\n\n    selectSortOption(event){\n        let sortOptionIndex = event.target.value;\n\n        this.setState({sortOptionIndex:sortOptionIndex});\n    }\n\n    carOnClick(event, carDetails){\n        const {history} = this.props;\n\n        history.push('/car', {carDetails:carDetails, results:this.carDetails()});\n    }\n\n    render() {\n        let carDetailsAfterFilterAndSort = this.carDetails();\n\n        return (\n            <>\n                {/*<Loader timeout={500}>*/}\n                    <Grid container spacing={2} className={\"carshow\"}>\n                    <Grid item xs={6}>\n                        <span className={\"matches\"}>{carDetailsAfterFilterAndSort.length + \" matches\"}</span>\n                    </Grid>\n                    <Grid item xs={6} align={\"right\"}>\n                        <span className={\"sortBy\"}>Sort by </span>\n                        <Select className={\"sort_by_select_option\"} value={this.state.sortOptionIndex} onChange={this.selectSortOption}>\n                            <MenuItem value={1}>Lowest Price</MenuItem>\n                            <MenuItem value={2}>Highest Price</MenuItem>\n                            <MenuItem value={3}>Lowest Mileage</MenuItem>\n                            <MenuItem value={4}>Highest Mileage</MenuItem>\n                            <MenuItem value={5}>Newest Year</MenuItem>\n                            <MenuItem value={6}>Oldest Year</MenuItem>\n                        </Select>\n                    </Grid>\n                    {carDetailsAfterFilterAndSort.map(carDetail => (\n                       <Grid item xs={12} md={4} lg={3}>\n                           <Car details={carDetail} onClick={this.carOnClick}/>\n                       </Grid>\n                    ))}\n                    </Grid>\n                {/*</Loader>*/}\n            </>\n        );\n    }\n}\n\nexport default withRouter(CarShow);","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Menubar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        return (\n            <>\n                        <AppBar position=\"static\">\n                            {this.props.isBigScreen ? (\n                                <React.Fragment>\n                                    <Tabs>\n                                        <Tab label=\"Home\"/>\n                                        <Tab label=\"Rate Sheet\" disabled/>\n                                        <Tab label=\"Quick Quote\" disabled/>\n                                        <Tab label=\"Lender Assist\" disabled/>\n                                    </Tabs>\n                                </React.Fragment>) : (\n                                <Toolbar>\n                                    <IconButton\n                                        aria-label=\"menu\"\n                                        aria-controls=\"menu-appbar\"\n                                        aria-haspopup=\"true\"\n                                        style={{\"color\":\"white\"}}\n                                        onClick={this.menuBtnOnClick}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"menu-appbar\"\n                                        anchorEl={this.state.anchorEl}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        open={Boolean(this.state.anchorEl)}\n                                        onClose={this.closeMenu}\n                                    >\n                                        <MenuItem>HOME</MenuItem>\n                                        <MenuItem>RATE SHEET</MenuItem>\n                                        <MenuItem>QUICK QUOTE</MenuItem>\n                                        <MenuItem>LENDER ASSIST</MenuItem>\n                                    </Menu>\n                                </Toolbar>\n                            )\n                            }\n                        </AppBar>\n            </>\n        )\n    }\n}\n\nexport default Menubar;","const globalDict = {\n    filterValues:null,\n    lenderInputs:null,\n    lenderData:null\n}\n\nexport function setFilterValues(newFilterValues){\n    console.log('setFilterValues');\n    console.log(newFilterValues);\n    globalDict.filterValues = {...newFilterValues};\n}\n\nexport function getFilterValues(){\n    if (globalDict.filterValues)\n        return {...globalDict.filterValues};\n\n    return null;\n}\n\nexport function setLenderInputs(newLenderInputs){\n    globalDict.lenderInputs = [...newLenderInputs];\n}\n\nexport function getLenderInputs(){\n    if (globalDict.lenderInputs)\n        return [...globalDict.lenderInputs];\n\n    return null;\n}\n\nexport function setLenderData(newLenderData){\n    globalDict.lenderData = [...newLenderData];\n}\n\nexport function getLenderData(){\n    if (globalDict.lenderData)\n        return [...globalDict.lenderData];\n\n    return null;\n}","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LeftPanel from \"./LeftPanel\";\nimport {ClipLoader} from \"react-spinners\";\nimport CarShow from \"./CarShow\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport {css} from \"@emotion/core\";\nimport Menubar from \"./Menubar\";\nimport Loader from './Loader';\nimport {getFilterValues, setFilterValues, setLenderInputs} from \"./GlobalVariables\";\n\nclass HomePage extends React.Component{\n    constructor() {\n        super();\n\n        this.leftPanelRef = React.createRef();\n        this.state = {\n            filterValues: {}\n        }\n\n        this.filterOnChange = this.filterOnChange.bind(this);\n        this.lenderOnChange = this.lenderOnChange.bind(this);\n    }\n\n    filterOnChange(){\n        let filterValues = this.leftPanelRef.current.getFilterValues();\n\n        this.setState({filterValues:filterValues}, () => {\n            setFilterValues(filterValues);\n        });\n    }\n\n    lenderOnChange(){\n        let lenderInputs = this.leftPanelRef.current.getLenderInputs();\n        console.log(lenderInputs);\n\n        setLenderInputs(lenderInputs);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ScrollToTop smooth />\n                <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                    <Grid item md={2} xs={0} />\n                    <Grid item md={8} xs={12}>\n                        <Menubar isBigScreen={this.props.isBigScreen}/>\n                    </Grid>\n                    <Grid item md={2} xs={0}/>\n                    <Grid item sm={2} xs={0}/>\n                    {this.props.isLoading?(\n                        <Grid item xs={12}>\n                            <Loader />\n                        </Grid>\n                    ):(\n                        <>\n                        <Grid item md={2} sm={3} xs={12}>\n                            <LeftPanel init={getFilterValues()} filtersExpanded={this.props.isBigScreen} ref={this.leftPanelRef} carDetails={this.props.carJson} lenders={this.props.lendersJson} lenderPrograms={this.props.lenderProgramsJson} filterOnChange={this.filterOnChange} lenderOnChange={this.lenderOnChange}/>\n                        </Grid>\n                        <Grid item md={6} sm={7} xs={12}>\n                            <CarShow carDetails={this.props.carJson} filterValues={this.state.filterValues}/>\n                        </Grid>\n                        </>\n                    )}\n                    <Grid item sm={2} xs={0}/>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default HomePage;","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default class CarDescription extends React.Component {\n    getCarTitle() {\n        let year = this.getRowValue('YEAR');\n        let make = this.getRowValue('MAKE');\n        let model = this.getRowValue('MODEL');\n        let trim = this.getRowValue('TRIM');\n\n        return `${year} ${make} ${model} ${trim}`;\n    }\n\n    getRowValue(rowName){\n        let row = this.getRowWithName(rowName);\n\n        if (row != null){\n            return row.value;\n        }\n\n        return '';\n    }\n\n    getRowWithName(rowName){\n        let matches = this.props.details.filter(row => (row.name == rowName));\n\n        if (matches.length > 0){\n            return matches[0];\n        }\n\n        return null;\n    }\n    render() {\n        return (\n            <Paper style={{padding: \"20px\", backgroundColor: \"rgb(247, 248, 248)\"}}>\n                <Table>\n                    <TableRow>\n                        <TableCell colSpan={2} style={{textAlign: \"center\"}}><b\n                            style={{fontSize: \"1.2rem\"}}>{this.getCarTitle()}</b></TableCell>\n                    </TableRow>\n                    {this.props.details.map(row => (\n                        <TableRow>\n                            <TableCell style={{padding: \"0px\"}}>\n                                <b>{row.name}</b>\n                            </TableCell>\n                            <TableCell style={{padding: \"0px\"}}>\n                                {row.value}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </Table>\n            </Paper>\n        )\n    }\n}","import * as React from \"react\";\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './CarImagesGallery.css';\n\nexport default class CarImagesGallery extends React.Component{\n    render(){\n        return (\n            <ImageGallery items={this.props.images} showPlayButton={false} showFullscreenButton={false} showThumbnails={false}/>\n        );\n    }\n}","import * as React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CarDescription from \"./CarDescription\";\nimport CarCalculation from \"./CarCalculation\";\nimport CarImagesGallery from \"./CarImagesGallery\";\nimport CarShowElementButtons from \"./CarShowElementButtons\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElement extends React.Component{\n    excludeCarDetailFields(fieldName){\n        let excludedFields = ['id', 'images', 'img_url', 'x_clean', 'clean', 'average', 'rough', 'series'];\n\n        return excludedFields.includes(fieldName);\n    }\n\n    convertFieldNameToLabel(fieldName){\n        let convertDict = {\n            'total_cost': 'TOTAL COST'\n        }\n\n        if (fieldName in convertDict){\n            return convertDict[fieldName];\n        }\n\n        return fieldName\n    }\n\n    isCurrencyField(fieldName){\n        return ['total_cost'].includes(fieldName);\n    }\n    convertToCarDetails(carJson){\n        let result = [];\n        let currencySymbol = '$';\n\n        for(let key in carJson){\n            if (!this.excludeCarDetailFields(key)){\n                let name = this.convertFieldNameToLabel(key).toUpperCase();\n                let value = carJson[key];\n\n                if (this.isCurrencyField(key)){\n                    value = currencySymbol + value;\n                }\n\n                result.push({\n                    name: name,\n                    value: value\n                });\n            }\n        }\n\n        return result;\n    }\n\n    convertToImages(carDetail){\n        console.log(carDetail);\n\n        let images = [];\n        for(let image of carDetail[\"images\"]){\n            console.log(image);\n            images.push({original:image[\"src\"]});\n        }\n\n        console.log(images);\n        return images;\n    }\n\n    render() {\n        console.log(this.props.details);\n\n        return (\n           <Card style={{width:\"100%\"}}>\n               <CardContent>\n                   <Grid container spacing={2}>\n                       <Grid item xs={12} lg={7}>\n                            <CarImagesGallery images={this.convertToImages(this.props.details)}/>\n                       </Grid>\n                       <Grid item xs={12} lg={5}>\n                           <CarDescription details={this.convertToCarDetails(this.props.details)}/>\n                       </Grid>\n                       <Grid item xs={12}>\n                           <CarCalculation filtersInputs={this.props.filtersInputs} lenderData={this.props.lenderData} details={this.props.details}/>\n                       </Grid>\n                   </Grid>\n               </CardContent>\n           </Card>\n        )\n    }\n}","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElementButtons extends React.Component{\n    render(){\n        return <React.Fragment>\n            <Grid container spacing={1}>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Save</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Pictures</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Breakdown</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Send</Button>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    }\n}","import React from \"react\";\nimport Car from './Car';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport './CarList.css';\n\nexport default class CarList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let noCars = this.props.detailsList.length  == 0;\n\n        this.state = {\n            selectedCarIndex:0,\n            previousBtnDisabled:true,\n            nextBtnDisabled:noCars\n        }\n\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.carOnClick = this.carOnClick.bind(this);\n    }\n\n    updateBtnDisabled(selectedCarIndex){\n        return {\n            previousBtnDisabled:selectedCarIndex == 0,\n            nextBtnDisabled:(selectedCarIndex == this.props.detailsList.length - 1)\n        };\n    }\n\n    callOnChange = (carIndex) => {\n        if (this.props.onChange)\n            this.props.onChange(this.props.detailsList[carIndex]);\n    }\n\n    previous(){\n        if(this.state.selectedCarIndex > 0) {\n            let newCarIndex = (this.state.selectedCarIndex - 1);\n\n            this.setState({selectedCarIndex: newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    next(){\n        if(this.state.selectedCarIndex < this.props.detailsList.length - 1){\n            let newCarIndex = (this.state.selectedCarIndex + 1);\n\n            this.setState({selectedCarIndex:newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    carOnClick(carIndex){\n        this.setState({selectedCarIndex:carIndex}, this.callOnChange(carIndex));\n    }\n\n    render(){\n        let startCarIndex = -1;\n        let endCarIndex = -1;\n\n        if (this.state.selectedCarIndex - 2 >= 0 && this.state.selectedCarIndex + 2 < this.props.detailsList.length){\n            startCarIndex = this.state.selectedCarIndex - 2;\n            endCarIndex = this.state.selectedCarIndex + 2;\n        }else if(this.state.selectedCarIndex - 2 < 0){\n            startCarIndex = 0;\n            endCarIndex = 4;\n        }else if(this.state.selectedCarIndex + 2 >= this.props.detailsList.length){\n            endCarIndex = this.props.detailsList.length;\n            startCarIndex = this.props.detailsList.length - 5;\n        }\n\n        console.log('selectedCarIndex = ' + this.state.selectedCarIndex);\n        console.log('startCarIndex = ' + startCarIndex);\n        console.log('endCarIndex = ' + endCarIndex);\n\n        return (\n            <Grid container style={{minHeight: 200}}>\n                {\n                    this.props.detailsList.slice(startCarIndex, endCarIndex + 1).map((details, index) =>\n                        <Grid item xs={2} style={{padding:10}}>\n                            <div className={(startCarIndex + index == this.state.selectedCarIndex)?\"selected_car\":\"\"}>\n                                <Car displayOnlyMoney={true} details={details} onClick={(event, carDetails) => this.carOnClick(startCarIndex + index)}/>\n                            </div>\n                        </Grid>\n                    )\n                }\n                <Grid item xs={2}>\n                    <div style={{display:'flex', width:'100%', height:'100%', alignItems: 'center', justifyContent:\"space-around\"}}>\n                        <Button disabled={this.state.previousBtnDisabled} variant=\"contained\" onClick={this.previous}>Prev</Button>\n                        <Button disabled={this.state.nextBtnDisabled} variant=\"contained\" onClick={this.next}>Next</Button>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Menubar from \"./Menubar\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport CarShowElement from \"./CarShowElement\";\nimport CarList from \"./CarList\";\nimport {getLenderData, getLenderInputs} from \"./GlobalVariables\";\n\nclass CarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const {location} = this.props;\n\n        let carDetails = null;\n\n        if (location.state.carDetails){\n            carDetails = location.state.carDetails;\n        }\n\n        this.state = {\n            carDetails: location.state.carDetails\n        }\n\n        this.goBack = this.goBack.bind(this);\n        this.selectCarInCarList = this.selectCarInCarList.bind(this);\n    }\n\n    goBack(){\n        const {history} = this.props;\n\n        history.push('/');\n    }\n\n    selectCarInCarList(carDetails){\n        this.setState({carDetails:carDetails});\n    }\n\n    render() {\n        const {history, location} = this.props;\n        let results = [];\n\n        if (location.state.results){\n            results = location.state.results;\n        }\n\n        let carDetailsAvailable = location.state && location.state.carDetails;\n        let lenderInputs = getLenderInputs();\n\n        if (lenderInputs == null){\n            lenderInputs = [];\n        }\n\n        return (\n            <>\n                <ScrollToTop smooth />\n                <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                    <Grid item md={2} xs={0} />\n                    <Grid item md={8} xs={12}>\n                        <Menubar isBigScreen={this.props.isBigScreen}/>\n                    </Grid>\n                    <Grid item md={2} xs={0}/>\n                    <Grid item md={2} xs={0} />\n                    <Grid item md={8} xs={12}>\n                        <Grid container item>\n                            <Grid item xs={12}>\n                                <BsArrowLeft /> <a href={\"#\"} onClick={this.goBack}>Search Results</a>\n                            </Grid>\n                            <Grid item xs={12}>\n                                    <CarList detailsList={results} onChange={this.selectCarInCarList}/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                {carDetailsAvailable?<CarShowElement filtersInputs={lenderInputs} lenderData={getLenderData()} details={this.state.carDetails}/>:'Not found'}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item md={2} xs={0}/>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default withRouter(CarPage);","import React from 'react';\nimport './App.css';\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport \"react-scroll-to-top/lib/index.css\";\nimport HomePage from \"./HomePage\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CarPage from \"./CarPage\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport {setLenderData} from \"./GlobalVariables\";\n\nconst App = (props) => {\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <AppClass isBigScreen={mdUp}/>\n}\n\n\nclass AppClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            carJson:[],\n            lendersJson:[],\n            lenderTermsJson:[],\n            lenderProgramsJson:[],\n            isLoading: true\n        }\n\n        Promise.all([fetchCars(), fetchLenders(), fetchLenderTerms(), fetchLenderPrograms()]).then(responses => Promise.all(responses.map(response => response.json()))).then(jsons => {\n            let carJson = jsons[0];\n            carJson = this.convertKmToMileage(carJson);\n\n            let lendersJson = jsons[1];\n            let lenderTermsJson = jsons[2];\n            let lenderProgramsJson = jsons[3];\n\n            setLenderData([lendersJson, lenderTermsJson, lenderProgramsJson]);\n\n            this.setState({carJson:carJson, lendersJson:lendersJson, lenderTermsJson:lenderTermsJson, lenderProgramsJson:lenderProgramsJson, isLoading:false});\n        });\n    }\n\n    convertKmToMileage(carJson){\n        return carJson.map(car => {\n            let mileageLowerCase = car[\"mileage\"].toLowerCase();\n\n            if(mileageLowerCase.includes('km')){\n                car[\"mileage\"] = Math.floor(0.621371 * parseFloat(mileageLowerCase.replace(\"km\", \"\")));\n            }\n\n            return car;\n        });\n    }\n\n    render(){\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path=\"/car\">\n                        <CarPage isBigScreen={this.props.isBigScreen} />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage isBigScreen={this.props.isBigScreen} {...this.state}/>\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst CarCalculation = (props)=>{\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <CarCalculationClass isBigScreen={mdUp} {...props}/>\n}\n\nfunction mileageToKms(mileage){\n    return mileage * 1.60934;\n}\n\n\n\nfunction addCurrencySymbol(value){\n    if (value < 0){\n        return `-$${Math.abs(value)}`\n    }else{\n        return `$${value}`\n    }\n}\n\nfunction pv(rate, periods, payment, future, type) {\n    // Initialize type\n    var type = (typeof type === 'undefined') ? 0 : type;\n\n    // Evaluate rate and periods (TODO: replace with secure expression evaluator)\n    rate = eval(rate);\n    periods = eval(periods);\n\n    // Return present value\n    if (rate === 0) {\n        return - payment * periods - future;\n    } else {\n        return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 +rate * type) - future) / Math.pow(1 + rate, periods);\n    }\n}\n\nfunction getLenderId(lenderName, lenders){\n    for(let i = 0; i < lenders.length; i++){\n        if (lenderName == lenders[i].name)\n            return lenders[i].id;\n    }\n\n    return null;\n}\n\nexport function calculateProfitFirstInterest(filterInputs, lenderData, carDetails){\n    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, carDetails);\n    let interestColumnIndex = 3;\n    let profitColumnIndex = 8;\n    let interests = calculationDetails[interestColumnIndex].split(',');\n\n    if (interests.length > 0) {\n        // Select first interest as default\n        let firstInterest = interests[0];\n\n        let calculationDetailsForFirstInterest = createCalculationDetail(firstInterest, filterInputs, lenderData, carDetails);\n        let profit = calculationDetailsForFirstInterest[profitColumnIndex];\n\n        if (profit != 'NOT_FOUND')\n            return profit;\n    }\n\n    return null;\n}\n\nfunction createCalculationDetail(selectedInterest, filterInputs, lenderData, carDetails){\n    console.log('createCalculationDetail()');\n    console.log(selectedInterest);\n    console.log(filterInputs);\n    console.log(lenderData);\n    console.log(carDetails);\n\n    let lenders = lenderData[0];\n    let lenderPrograms = lenderData[1];\n    let lenderTerms = lenderData[2];\n\n    let lenderName = filterInputs[\"lender\"];\n    let tierName = filterInputs[\"tier\"];\n    console.log('lenderName = ' + lenderName);\n    console.log('tierName = ' + tierName);\n\n    // Advance\n    let advance = 'NOT_FOUND';\n    let interest = 'NOT_FOUND';\n    let term = 'NOT_FOUND';\n    let foundLenderTerm = null;\n    let foundLenderProgram = null;\n    let lenderId = getLenderId(lenderName, lenders);\n    console.log('lenderId = ' + lenderId);\n\n    if(lenderId != null){\n        for(let lenderProgram of lenderPrograms){\n            if (lenderProgram.lender_id == lenderId && lenderProgram.name == tierName){\n                foundLenderProgram = lenderProgram;\n\n                // Advance\n                if(!isNaN(lenderProgram.advance)){\n                    advance = parseFloat(lenderProgram.advance);\n                }\n\n                // Interest\n                let rateMin = parseFloat(lenderProgram.rate_min);\n                let rateMax = parseFloat(lenderProgram.rate_max);\n                interest = '';\n\n                for(let rate = rateMin; rate < rateMax; rate+=1){\n                    interest += rate + ',';\n                }\n\n                interest += rateMax;\n\n                break;\n            }\n        }\n\n        let carKms = mileageToKms(parseFloat(carDetails.mileage));\n        console.log('carKms = ' + carKms);\n\n        for(let lenderTerm of lenderTerms){\n            if (lenderTerm.lender_id == lenderId && lenderTerm.min_kms <= carKms && lenderTerm.max_kms >= carKms && lenderTerm.year == parseInt(carDetails.year)){\n                // Term\n                term = lenderTerm.term;\n                foundLenderTerm = lenderTerm;\n                break;\n            }\n        }\n    }\n\n    console.log('advance = ' + advance);\n    console.log('interest = ' + interest);\n    console.log('term = ' + term);\n\n    let payment = parseFloat(filterInputs[\"payment\"]);\n    let back = '0';\n\n    // Calculate max front\n    let maxFront = 'NOT_FOUND';\n\n    if (foundLenderTerm !=null && advance != \"NOT_FOUND\"){\n        let termType = foundLenderTerm.type.replace(/\\s/g, '');\n        console.log('termType = ' + termType);\n\n        switch(termType.toLowerCase()){\n            case 'x-clean':\n                maxFront = carDetails.x_clean * advance - carDetails.total_cost;\n                break;\n            case 'clean':\n                maxFront = carDetails.clean  * advance - carDetails.total_cost;\n                break;\n            case 'average':\n                maxFront = carDetails.average  * advance - carDetails.total_cost;\n                break;\n            case 'rough':\n                maxFront = carDetails.rough  * advance - carDetails.total_cost;\n                break;\n        }\n\n        maxFront = Math.round(maxFront);\n    }\n\n    console.log('maxFront = ' + maxFront);\n\n    // Calculate max profit\n    let maxProfit = 'NOT_FOUND';\n\n    if (selectedInterest != -1 && term!='NOT_FOUND') {\n        let discount = 0;\n        let tax = 0;\n        let financed = pv((selectedInterest / 100 + discount + tax) / 12, term, -payment, 0);\n        let holdBack = foundLenderProgram.hold_back;\n        let funded = financed * (1 - holdBack);\n\n        console.log('financed = ' + financed);\n        console.log('holdBack = ' + holdBack);\n        console.log('funded = ' + funded);\n\n        let lender = 0;\n        let ppsa = 0;\n\n        let tradeAllowance = 0;\n        if (filterInputs[\"trade allowance\"] != '' && !isNaN(filterInputs[\"trade allowance\"])) {\n            tradeAllowance = parseFloat(filterInputs[\"trade allowance\"]);\n        }\n\n        let tradePayOff = 0;\n        if (filterInputs[\"trade payoff\"] != '' && !isNaN(filterInputs[\"trade payoff\"])) {\n            tradePayOff = parseFloat(filterInputs[\"trade payoff\"])\n        }\n\n        let downPayment = 0;\n        if (filterInputs[\"down payment\"] != '' && !isNaN(filterInputs[\"down payment\"])) {\n            downPayment = parseFloat(filterInputs[\"down payment\"]);\n        }\n\n        let tradeAcv = 0;\n        if (filterInputs[\"trade a.c.v\"] != '' && !isNaN(filterInputs[\"trade a.c.v\"])) {\n            tradeAcv = parseFloat(filterInputs[\"trade a.c.v\"])\n        }\n\n        console.log('tradeAllowance = ' + tradeAllowance);\n        console.log('tradePayOff = ' + tradePayOff);\n        console.log('downPayment = ' + downPayment);\n        console.log('tradeAcv = ' + tradeAcv);\n\n        let paidOut = funded - lender - ppsa + tradeAllowance - tradePayOff + downPayment;\n        console.log('paidOut = ' + paidOut);\n\n        let userInputTax = 0;\n\n        if (filterInputs[\"tax\"] != '' && !isNaN(filterInputs[\"tax\"])) {\n            console.log(filterInputs[\"tax\"]);\n            userInputTax = parseFloat(filterInputs[\"tax\"]) / 100;\n        }\n\n        console.log('userInputTax = ' + userInputTax);\n\n        let netPaid = paidOut*(1-userInputTax) + tradeAcv;\n        console.log('netPaid = ' + netPaid);\n\n        if (netPaid - carDetails.total_cost < maxFront){\n            maxProfit = netPaid - carDetails.total_cost;\n        }else {\n            maxProfit = maxFront;\n        }\n\n        maxProfit = Math.round(maxProfit);\n    }\n\n    console.log('maxProfit = ' + maxProfit);\n\n    if (maxFront != 'NOT_FOUND'){\n        maxFront = addCurrencySymbol(maxFront);\n    }\n\n    if (maxProfit != 'NOT_FOUND'){\n        maxProfit = addCurrencySymbol(maxProfit);\n    }\n\n    console.log('End createCalculationDetail()');\n    return [lenderName, tierName, (advance * 100) + '%', interest, term, '$' + payment, back, maxFront, maxProfit];\n}\n\nclass CarCalculationClass extends React.Component{\n    constructor() {\n        super();\n\n        this.calculationDetailsColumnHeaders =[\n            \"Lender\",\n            \"Tier\",\n            \"Advance\",\n            \"Interest\",\n            \"Term\",\n            \"Payment\",\n            \"Back\",\n            \"Front\",\n            \"Profit\"\n        ];\n\n        this.state = {\n            calculationDetailsValues:[],\n            interests:[-1,-1,-1]\n        }\n\n        this.selectInterestEvent = this.selectInterestEvent.bind(this);\n    }\n\n    createCalculationDetails(selectedInterests, filtersInputs, lenderData, details){\n        let newCalculationDetailsValues = [];\n\n        for(let [i, filterInputs] of filtersInputs.entries()){\n            if(this.isValidFilterInputs(filterInputs)) {\n                if (selectedInterests[i] == -1){\n                    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, details);\n                    let interestColumnIndex = 3;\n                    let interests = calculationDetails[interestColumnIndex].split(',');\n\n                    if (interests.length > 0) {\n                        // Select first interest as default\n                        let firstInterest = interests[0];\n                        this.state.interests[i] = firstInterest;\n\n                        newCalculationDetailsValues.push(createCalculationDetail(firstInterest, filterInputs, lenderData, details));\n                    }else{\n                        newCalculationDetailsValues.push(calculationDetails);\n                    }\n                }\n                else{\n                    newCalculationDetailsValues.push(createCalculationDetail(selectedInterests[i], filterInputs, lenderData, details));\n                }\n            }\n        }\n\n        return newCalculationDetailsValues;\n    }\n\n    isValidFilterInputs(filterInputs){\n        return filterInputs.selectedLenderIndex != 0 && filterInputs.selectedTierIndex != 0;\n    }\n\n    selectInterestEvent(event, lenderIndex){\n        let newInterest = event.target.value;\n        let interests = this.state.interests;\n        interests[lenderIndex] = newInterest;\n\n        this.setState({interests:interests});\n    }\n\n    renderWithOneTable(calculationDetailsValues){\n        return (\n            <React.Fragment>\n                <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                    <Table>\n                        <TableHead>\n                                <StyledTableRow>\n                                {this.calculationDetailsColumnHeaders.map(header => (\n                                    <StyledTableCell>{header}</StyledTableCell>\n                                ))}\n                                </StyledTableRow>\n                        </TableHead>\n                        {\n                            calculationDetailsValues.map((columnValues, lenderIndex) =>(\n                                <StyledTableRow>\n                                    {\n                                        columnValues.map((columnValue, index) => {\n                                            let interestColumnIndex = 3;\n\n                                            if (index == interestColumnIndex){\n                                                let interestMenuItems = [];\n\n                                                columnValue.split(',').forEach((interest, index) => {\n                                                    interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n                                                });\n\n                                                return (\n                                                    <StyledTableCell>\n                                                        <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                                                            {interestMenuItems}\n                                                        </Select>\n                                                    </StyledTableCell>\n                                                )\n                                            }\n                                            else\n                                            return (\n                                                <StyledTableCell>\n                                                    {columnValue}\n                                                </StyledTableCell>\n                                            )\n                                        })\n                                    }\n                                </StyledTableRow>\n                            ))\n                        }\n                    </Table>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n    createCell(value, index, lenderIndex){\n        let interestColumnIndex = 3;\n\n        if (index == interestColumnIndex){\n            let interestMenuItems = [];\n\n            value.split(',').forEach((interest, index) => {\n                interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n            });\n\n            return (\n                    <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                        {interestMenuItems}\n                    </Select>\n            )\n        }\n        else\n            return <React.Fragment>\n                {value}\n            </React.Fragment>\n    }\n\n    renderWithThreeTables(calculationDetailsValues){\n        let tables = [];\n\n        for(let [lenderIndex, lenderCalculationDetailsValues] of calculationDetailsValues.entries()){\n            tables.push(\n                <Grid item xs={12}>\n                    <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                        <Table>\n                            <TableHead>\n                                <StyledTableRow>\n                                    <StyledTableCell>Name</StyledTableCell>\n                                    <StyledTableCell>Value</StyledTableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {\n                                lenderCalculationDetailsValues.map((row, index) => (\n                                    <StyledTableRow>\n                                        <StyledTableCell>{this.calculationDetailsColumnHeaders[index]}</StyledTableCell>\n                                        <StyledTableCell>{this.createCell(row, index, lenderIndex)}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))\n                            }\n                        </Table>\n                    </Paper>\n                </Grid>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={4}>\n                    {tables}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n\n\n    render(){\n        let userInputsFilterData = this.props.filtersInputs != undefined && this.props.filtersInputs.length > 0;\n        let calculationDetailsValues = this.createCalculationDetails(this.state.interests, this.props.filtersInputs, this.props.lenderData, this.props.details);\n\n        if (userInputsFilterData){\n            if (this.props.isBigScreen){\n                return this.renderWithOneTable(calculationDetailsValues);\n            }else{\n                return this.renderWithThreeTables(calculationDetailsValues);\n            }\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default CarCalculation;"],"sourceRoot":""}