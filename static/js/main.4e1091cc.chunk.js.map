{"version":3,"sources":["reducer.js","logo.svg","components/RangeFilter.js","components/ListFilter.js","components/FilterSection.js","Utils.js","components/Filter.js","components/LenderInput.js","components/LenderInputs.js","components/Lender.js","components/LeftPanel.js","components/Car.js","components/LenderInputModalDialog.js","components/CarCalculation.js","components/DetailedCar.js","components/LoaderWrapper.js","components/CarShow.js","components/MenuBar.js","components/HomePage.js","components/CarList.js","components/CarPage.js","App.js","Service.js","serviceWorker.js","index.js"],"names":["initialState","appReducer","state","action","type","updateFilterNewState","fetchDataFinished","expandOrCollapseFilterSection","sortBy","index","name","value","addLender","removeLenderInput","selectInterest","deleteLenderInput","lenderInputs","splice","carDetail","lenderInputIndex","interest","map","curCarDetail","carCalculation","carCalculationIndex","newCarCalculation","calculateFrontAndProfit","newState","newLenderInputs","updateCalculation","sort","push","mileageToKms","mileage","newCarDetails","baseCarCalculations","createBaseCarCalculations","createCarCalculations","result","lenderNameAndTierNameToProgram","lenderInput","lenderName","tierName","lenderProgram","interestList","rate_min","rate_max","toFixed","firstInterest","length","advance","carCalculations","carKms","parseFloat","lenderNameToTerms","lenderTerms","foundLenderTerm","lenderTerm","min_kms","max_kms","year","parseInt","maxFront","carDetails","term","termType","replace","console","log","toLowerCase","x_clean","total_cost","clean","average","rough","Math","round","payment","maxProfit","financed","pv","holdBack","hold_back","funded","tradeAllowance","isNaN","tradePayOff","downPayment","tradeAcv","paidOut","userInputTax","netPaid","rate","periods","future","eval","pow","reverseNumberSign","number","getMaxProfit","Number","NEGATIVE_INFINITY","profit","sortOptionIndex","carDetail1","carDetail2","sortIsNeed","firstCarDetail","maxProfitCarDetail1","newPostProcessingCarDetails","convertKmToMileage","forEach","mileageLowerCase","includes","floor","lenderToPrograms","lenderIdToLenderNameDict","lender","lenderId","lender_id","yearSet","Set","makeSet","modelSet","mileageSet","totalCostSet","makeToCountDict","modelToCountDict","make","model","totalCost","add","minYear","min","maxYear","max","Array","from","minMileage","maxMileage","minTotalCost","maxTotalCost","modelOptions","postProcess","postProcessingCarDetails","reject","filterName","filter","val","module","exports","RangeFilter","props","sliderChange","bind","minValTextFileChange","maxValTextFileChange","event","values","currentMin","currentMax","this","changeValues","target","inputProps","unit","unit_position","startAdornment","InputAdornment","position","endAdornment","Grid","container","className","item","xs","TextField","size","variant","label","onChange","InputProps","Slider","step","React","Component","connect","ownProps","filters","dispatch","ListFilter","changeCheckboxState","checkAllCheckbox","option","checked","newSelectedOptions","selectedOptions","indexOf","updateFilter","options","counts","titleTransformFunc","selectAll","sortOptions","classNameVal","screenData","Checkbox","color","isSelected","getCheckboxLabel","getCount","FilterSection","expandOrCollapse","isExpanded","onClick","title","IconButton","Collapse","in","children","newVal","Utils","convertStr","str","split","word","charAt","toUpperCase","substring","join","sortImages","images","img1","img2","localeCompare","Filter","LenderInput","selectLender","selectTier","reset","changeTextField","fieldName","changeLenderInputField","lenders","Object","keys","programs","selectedLender","moneyFieldNameToValueDict","paymentDisabled","downPaymentDisabled","tradeAllowanceDisabled","tradePayOffDisabled","tradeAcvDisabled","percentageFieldNameToValueDict","tax","taxDisabled","spacing","Select","disabled","lenderSelectDisabled","style","width","MenuItem","tierSelectDisabled","selectedTier","program","moneyFieldName","percentageFieldName","Button","addBtnDisabled","resetBtnDisable","marginLeft","fieldValue","LenderInputs","lenderInputFieldName","fieldNameToTitle","Lender","LeftPanel","changeTab","openFilter","closeFilter","openLender","closeLender","newTabIndex","setState","filterTabClassName","activeTabIndex","lenderTabClassName","Tabs","TabIndicatorProps","background","Tab","padding","Dialog","fullScreen","open","filterDialogOpen","AppBar","Toolbar","edge","aria-label","DialogContent","lenderDialogOpen","tabIndex","Car","carYear","details","carMake","carModel","carTrim","carImgSrc","carImages","carProfit","getProfit","carProfitClass","Card","CardMedia","src","CardContent","getTitle","LenderInputDialog","closeDialog","lenderAdded","closeLenderInputDialog","lenderInputDialogOpen","onClose","DialogTitle","DialogContentText","StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","main","common","white","body","fontSize","TableCell","StyledTableRow","root","default","TableRow","CarCalculation","tableHeaders","isCurrency","openLenderInputDialog","lenderInputsCalculation","lenderInputCalculation","Table","TableHead","TableBody","formatValue","colspan","textAlign","tableHeader","renderAsOneTable","renderAsManyTables","DetailedCar","carImagesToImageGallery","carImage","original","thumbnail","md","items","showPlayButton","infoName","LoaderWrapper","height","CarShow","sortByIndexChange","viewTypeChange","carClick","sortBySelect","changeViewType","prevProps","prevState","snapshot","loadDataFinished","loading","carIndex","history","gridView","viewTypeIndex","isLoading","offset","once","withRouter","sortByOptionIndex","MenuBar","Fragment","aria-controls","aria-haspopup","menuBtnOnClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","closeMenu","HomePage","smooth","LenderInputModalDialog","CarList","callOnChange","selectedCarIndex","initSelectedCarIndex","firstBtnDisabled","previousBtnDisabled","nextBtnDisabled","lastBtnDisabled","next","previous","carOnClick","first","last","updateBtnDisabled","newCarIndex","startCarIndex","endCarIndex","slice","display","alignItems","justifyContent","fullVersion","renderFullVersion","renderOnlyButtonsVersion","CarPage","changeCar","goBack","location","carDetailsAvailable","href","lenderPrograms","updateScreenData","useTheme","mdUp","useMediaQuery","breakpoints","up","useEffect","Promise","all","fetch","then","reponse","json","basename","process","path","window","hostname","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4e1091cc.chunk.js","sourcesContent":["const initialState = {\n    \"loadDataFinished\":false,\n    \"carDetails\": [],\n    \"lenderPrograms\": [],\n    \"lenderTerms\": [],\n    \"lenders\": [],\n    \"postProcessingCarDetails\": [],\n    \"filters\": {\n        \"year\": {\n            \"type\": \"range\",\n            \"min\": \"\",\n            \"max\": \"\",\n            \"currentMin\": \"\",\n            \"currentMax\": \"\"\n        },\n        \"make\": {\n            \"type\": \"list\",\n            \"options\": [],\n            \"selectedOptions\": []\n        },\n        \"model\": {\n            \"type\": \"list\",\n            \"options\": [],\n            \"selectedOptions\": []\n        },\n        \"mileage\": {\n            \"type\": \"range\",\n            \"min\": \"\",\n            \"max\": \"\",\n            \"currentMin\": \"\",\n            \"currentMax\": \"\"\n        },\n        \"total_cost\": {\n            \"type\": \"range\",\n            \"min\": \"\",\n            \"max\": \"\",\n            \"currentMin\": \"\",\n            \"currentMax\": \"\"\n        }\n    },\n    \"year_filter_section_expand\": true,\n    \"make_filter_section_expand\": true,\n    \"model_filter_section_expand\": true,\n    \"mileage_filter_section_expand\": true,\n    \"total_cost_filter_section_expand\": true,\n    \"sortOptionIndex\": 0,\n    \"tabIndex\": 0,\n    \"viewTypeIndex\": 0,\n    \"lenderIdToLenderNameDict\": {},\n    \"lenderToPrograms\": {},\n    \"lenderNameAndTierNameToProgram\": {},\n    \"lenderNameToTerms\": {},\n    \"selectedLender\": \"\",\n    \"selectedTier\": \"\",\n    \"lenderSelectDisabled\": false,\n    \"tierSelectDisabled\": true,\n    \"textFieldsDisabled\": true,\n    \"addBtnDisabled\": true,\n    \"resetBtnDisable\": true,\n    \"payment\": \"\",\n    \"downPayment\": \"\",\n    \"tradeAllowance\": \"\",\n    \"tradePayOff\": \"\",\n    \"tradeAcv\": \"\",\n    \"tax\": \"\",\n    \"paymentDisabled\": true,\n    \"downPaymentDisabled\": true,\n    \"tradeAllowanceDisabled\": true,\n    \"tradePayOffDisabled\": true,\n    \"tradeAcvDisabled\": true,\n    \"taxDisabled\": true,\n    \"lenderInputs\": [],\n    \"lenderInputDialogOpen\":false,\n    \"isLoading\":false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"UPDATE_FILTER\":\n            return updateFilterNewState(state, action);\n        case \"FETCH_DATA_FINISHED\":\n            return fetchDataFinished(state, action);\n        case \"EXPAND_OR_COLLAPSE_FILTER_SECTION\":\n            return expandOrCollapseFilterSection(state, action);\n        case \"SORT_BY_SELECTION\":\n            return sortBy(state, action);\n        case \"CHANGE_TAB\":\n            return {...state, \"tabIndex\": action.index};\n        case \"CHANGE_VIEW_TYPE\":\n            return {...state, \"viewTypeIndex\": action.index};\n        case \"SELECT_LENDER\":\n            return {...state, \"selectedLender\": action.name, \"tierSelectDisabled\": false, \"resetBtnDisable\": false};\n        case \"SELECT_TIER\":\n            return {\n                ...state, \"selectedTier\": action.name, \"textFieldsDisabled\": false, \"addBtnDisabled\": false,\n                \"paymentDisabled\": false,\n                \"downPaymentDisabled\": false,\n                \"tradeAllowanceDisabled\": false,\n                \"tradePayOffDisabled\": false,\n                \"tradeAcvDisabled\": false,\n                \"taxDisabled\": false\n            };\n        case \"RESET_LENDER_INPUT\":\n            return {\n                ...state,\n                \"selectedLender\": \"\", \"selectedTier\": \"\", \"lenderSelectDisabled\": false,\n                \"tierSelectDisabled\": true, \"addBtnDisabled\": \"true\", \"resetBtnDisable\": true,\n                \"payment\": \"\", \"downPayment\": \"\", \"tradeAllowance\": \"\", \"tradePayOff\": \"\",\n                \"tradeAcv\": \"\", \"tax\": \"\",\n                \"paymentDisabled\": true,\n                \"downPaymentDisabled\": true,\n                \"tradeAllowanceDisabled\": true,\n                \"tradePayOffDisabled\": true,\n                \"tradeAcvDisabled\": true,\n                \"taxDisabled\": true\n            };\n        case \"CHANGE_LENDER_INPUT_FIELD\":\n            return {...state, [action.name]: action.value}\n        case \"ADD_LENDER\":\n            return addLender(state, action);\n        case \"REMOVE_LENDER_INPUT\":\n            return removeLenderInput(state, action);\n        case \"SELECT_INTEREST\":\n            return selectInterest(state, action);\n        case \"DELETE_LENDER_INPUT\":\n            return deleteLenderInput(state, action);\n        case \"CLOSE_LENDER_INPUT_DIALOG\":\n            return {...state, \"lenderInputDialogOpen\":false};\n        case \"OPEN_LENDER_INPUT_DIALOG\":\n            return {...state, \"lenderInputDialogOpen\":true};\n        case \"LOADING\":\n            return {...state, \"isLoading\":action.value}\n        case \"UPDATE_SCREEN_DATA\":\n            return {...state, \"screenData\" : action.value};\n        default:\n            return state;\n    }\n}\n\nconst deleteLenderInput = (state, action) => {\n    let lenderInputs = [...state[\"lenderInputs\"]];\n    lenderInputs.splice(action.index, 1);\n\n    return {\n        ...state,\n        \"lenderInputs\":lenderInputs\n    }\n}\n\nconst selectInterest = (state, action) => {\n    let carDetail = action.carDetail;\n    let lenderInputIndex = action.lenderInputIndex;\n    let interest = action.interest;\n\n    return {\n        ...state,\n        \"postProcessingCarDetails\": state[\"postProcessingCarDetails\"].map(curCarDetail => {\n            if(curCarDetail[\"id\"] == carDetail[\"id\"]){\n                return {\n                    ...curCarDetail,\n                    \"car_calculation\": curCarDetail[\"car_calculation\"].map((carCalculation, carCalculationIndex) => {\n                        if (carCalculationIndex == lenderInputIndex) {\n                            let newCarCalculation = {\n                                ...carCalculation,\n                                \"interest\": interest\n                            };\n\n\n                            return {\n                                ...newCarCalculation,\n                                ...calculateFrontAndProfit(newCarCalculation)\n                            };\n                        } else {\n                            return carCalculation;\n                        }\n                    })\n                }\n            }else{\n                return curCarDetail\n            }\n        })\n    };\n}\n\nconst removeLenderInput = (state, action) => {\n    let newState = {...state};\n    let newLenderInputs = [...newState[\"lenderInputs\"]];\n\n    newLenderInputs.splice(action.index, 1);\n    newState[\"lenderInputs\"] = newLenderInputs;\n    newState[\"postProcessingCarDetails\"] = [...newState[\"postProcessingCarDetails\"]];\n    updateCalculation(newState);\n    sort(newState[\"postProcessingCarDetails\"], newState[\"sortOptionIndex\"]);\n\n    return newState;\n}\n\nconst addLender = (state, action) => {\n    let newState = {...state};\n    let newLenderInputs = [...newState[\"lenderInputs\"]];\n\n    newLenderInputs.push({\n        \"selectedLender\": newState[\"selectedLender\"],\n        \"selectedTier\": newState[\"selectedTier\"],\n        \"payment\": newState[\"payment\"],\n        \"downPayment\": newState[\"downPayment\"],\n        \"tradeAllowance\": newState[\"tradeAllowance\"],\n        \"tradePayOff\": newState[\"tradePayOff\"],\n        \"tradeAcv\": newState[\"tradeAcv\"],\n        \"tax\": newState[\"tax\"],\n    })\n\n    newState[\"lenderInputs\"] = newLenderInputs;\n    newState[\"postProcessingCarDetails\"] = [...newState[\"postProcessingCarDetails\"]];\n    updateCalculation(newState);\n    sort(newState[\"postProcessingCarDetails\"], newState[\"sortOptionIndex\"]);\n\n    return {\n        ...newState,\n        \"selectedLender\": \"\", \"selectedTier\": \"\", \"lenderSelectDisabled\": false,\n        \"tierSelectDisabled\": true, \"addBtnDisabled\": \"true\", \"resetBtnDisable\": true,\n        \"payment\": \"\", \"downPayment\": \"\", \"tradeAllowance\": \"\", \"tradePayOff\": \"\",\n        \"tradeAcv\": \"\", \"tax\": \"\",\n        \"paymentDisabled\": true,\n        \"downPaymentDisabled\": true,\n        \"tradeAllowanceDisabled\": true,\n        \"tradePayOffDisabled\": true,\n        \"tradeAcvDisabled\": true,\n        \"taxDisabled\": true\n    }\n}\n\nfunction mileageToKms(mileage) {\n    return mileage * 1.60934;\n}\n\nconst updateCalculation = (state) => {\n    let newCarDetails = state[\"postProcessingCarDetails\"];\n    let baseCarCalculations = createBaseCarCalculations(state);\n\n    for(let carDetail of newCarDetails){\n        carDetail[\"car_calculation\"] = createCarCalculations(carDetail, baseCarCalculations, state);\n    }\n\n    state[\"postProcessingCarDetails\"] = newCarDetails;\n}\n\nconst createBaseCarCalculations = (state) => {\n    let result = [];\n    let lenderInputs = state[\"lenderInputs\"];\n    let lenderNameAndTierNameToProgram = state[\"lenderNameAndTierNameToProgram\"];\n\n    for(let lenderInput of lenderInputs){\n        let lenderName = lenderInput[\"selectedLender\"];\n        let tierName = lenderInput[\"selectedTier\"];\n        let lenderProgram = null;\n\n        // Find lender program\n        if (lenderName in lenderNameAndTierNameToProgram && tierName in lenderNameAndTierNameToProgram[lenderName]){\n            lenderProgram = lenderNameAndTierNameToProgram[lenderName][tierName];\n        }\n\n        // Create interest list\n        let interestList = [];\n\n        if(lenderProgram != null){\n            for (let interest = lenderProgram.rate_min; interest <= lenderProgram.rate_max; interest += 1) {\n                interestList.push(interest.toFixed(2));\n            }\n        }\n\n        let firstInterest = \"\";\n        if(interestList.length > 0){\n            firstInterest = interestList[0];\n        }\n\n        result.push({\n           \"lenderProgram\":lenderProgram,\n           \"advance\": (lenderProgram != null)?lenderProgram.advance: \"NOT_FOUND\",\n            \"interestList\":interestList,\n            \"interest\": firstInterest\n        });\n    }\n\n    return result;\n}\n\nconst createCarCalculations = (carDetail, baseCarCalculations, state) => {\n    let lenderInputs = state[\"lenderInputs\"];\n    let carCalculations = [];\n    let carKms = mileageToKms(parseFloat(carDetail.mileage));\n    let lenderNameToTerms = state[\"lenderNameToTerms\"];\n\n    for (let lenderInputIndex = 0; lenderInputIndex < lenderInputs.length; lenderInputIndex++){\n        let lenderInput = lenderInputs[lenderInputIndex];\n        let lenderName = lenderInput[\"selectedLender\"];\n        let lenderTerms = [];\n\n        if(lenderName in lenderNameToTerms){\n            lenderTerms = lenderNameToTerms[lenderName];\n        }\n\n        let foundLenderTerm = null;\n\n        for(let lenderTerm of lenderTerms){\n            if (lenderTerm.min_kms <= carKms && lenderTerm.max_kms >= carKms && lenderTerm.year == parseInt(carDetail.year)) {\n                foundLenderTerm = lenderTerm;\n                break;\n            }\n        }\n\n        let carCalculation = {\n            \"carDetails\":carDetail,\n            \"lenderInput\":lenderInput,\n            ...baseCarCalculations[lenderInputIndex],\n            \"lenderTerm\":foundLenderTerm,\n            \"term\":(foundLenderTerm != null)?foundLenderTerm[\"term\"] : \"NOT_FOUND\",\n            \"back\":0, // back is always 0\n        }\n\n        carCalculations.push({\n            ...carCalculation,\n            ...calculateFrontAndProfit(carCalculation)\n        });\n    }\n\n    return carCalculations;\n}\n\nconst calculateFrontAndProfit = (carCalculation) => {\n    let maxFront = 'NOT_FOUND';\n    let lenderTerm = carCalculation[\"lenderTerm\"];\n    let advance = carCalculation[\"advance\"];\n    let carDetails = carCalculation[\"carDetails\"];\n    let interest = carCalculation[\"interest\"];\n    let term = carCalculation[\"term\"];\n    let lenderProgram = carCalculation[\"lenderProgram\"];\n    let lenderInput = carCalculation[\"lenderInput\"];\n\n    if (lenderTerm !=null && advance != \"NOT_FOUND\"){\n        let termType = lenderTerm.type.replace(/\\s/g, '');\n        console.log('termType = ' + termType);\n\n        switch(termType.toLowerCase()){\n            case 'x-clean':\n                maxFront = carDetails.x_clean * advance - carDetails.total_cost;\n                break;\n            case 'clean':\n                maxFront = carDetails.clean  * advance - carDetails.total_cost;\n                break;\n            case 'average':\n                maxFront = carDetails.average  * advance - carDetails.total_cost;\n                break;\n            case 'rough':\n                maxFront = carDetails.rough  * advance - carDetails.total_cost;\n                break;\n        }\n\n        maxFront = Math.round(maxFront);\n    }\n\n    console.log('maxFront = ' + maxFront);\n\n    let payment = lenderInput[\"payment\"];\n    // Calculate max profit\n    let maxProfit = 'NOT_FOUND';\n\n    if (interest != \"\" && term!='NOT_FOUND') {\n        let discount = 0;\n        let tax = 0;\n        let financed = pv((interest / 100 + discount + tax) / 12, term, -payment, 0);\n        let holdBack = lenderProgram.hold_back;\n        let funded = financed * (1 - holdBack);\n\n        console.log('financed = ' + financed);\n        console.log('holdBack = ' + holdBack);\n        console.log('funded = ' + funded);\n\n        let lender = 0;\n        let ppsa = 0;\n\n        let tradeAllowance = 0;\n        if (lenderInput[\"tradeAllowance\"] != '' && !isNaN(lenderInput[\"tradeAllowance\"])) {\n            tradeAllowance = parseFloat(lenderInput[\"tradeAllowance\"]);\n        }\n\n        let tradePayOff = 0;\n        if (lenderInput[\"tradePayOff\"] != '' && !isNaN(lenderInput[\"tradePayOff\"])) {\n            tradePayOff = parseFloat(lenderInput[\"tradePayOff\"])\n        }\n\n        let downPayment = 0;\n        if (lenderInput[\"downPayment\"] != '' && !isNaN(lenderInput[\"downPayment\"])) {\n            downPayment = parseFloat(lenderInput[\"downPayment\"]);\n        }\n\n        let tradeAcv = 0;\n        if (lenderInput[\"tradeAcv\"] != '' && !isNaN(lenderInput[\"tradeAcv\"])) {\n            tradeAcv = parseFloat(lenderInput[\"tradeAcv\"])\n        }\n\n        console.log('tradeAllowance = ' + tradeAllowance);\n        console.log('tradePayOff = ' + tradePayOff);\n        console.log('downPayment = ' + downPayment);\n        console.log('tradeAcv = ' + tradeAcv);\n\n        let paidOut = funded - lender - ppsa + tradeAllowance - tradePayOff + downPayment;\n        console.log('paidOut = ' + paidOut);\n\n        let userInputTax = 0;\n\n        if (lenderInput[\"tax\"] != '' && !isNaN(lenderInput[\"tax\"])) {\n            console.log(lenderInput[\"tax\"]);\n            userInputTax = parseFloat(lenderInput[\"tax\"]) / 100;\n        }\n\n        console.log('userInputTax = ' + userInputTax);\n\n        let netPaid = paidOut*(1-userInputTax) + tradeAcv;\n        console.log('netPaid = ' + netPaid);\n\n        if (netPaid - carDetails.total_cost < maxFront){\n            maxProfit = netPaid - carDetails.total_cost;\n        }else {\n            maxProfit = maxFront;\n        }\n\n        maxProfit = Math.round(maxProfit);\n    }\n\n    return {\n        \"front\":maxFront,\n        \"profit\":maxProfit\n    }\n}\n\nfunction pv(rate, periods, payment, future, type) {\n    // Initialize type\n    var type = (typeof type === 'undefined') ? 0 : type;\n\n    // Evaluate rate and periods (TODO: replace with secure expression evaluator)\n    rate = eval(rate);\n    periods = eval(periods);\n\n    // Return present value\n    if (rate === 0) {\n        return - payment * periods - future;\n    } else {\n        return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 +rate * type) - future) / Math.pow(1 + rate, periods);\n    }\n}\n\nfunction reverseNumberSign(number) {\n    return -number;\n}\n\nconst getMaxProfit = (carDetail) => {\n    let maxProfit = Number.NEGATIVE_INFINITY;\n\n    for(let carCalculation of carDetail[\"car_calculation\"]){\n        let profit = carCalculation[\"profit\"];\n\n        if(profit != \"NOT_FOUND\" && profit > maxProfit){\n            maxProfit = profit;\n        }\n    }\n\n    return maxProfit;\n}\n\nconst sort = (carDetails, sortOptionIndex) => {\n    switch (sortOptionIndex) {\n        case 0:\n            break;\n        case 1:\n            carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost));\n            break;\n        case 2:\n            carDetails.sort((carDetail1, carDetail2) => reverseNumberSign(parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost)));\n            break;\n        case 3:\n            carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage));\n            break;\n        case 4:\n            carDetails.sort((carDetail1, carDetail2) => reverseNumberSign(parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage)));\n            break;\n        case 5:\n            carDetails.sort((carDetail1, carDetail2) => reverseNumberSign(parseInt(carDetail1.year) - parseInt(carDetail2.year)));\n            break;\n        case 6:\n            carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.year) - parseInt(carDetail2.year));\n            break;\n        case 7:\n            let sortIsNeed = false;\n\n            if (carDetails.length > 0){\n                let firstCarDetail = carDetails[0];\n\n                if (\"car_calculation\" in firstCarDetail && firstCarDetail[\"car_calculation\"].length > 0){\n                    sortIsNeed = true;\n                }\n            }\n            if (sortIsNeed){\n                carDetails.sort((carDetail1, carDetail2) => {\n                    let maxProfitCarDetail1 = getMaxProfit(carDetail1);\n                    let maxProfitCarDetail2 = getMaxProfit(carDetail2);\n\n                    return maxProfitCarDetail2 - maxProfitCarDetail1;\n                });\n            }\n            break;\n    }\n}\n\nconst sortBy = (state, action) => {\n    let sortOptionIndex = action.index;\n    let newPostProcessingCarDetails = [...state[\"postProcessingCarDetails\"]];\n\n    sort(newPostProcessingCarDetails, sortOptionIndex);\n\n    return {...state, \"sortOptionIndex\": action.index, \"postProcessingCarDetails\": newPostProcessingCarDetails, \"isLoading\":true};\n}\n\nconst expandOrCollapseFilterSection = (state, action) => {\n    let newState = {...state};\n\n    newState[action.name + \"_expand\"] = action.value;\n\n    return newState;\n}\nconst convertKmToMileage = (carDetails) => {\n    carDetails.forEach((carDetail) => {\n        let mileageLowerCase = carDetail[\"mileage\"].toLowerCase();\n\n        if (mileageLowerCase.includes(\"km\")) {\n            carDetail[\"mileage\"] = Math.floor(0.621371192 * parseFloat(mileageLowerCase.replace(\"km\", \"\")));\n        }\n    })\n}\n\nconst fetchDataFinished = (state, action) => {\n    let newState = {...state, \"loadDataFinished\":true};\n\n    console.log(action);\n\n    newState[\"lenders\"] = action[\"lenders\"];\n    newState[\"lenderTerms\"] = action[\"lenderTerms\"];\n    newState[\"lenderPrograms\"] = action[\"lenderPrograms\"];\n\n    let lenderToPrograms = {};\n    let lenderIdToLenderNameDict = {};\n    let lenderNameAndTierNameToProgram = {};\n\n    action[\"lenders\"].forEach(lender => lenderIdToLenderNameDict[lender[\"id\"]] = lender[\"name\"]);\n\n    action[\"lenderPrograms\"].forEach(lenderProgram => {\n        let lenderId = lenderProgram[\"lender_id\"];\n        let lenderName = lenderIdToLenderNameDict[lenderId];\n        let tierName = lenderProgram[\"name\"];\n\n        if (!(lenderName in lenderToPrograms)) {\n            lenderToPrograms[lenderName] = [];\n        }\n\n        lenderToPrograms[lenderName].push(lenderProgram[\"name\"]);\n\n        if (!(lenderName in lenderNameAndTierNameToProgram)) {\n            lenderNameAndTierNameToProgram[lenderName] = {};\n        }\n\n        lenderNameAndTierNameToProgram[lenderName][tierName] = lenderProgram;\n    });\n\n    newState[\"lenderIdToLenderNameDict\"] = lenderIdToLenderNameDict;\n    newState[\"lenderToPrograms\"] = lenderToPrograms;\n    newState[\"lenderNameAndTierNameToProgram\"] = lenderNameAndTierNameToProgram;\n\n    let lenderNameToTerms = {}\n\n    action[\"lenderTerms\"].forEach(term => {\n        let lenderName = lenderIdToLenderNameDict[term.lender_id];\n\n        if (!(lenderName in lenderNameToTerms)) {\n            lenderNameToTerms[lenderName] = [];\n        }\n\n        lenderNameToTerms[lenderName].push(term);\n    })\n\n    newState[\"lenderNameToTerms\"] = lenderNameToTerms;\n\n    convertKmToMileage(action.carDetails);\n    newState[\"carDetails\"] = action.carDetails;\n    newState[\"postProcessingCarDetails\"] = action.carDetails;\n\n    let yearSet = new Set();\n    let makeSet = new Set();\n    let modelSet = new Set();\n    let mileageSet = new Set();\n    let totalCostSet = new Set();\n    let makeToCountDict = {};\n    let modelToCountDict = {};\n\n    for (let carDetail of newState[\"carDetails\"]) {\n        let make = carDetail[\"make\"];\n        let model = carDetail[\"model\"];\n        let year = carDetail[\"year\"];\n        let mileage = carDetail[\"mileage\"];\n        let totalCost = carDetail[\"total_cost\"];\n\n        if (!isNaN(year))\n            yearSet.add(parseInt(year));\n\n        if (!isNaN(mileage))\n            mileageSet.add(parseInt(mileage));\n\n        if (!isNaN(totalCost))\n            totalCostSet.add(parseInt(totalCost));\n\n        makeSet.add(make);\n\n        if (!(make in makeToCountDict)) {\n            makeToCountDict[make] = 0;\n        }\n\n        makeToCountDict[make] = makeToCountDict[make] + 1;\n\n        modelSet.add(carDetail[\"model\"]);\n\n        if (!(model in modelToCountDict)) {\n            modelToCountDict[model] = 0;\n        }\n\n        modelToCountDict[model] = modelToCountDict[model] + 1;\n    }\n\n    let minYear = Math.min(...yearSet);\n    let maxYear = Math.max(...yearSet);\n\n    newState[\"filters\"][\"year\"] = {\n        ...newState[\"filters\"][\"year\"],\n        \"min\": minYear,\n        \"max\": maxYear,\n        \"currentMin\": minYear,\n        \"currentMax\": maxYear\n    }\n\n    newState[\"filters\"][\"make\"] = {\n        ...newState[\"filters\"][\"make\"],\n        \"options\": Array.from(makeSet),\n        \"selectedOptions\": Array.from(makeSet),\n        \"counts\": makeToCountDict\n    }\n\n    newState[\"filters\"][\"model\"] = {\n        ...newState[\"filters\"][\"model\"],\n        \"options\": Array.from(modelSet),\n        \"selectedOptions\": Array.from(modelSet),\n        \"counts\": modelToCountDict\n    }\n\n    let minMileage = Math.min(...mileageSet);\n    let maxMileage = Math.max(...mileageSet);\n\n    newState[\"filters\"][\"mileage\"] = {\n        ...newState[\"filters\"][\"mileage\"],\n        \"min\": minMileage,\n        \"max\": maxMileage,\n        \"currentMin\": minMileage,\n        \"currentMax\": maxMileage\n    }\n\n    let minTotalCost = Math.min(...totalCostSet);\n    let maxTotalCost = Math.max(...totalCostSet);\n\n    newState[\"filters\"][\"total_cost\"] = {\n        ...newState[\"filters\"][\"total_cost\"],\n        \"min\": minTotalCost,\n        \"max\": maxTotalCost,\n        \"currentMin\": minTotalCost,\n        \"currentMax\": maxTotalCost\n    }\n\n    console.log(newState);\n    return newState;\n}\n\nconst updateFilterNewState = (state, action) => {\n    let newState = {...state, \"isLoading\":true};\n\n    newState[\"filters\"][action.name] = {...newState[\"filters\"][action.name], ...action.value};\n\n    if (action.name == \"make\") {\n        // Update model options accordingly\n        let modelOptions = new Set();\n\n        for (let carDetail of state.carDetails) {\n            if (action.value[\"selectedOptions\"].includes(carDetail[\"make\"])) {\n                modelOptions.add(carDetail[\"model\"]);\n            }\n        }\n\n        newState[\"filters\"][\"model\"] = {\n            ...newState[\"filters\"][\"model\"],\n            \"options\": Array.from(modelOptions),\n            \"selectedOptions\": Array.from(modelOptions)\n        }\n    }\n\n    newState[\"postProcessingCarDetails\"] = postProcess(newState);\n    updateCalculation(newState);\n    sort(newState[\"postProcessingCarDetails\"], newState[\"sortOptionIndex\"]);\n\n\n\n\n    return newState;\n}\n\nconst postProcess = (state) => {\n    let postProcessingCarDetails = [];\n\n    for (let carDetail of state[\"carDetails\"]) {\n        let reject = false;\n\n        for (let filterName in state[\"filters\"]) {\n            let filter = state[\"filters\"][filterName];\n\n            if (filter[\"type\"] == \"range\") {\n                let val = parseInt(carDetail[filterName]);\n\n                if (val < filter[\"currentMin\"] || val > filter[\"currentMax\"]) {\n                    // console.log(\"reject \"  + val + \",\" + filterName);\n                    reject = true;\n                    break;\n                }\n            } else if (filter[\"type\"] == \"list\") {\n                let val = carDetail[filterName];\n\n                if (!filter[\"selectedOptions\"].includes(val)) {\n                    // console.log(\"reject \"  + val + \",\" + filterName);\n                    reject = true;\n                    break\n                }\n            }\n        }\n\n        if (!reject)\n            postProcessingCarDetails.push(carDetail);\n\n    }\n\n    return postProcessingCarDetails;\n}\n\nexport {appReducer, initialState};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {connect} from 'react-redux';\nimport Slider from '@material-ui/core/Slider';\nimport \"./RangeFilter.css\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nclass RangeFilter extends React.Component {\n    constructor(props) {\n        super (props);\n\n        this.sliderChange = this.sliderChange.bind(this);\n        this.minValTextFileChange = this.minValTextFileChange.bind(this);\n        this.maxValTextFileChange = this.maxValTextFileChange.bind(this);\n    }\n\n    sliderChange(event, values){\n        let currentMin = values[0];\n        let currentMax = values[1];\n\n        this.props.changeValues({\n            \"currentMin\":currentMin,\n            \"currentMax\":currentMax\n        });\n    }\n\n    minValTextFileChange(event){\n        let value = event.target.value;\n\n\n        this.props.changeValues({\n            \"currentMin\":value\n        });\n    }\n\n    maxValTextFileChange(event){\n        let value = event.target.value;\n\n        this.props.changeValues({\n            \"currentMax\":value\n        });\n    }\n\n    render(){\n        let inputProps = {};\n\n        if (this.props.unit && this.props.unit_position){\n            if(this.props.unit_position == \"start\"){\n                inputProps = {\n                    startAdornment: <InputAdornment position=\"start\">{this.props.unit}</InputAdornment>,\n                };\n            }else if(this.props.unit_position == \"end\"){\n                inputProps = {\n                    endAdornment: <InputAdornment position=\"end\">{this.props.unit}</InputAdornment>,\n                };\n            }\n        }\n        return (\n            <>\n                <Grid container className={\"range_filter\"}>\n                    <Grid item xs={4}>\n                        <TextField size=\"small\" variant=\"outlined\" value={this.props.currentMin} label={\"Min\"} onChange={this.minValTextFileChange} InputProps={inputProps}/>\n                    </Grid>\n                    <Grid item xs={4} className={\"to_text\"}>\n                        To\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField size=\"small\" variant=\"outlined\" value={this.props.currentMax} label={\"Max\"}  onChange={this.maxValTextFileChange} InputProps={inputProps}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Slider min={this.props.min} max={this.props.max}\n                                value={[this.props.currentMin, this.props.currentMax]}\n                                step={1} onChange={this.sliderChange}/>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let filters = state[\"filters\"][ownProps[\"name\"]];\n\n    return {\n        min:filters[\"min\"],\n        max:filters[\"max\"],\n        currentMin: filters[\"currentMin\"],\n        currentMax: filters[\"currentMax\"],\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeValues: (value) => {\n            dispatch({\n                type:\"UPDATE_FILTER\",\n                name:ownProps[\"name\"],\n                value:value\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RangeFilter);","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {connect} from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./ListFilter.css\";\n\nclass ListFilter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.changeCheckboxState = this.changeCheckboxState.bind(this);\n        this.checkAllCheckbox = this.checkAllCheckbox.bind(this);\n    }\n\n    changeCheckboxState(event, option){\n        let state = event.target.checked;\n        let newSelectedOptions = [...this.props.selectedOptions];\n\n        if(state){\n            newSelectedOptions.push(option);\n        }else{\n            const index = newSelectedOptions.indexOf(option);\n\n            if(index > -1){\n                newSelectedOptions.splice(index, 1);\n            }\n        }\n\n        this.props.updateFilter(newSelectedOptions);\n    }\n\n    checkAllCheckbox(event){\n        let state = event.target.checked;\n\n        if(state)\n            this.props.updateFilter([...this.props.options]);\n        else\n            this.props.updateFilter([]);\n    }\n\n    getCount(option){\n        if(this.props.counts){\n            return \" (\" + this.props.counts[option] + \")\";\n        }\n\n        return \"\";\n    }\n\n    getCheckboxLabel(option){\n        if(this.props.titleTransformFunc){\n            return this.props.titleTransformFunc(option);\n        }\n\n        return option;\n    }\n\n    render(){\n        let selectAll = this.props.options.length == this.props.selectedOptions.length;\n        let sortOptions = this.props.options;\n        sortOptions.sort()\n\n        let classNameVal = \"list_filter\";\n        if (this.props.screenData[\"mdUp\"] && this.props.options.length > 10){\n            classNameVal += \" aLotOfOptions\";\n        }\n\n        return (\n            <>\n                <Grid container className={classNameVal}>\n                    {sortOptions.length > 0?\n                        (\n                            <Grid item xs={12}>\n                                <Checkbox color=\"primary\" checked={selectAll} onChange={this.checkAllCheckbox}/>All\n                            </Grid>\n                        ):null\n                    }\n                    {sortOptions.map(option => {\n                        let isSelected = this.props.selectedOptions.includes(option);\n\n                        return (\n                            <Grid item xs={12}>\n                                <Checkbox color=\"primary\" checked={isSelected} onChange={(event) => this.changeCheckboxState(event, option)}/>{this.getCheckboxLabel(option)}{this.getCount(option)}\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n            </>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    let filter = state[\"filters\"][ownProps[\"name\"]];\n\n    return {\n        options: filter[\"options\"],\n        selectedOptions: filter[\"selectedOptions\"],\n        counts:filter[\"counts\"],\n        screenData:state[\"screenData\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        updateFilter: (selectedOptions) => {\n            dispatch({\n                type:\"UPDATE_FILTER\",\n                name:ownProps[\"name\"],\n                value:{\n                    \"selectedOptions\":selectedOptions\n                }\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFilter);","import React from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport {connect} from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport './FilterSection.css';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass FilterSection extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.expandOrCollapse = this.expandOrCollapse.bind(this);\n    }\n\n    expandOrCollapse(){\n        this.props.expandOrCollapse(!this.props.isExpanded);\n    }\n\n    render(){\n        return (\n            <Grid container className={\"filter_section\"}>\n                <Grid item xs={12} className={\"filter_section_header\"}>\n                    <Grid container>\n                        <Grid item xs={10} onClick={this.expandOrCollapse} className={\"filter_section_title\"}>\n                            {this.props.title}\n                        </Grid>\n                        <Grid item xs={2} className={\"filter_section_expand_collapse_icon\"}>\n                            <IconButton onClick={this.expandOrCollapse}>{this.props.isExpanded?<ExpandLessIcon/>:<ExpandMoreIcon/>}</IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Collapse in={this.props.isExpanded}>\n                        {this.props.children}\n                    </Collapse>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isExpanded: state[ownProps[\"name\"] + \"_expand\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        expandOrCollapse: (newVal) => {\n            dispatch({\n                type:\"EXPAND_OR_COLLAPSE_FILTER_SECTION\",\n                name: ownProps[\"name\"],\n                value:newVal\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSection);","function convertStr(str){\n    let words = str.split(/(\\s+)/);\n\n    return words.map(word => {\n        let result = '';\n\n        if (word.length > 0){\n            result += word.charAt(0).toUpperCase();\n        }\n\n        if (word.length > 1){\n            result += word.substring(1).toLowerCase();\n        }\n\n        return result;\n    }).join(' ');\n}\n\nfunction sortImages(images){\n    images.sort((img1, img2) => {\n        return img1[\"name\"].localeCompare(img2[\"name\"]);\n    });\n}\n\nconst getMaxProfit = (carDetail) => {\n    let maxProfit = Number.NEGATIVE_INFINITY;\n\n    if(\"car_calculation\" in carDetail) {\n        for (let carCalculation of carDetail[\"car_calculation\"]) {\n            let profit = carCalculation[\"profit\"];\n\n            if (profit != \"NOT_FOUND\" && profit > maxProfit) {\n                maxProfit = profit;\n            }\n        }\n    }\n\n    return maxProfit;\n}\n\nconst Utils = {\n    convertStr:convertStr,\n    sortImages:sortImages,\n    getMaxProfit:getMaxProfit\n}\n\n\nexport default Utils;","import React from 'react';\nimport RangeFilter from \"./RangeFilter\";\nimport ListFilter from \"./ListFilter\";\nimport FilterSection from \"./FilterSection\";\nimport Utils from \"../Utils\";\nimport \"./Filter.css\";\n\nclass Filter extends React.Component {\n    render() {\n        return (\n            <div className={\"filter\"}>\n                <FilterSection name={\"year_filter_section\"} title={\"Year\"}>\n                    <RangeFilter name=\"year\"/>\n                </FilterSection>\n                <FilterSection name={\"make_filter_section\"} title={\"Make\"}>\n                    <ListFilter name=\"make\" titleTransformFunc={Utils.convertStr}/>\n                </FilterSection>\n                <FilterSection name={\"model_filter_section\"} title={\"Model\"}>\n                    <ListFilter name=\"model\" titleTransformFunc={Utils.convertStr}/>\n                </FilterSection>\n                <FilterSection name={\"mileage_filter_section\"} title={\"Mileage\"}>\n                    <RangeFilter name=\"mileage\" unit={\"mi\"} unit_position={\"end\"}/>\n                </FilterSection>\n                <FilterSection name={\"total_cost_filter_section\"} title={\"Total cost\"}>\n                    <RangeFilter name=\"total_cost\" unit={\"$\"} unit_position={\"start\"}/>\n                </FilterSection>\n            </div>\n        )\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"./LenderInput.css\";\nimport {connect} from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nclass LenderInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.selectLender = this.selectLender.bind(this);\n        this.selectTier = this.selectTier.bind(this);\n        this.addLender = this.addLender.bind(this);\n        this.reset = this.reset.bind(this);\n        this.changeTextField = this.changeTextField.bind(this);\n    }\n\n    selectLender(event){\n        this.props.selectLender(event.target.value);\n    }\n\n    selectTier(event){\n        this.props.selectTier(event.target.value);\n    }\n\n    addLender(){\n        this.props.addLender();\n        if(this.props.onChange){\n            this.props.onChange();\n        }\n    }\n\n    reset(){\n        this.props.reset();\n    }\n\n    changeTextField(event, fieldName){\n        this.props.changeLenderInputField(fieldName, event.target.value);\n    }\n\n    render(){\n        let lenders = Object.keys(this.props.lenderToPrograms);\n        let programs = [];\n\n        if (this.props.selectedLender !== \"\") {\n            programs = this.props.lenderToPrograms[this.props.selectedLender];\n        }\n\n        let moneyFieldNameToValueDict = {\n            \"payment\": {\n                \"title\":\"Payment\",\n                \"value\":this.props.payment,\n                \"disabled\":this.props.paymentDisabled\n            },\n            \"downPayment\":{\n                \"title\":\"Down Payment\",\n                \"value\":this.props.downPayment,\n                \"disabled\":this.props.downPaymentDisabled\n            },\n            \"tradeAllowance\":{\n                \"title\":\"Trade Allowance\",\n                \"value\":this.props.tradeAllowance,\n                \"disabled\":this.props.tradeAllowanceDisabled\n            },\n            \"tradePayOff\":{\n                \"title\":\"Trade Payoff\",\n                \"value\":this.props.tradePayOff,\n                \"disabled\":this.props.tradePayOffDisabled\n            },\n            \"tradeAcv\":{\n                \"title\":\"Trace a.c.v\",\n                \"value\":this.props.tradeAcv,\n                \"disabled\":this.props.tradeAcvDisabled\n            }\n        }\n\n        let percentageFieldNameToValueDict = {\n            \"tax\": {\n                \"title\":\"Tax\",\n                \"value\":this.props.tax,\n                \"disabled\":this.props.taxDisabled\n            }\n        }\n\n        return (\n            <Grid container className={\"lender_input\"} spacing={2}>\n                <Grid item xs={12}>\n                    <Select disabled={this.props.lenderSelectDisabled} style={{width:'100%'}} value={this.props.selectedLender} onChange={this.selectLender}>\n                        {\n                            lenders.map((lender, index) => {\n                                return <MenuItem value={lender}>{lender}</MenuItem>\n                            })\n                        }\n                    </Select>\n                </Grid>\n                <Grid item xs={12}>\n                    <Select disabled={this.props.tierSelectDisabled} style={{width:'100%'}} value={this.props.selectedTier} onChange={this.selectTier}>\n                        {\n                            programs.map((program, index) => {\n                                return <MenuItem value={program}>{program}</MenuItem>\n                            })\n                        }\n                    </Select>\n                </Grid>\n                {\n                    Object.keys(moneyFieldNameToValueDict).map(moneyFieldName => {\n                      return <Grid item xs={6}>\n                          <TextField disabled={moneyFieldNameToValueDict[moneyFieldName][\"disabled\"]} size=\"small\" variant=\"outlined\" label={moneyFieldNameToValueDict[moneyFieldName][\"title\"]} value={moneyFieldNameToValueDict[moneyFieldName][\"value\"]} onChange={(event) => this.changeTextField(event, moneyFieldName)} InputProps={{\n                              startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                          }\n                          } />\n                      </Grid>\n                    })\n                }\n\n                {\n                    Object.keys(percentageFieldNameToValueDict).map(percentageFieldName => {\n                        return <Grid item xs={6}>\n                            <TextField disabled={percentageFieldNameToValueDict[percentageFieldName][\"disabled\"]} size=\"small\" variant=\"outlined\" label={percentageFieldNameToValueDict[percentageFieldName][\"title\"]} value={percentageFieldNameToValueDict[percentageFieldName][\"value\"]} onChange={(event) => this.changeTextField(event, percentageFieldName)} InputProps={{\n                                startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                            }\n                            } />\n                        </Grid>\n                    })\n                }\n                <Grid item xs={12} className={\"lender_input_buttons\"}>\n                    <Button disabled={this.props.addBtnDisabled} variant=\"contained\" color={\"primary\"} onClick={this.addLender}>Add</Button>\n                    <Button disabled={this.props.resetBtnDisable} variant=\"contained\" color={\"secondary\"} onClick={this.reset} style={{marginLeft:10}}>Reset</Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        lenderToPrograms:state[\"lenderToPrograms\"],\n        selectedLender:state[\"selectedLender\"],\n        selectedTier:state[\"selectedTier\"],\n        lenderSelectDisabled:state[\"lenderSelectDisabled\"],\n        tierSelectDisabled:state[\"tierSelectDisabled\"],\n        addBtnDisabled:state[\"addBtnDisabled\"],\n        resetBtnDisable:state[\"resetBtnDisable\"],\n        payment:state[\"payment\"],\n        downPayment:state[\"downPayment\"],\n        tradeAllowance:state[\"tradeAllowance\"],\n        tradePayOff:state[\"tradePayOff\"],\n        tradeAcv:state[\"tradeAcv\"],\n        tax:state[\"tax\"],\n        paymentDisabled:state[\"paymentDisabled\"],\n        downPaymentDisabled:state[\"downPaymentDisabled\"],\n        tradeAllowanceDisabled:state[\"tradeAllowanceDisabled\"],\n        tradePayOffDisabled:state[\"tradePayOffDisabled\"],\n        tradeAcvDisabled:state[\"tradeAcvDisabled\"],\n        taxDisabled: state[\"taxDisabled\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        selectLender: (lenderName) => {\n            dispatch({\n                type:\"SELECT_LENDER\",\n                name:lenderName\n            })\n        },\n        selectTier: (tierName) => {\n            dispatch({\n                type:\"SELECT_TIER\",\n                name:tierName\n            })\n        },\n        reset: () => {\n            dispatch(\n                {\n                    type:\"RESET_LENDER_INPUT\"\n                }\n            )\n        },\n        changeLenderInputField: (fieldName, fieldValue) => {\n            dispatch({\n                type:\"CHANGE_LENDER_INPUT_FIELD\",\n                name:fieldName,\n                value:fieldValue\n            })\n        },\n        addLender:() => {\n            dispatch({\n              type:\"ADD_LENDER\"\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LenderInput);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass LenderInputs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.removeLenderInput = this.removeLenderInput.bind(this);\n    }\n\n    fieldNameToTitle(fieldName){\n        return {\n            \"selectedLender\":\"Lender\",\n            \"selectedTier\":\"Tier\",\n            \"payment\":\"Payment\",\n            \"downPayment\":\"Down Payment\",\n            \"tradeAllowance\":\"Trade Allowance\",\n            \"tradePayOff\":\"Trade Payoff\",\n            \"tradeAcv\":\"Trade a.c.v\",\n            \"tax\":\"Tax\"\n        }[fieldName];\n    }\n    \n    removeLenderInput(index){\n        this.props.removeLenderInput(index);\n    }\n\n    render(){\n        console.log(\"render\");\n\n        return (\n            <>\n                <Grid container>\n                {this.props.lenderInputs.map((lenderInput, lenderInputIndex) => {\n                    return (\n                    <Grid item xs={12} className={\"lender_input_values\"}>\n                        <Grid container>\n                            <Grid item xs={12} className={\"lender_input_delete_btn_wrapper\"}>\n                                <IconButton className={\"lender_input_delete_btn\"} onClick={(event) => this.removeLenderInput(lenderInputIndex)}><CloseIcon /></IconButton>\n                            </Grid>\n                        {\n                            Object.keys(lenderInput).map(lenderInputFieldName => {\n                              return (\n                                  <>\n                                     <Grid item xs={6} className={\"lender_input_value_header\"}>\n                                         {this.fieldNameToTitle(lenderInputFieldName)}\n                                     </Grid>\n                                      <Grid item xs={6} className={\"lender_input_value\"}>\n                                          {lenderInput[lenderInputFieldName]}\n                                      </Grid>\n                                  </>\n                              )\n                            })\n                        }\n                        </Grid>\n                    </Grid>\n                    )\n                })}\n                </Grid>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        lenderInputs: state[\"lenderInputs\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        removeLenderInput: (index) => {\n            dispatch({\n                type:\"REMOVE_LENDER_INPUT\",\n                index:index\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LenderInputs);","import React from 'react';\nimport LenderInput from \"./LenderInput\";\nimport \"./Lender.css\";\nimport LenderInputs from \"./LenderInputs\";\n\nclass Lender extends React.Component {\n    render(){\n        return (\n            <>\n                <div className={\"lender\"}>\n                    <LenderInput />\n                    <LenderInputs />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Lender;","import React from 'react';\nimport Filter from \"./Filter\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {connect} from \"react-redux\";\nimport \"./LeftPanel.css\";\nimport Lender from \"./Lender\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nclass LeftPanel extends React.Component {\n    constructor(props) {\n        super (props);\n\n        this.changeTab = this.changeTab.bind(this);\n        this.openFilter = this.openFilter.bind(this);\n        this.closeFilter = this.closeFilter.bind(this);\n        this.openLender = this.openLender.bind(this);\n        this.closeLender = this.closeLender.bind(this);\n\n        this.state = {\n            \"filterDialogOpen\":false,\n            \"lenderDialogOpen\":false\n        }\n    }\n\n    changeTab(event, newTabIndex){\n        this.props.changeTab(newTabIndex);\n    }\n\n    openFilter(){\n        this.setState({\n            \"filterDialogOpen\":true\n        });\n    }\n\n    closeFilter(){\n        this.setState({\n            \"filterDialogOpen\":false\n        })\n    }\n\n    openLender(){\n        this.setState({\n            \"lenderDialogOpen\":true\n        })\n    }\n\n    closeLender(){\n        this.setState({\n            \"lenderDialogOpen\":false\n        })\n    }\n\n    render(){\n        let filterTabClassName = \"tab filter \" + (this.props.activeTabIndex == 0?\"active\":\"deactivate\");\n        let lenderTabClassName = \"tab lender \" + (this.props.activeTabIndex == 1?\"active\":\"deactivate\");\n\n        return (\n            <>\n                {this.props.screenData[\"mdUp\"]?(\n                    <>\n                        <Tabs value={this.props.activeTabIndex} onChange={this.changeTab} TabIndicatorProps={{style:{background:'#3f51b5'}}}>\n                            <Tab label={\"Filter\"} className={filterTabClassName}/>\n                            <Tab label={\"Lender\"} className={lenderTabClassName}/>\n                        </Tabs>\n                        {this.props.activeTabIndex == 0 ? <Filter/> : null}\n                        {this.props.activeTabIndex == 1 ? <Lender/> : null}\n                    </>\n                ):(\n                        <>\n                            <Grid container>\n                                <Grid item xs={6} style={{padding:10}}>\n                                    <Button variant={\"contained\"} className=\"filter_btn\" onClick={this.openFilter}>Filter</Button>\n                                </Grid>\n                                <Grid item xs={6} style={{padding:10}}>\n                                    <Button variant={\"contained\"} className=\"lender_btn\" onClick={this.openLender}>Lender</Button>\n                                </Grid>\n                            </Grid>\n                            <Dialog  fullScreen open={this.state.filterDialogOpen}>\n                                <AppBar  style={{position: \"relative\"}}>\n                                    <Toolbar>\n                                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.closeFilter} aria-label=\"close\">\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </Toolbar>\n                                </AppBar>\n                                <DialogContent>\n                                    <Filter/>\n                                </DialogContent>\n                            </Dialog>\n                            <Dialog  fullScreen open={this.state.lenderDialogOpen}>\n                                <AppBar  style={{position: \"relative\"}}>\n                                    <Toolbar>\n                                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.closeLender} aria-label=\"close\">\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </Toolbar>\n                                </AppBar>\n                                <DialogContent>\n                                    <Lender/>\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                    )}\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        activeTabIndex:state[\"tabIndex\"],\n        screenData:state[\"screenData\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeTab: (tabIndex) => {\n            dispatch({\n                type:\"CHANGE_TAB\",\n                index:tabIndex\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPanel);","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from '@material-ui/core/CardContent';\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\nimport Grid from '@material-ui/core/Grid';\nimport \"./Car.css\";\nimport Utils from \"../Utils\";\n\nclass Car extends React.Component {\n    getTitle(){\n        let carYear = this.props.details['year'];\n        let carMake = this.props.details['make'];\n        let carModel = this.props.details['model'];\n        let carTrim = this.props.details['trim'];\n\n        return Utils.convertStr(`${carYear} ${carMake} ${carModel} ${carTrim}`);\n    }\n\n    getProfit(){\n        let maxProfit = Utils.getMaxProfit(this.props.details);\n\n        if(maxProfit == Number.NEGATIVE_INFINITY){\n            return \"-\";\n        }\n\n        return maxProfit;\n    }\n\n    render(){\n        let carImgSrc = \"\";\n        let carImages = this.props.details[\"images\"];\n        Utils.sortImages(carImages);\n\n        if(carImages.length > 0){\n            carImgSrc = carImages[0][\"src\"];\n        }\n\n        let carProfit = this.getProfit();\n        let carProfitClass = \"\";\n\n        if(carProfit != \"-\"){\n            if(carProfit <= 0){\n                carProfit = \"-$\" + -carProfit;\n                carProfitClass = \"negative\";\n            }else{\n                carProfit = \"$\" + carProfit;\n                carProfitClass = \"positive\";\n            }\n        }\n\n        return (\n        <Card className={\"car\"} onClick={(event) => {\n            if(this.props.onClick)\n                this.props.onClick(this.props.details);\n        }}>\n            <CardMedia className={\"car_img\"}>\n                <img src={carImgSrc} style={{width: '100%'}}/>\n            </CardMedia>\n            <CardContent>\n                <Grid container>\n                    {this.props.size==\"sm\"?(\n                        <Grid item xs={5} className={\"car_price\"}>\n                            ${this.props.details[\"total_cost\"]}\n                        </Grid>\n                        ): (\n                            <>\n                            <Grid item xs={12} className={\"car_title\"}>\n                                {this.getTitle()}\n                            </Grid>\n                            <Grid item xs={3}>\n                                Cost\n                            </Grid>\n                            <Grid item xs={5} className={\"car_price\"}>\n                                ${this.props.details[\"total_cost\"]}\n                            </Grid>\n                            <Grid item xs={4} className={\"car_mileage\"}>\n                                {this.props.details[\"mileage\"]} mil.\n                            </Grid>\n                            <Grid item xs={3}>\n                                Profit\n                            </Grid>\n                            <Grid item xs={5} className={\"car_profit \" + carProfitClass}>\n                                {carProfit}\n                            </Grid>\n                            <Grid item xs={4}>\n                                Available|\n                            </Grid>\n                            </>\n                            )\n                    }\n                </Grid>\n            </CardContent>\n        </Card>\n        );\n    }\n}\n\nexport default Car;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport LenderInput from \"./LenderInput\";\nimport {connect} from \"react-redux\";\n\nclass LenderInputDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.closeDialog = this.closeDialog.bind(this);\n        this.lenderAdded = this.lenderAdded.bind(this);\n    }\n\n    closeDialog(){\n        this.props.closeLenderInputDialog();\n    }\n\n    lenderAdded(){\n        this.props.closeLenderInputDialog();\n    }\n\n    render(){\n        return (\n            <Dialog  open={this.props.lenderInputDialogOpen}\n                         onClose={this.closeDialog}>\n            <DialogTitle>Add Lender</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Please enter full information for new lender</DialogContentText>\n                <LenderInput onChange={this.lenderAdded}/>\n            </DialogContent>\n        </Dialog>);\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        lenderInputDialogOpen:state[\"lenderInputDialogOpen\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        closeLenderInputDialog: () => {\n            dispatch({\n                type:\"CLOSE_LENDER_INPUT_DIALOG\"\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LenderInputDialog);","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport {connect} from \"react-redux\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport LenderInputModalDialog from \"./LenderInputModalDialog\";\nimport \"./CarCalculation.css\";\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\n\nclass CarCalculation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.tableHeaders = [\n            \"Lender\",\n            \"Tier\",\n            \"Advance\",\n            \"Interest\",\n            \"Term\",\n            \"Payment\",\n            \"Back\",\n            \"Front\",\n            \"Profit\",\n            \"Actions\"\n        ];\n\n        this.selectInterest = this.selectInterest.bind(this);\n        this.deleteLenderInput = this.deleteLenderInput.bind(this);\n        this.addLender = this.addLender.bind(this);\n    }\n\n    selectInterest(event, lenderInputIndex){\n        this.props.selectInterest(this.props.details, lenderInputIndex, event.target.value);\n    }\n\n    formatValue(val, isCurrency){\n        if(val != null && val !== \"NOT_FOUND\" && val !== \"\"){\n            if(isCurrency) {\n                if (val < 0) {\n                    return \"-$\" + -val;\n                } else {\n                    return \"$\" + val;\n                }\n            }\n        }else{\n            if (val == \"NOT_FOUND\")\n                return \"-\";\n        }\n\n        return val;\n    }\n\n    deleteLenderInput(lenderInputIndex){\n        this.props.deleteLenderInput(lenderInputIndex);\n    }\n\n    addLender(){\n        this.props.openLenderInputDialog();\n    }\n\n    renderAsManyTables(lenderInputsCalculation){\n        return lenderInputsCalculation.map((lenderInputCalculation, lenderInputIndex) =>\n            <Table>\n                <TableHead>\n                    <StyledTableRow>\n                        <StyledTableCell>Name</StyledTableCell>\n                        <StyledTableCell>Value</StyledTableCell>\n                    </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                    <StyledTableRow>\n                        <StyledTableCell>Lender</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"lender\"])}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Tier</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"tier\"])}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Advance</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"advance\"])}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Interest</StyledTableCell>\n                        <StyledTableCell>\n                            <Select value={lenderInputCalculation[\"interest\"]} onChange={(event) => this.selectInterest(event, lenderInputIndex)}>\n                            {\n                                lenderInputCalculation[\"interestList\"].map(interest => {\n                                    return <MenuItem value={interest}>{interest}</MenuItem>\n                                })\n                            }\n                            </Select>\n                        </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Term</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"term\"])}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Payment</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"payment\"], true)}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Back</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"back\"], true)}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Front</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"front\"], true)}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell>Profit</StyledTableCell>\n                        <StyledTableCell>{this.formatValue(lenderInputCalculation[\"profit\"], true)}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                        <StyledTableCell colspan={2} style={{textAlign: \"center\"}}>\n                            <IconButton\n                                onClick={(event) => this.deleteLenderInput(lenderInputIndex)} className={\"delete_lender_btn\"}><DeleteIcon/></IconButton>\n                        </StyledTableCell>\n\n                    </StyledTableRow>\n                </TableBody>\n            </Table>\n        );\n    }\n\n    renderAsOneTable(lenderInputsCalculation){\n        return (\n            <Table>\n                <TableHead>\n                    <StyledTableRow>\n                        {\n                            this.tableHeaders.map((tableHeader) => {\n                                return (\n                                    <StyledTableCell>\n                                        {tableHeader}\n                                    </StyledTableCell>\n                                )\n                            })\n                        }\n                    </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        lenderInputsCalculation.map((lenderInputCalculation, lenderInputIndex) => {\n                            return (<StyledTableRow>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"lender\"])}</StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"tier\"])}</StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"advance\"])}</StyledTableCell>\n                                <StyledTableCell>\n                                    <Select value={lenderInputCalculation[\"interest\"]} onChange={(event) => this.selectInterest(event, lenderInputIndex)}>\n                                        {\n                                            lenderInputCalculation[\"interestList\"].map(interest => {\n                                                return <MenuItem value={interest}>{interest}</MenuItem>\n                                            })\n                                        }\n                                    </Select>\n                                </StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"term\"])}</StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"payment\"], true)}</StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"back\"], true)}</StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"front\"], true)}</StyledTableCell>\n                                <StyledTableCell>{this.formatValue(lenderInputCalculation[\"profit\"], true)}</StyledTableCell>\n                                <StyledTableCell>\n                                    <IconButton\n                                        onClick={(event) => this.deleteLenderInput(lenderInputIndex)} className={\"delete_lender_btn\"}><DeleteIcon/></IconButton>\n                                </StyledTableCell>\n                            </StyledTableRow>);\n                        })\n                    }\n                </TableBody>\n            </Table>\n        );\n    }\n\n    render(){\n        console.log(\"render calculation\");\n        let lenderInputsCalculation = [];\n\n        this.props.lenderInputs.map((lenderInput, lenderInputIndex) => {\n            let carCalculation = this.props.details[\"car_calculation\"][lenderInputIndex];\n            let interestList = carCalculation[\"interestList\"];\n\n            lenderInputsCalculation.push({\n                \"lender\":lenderInput[\"selectedLender\"],\n                \"tier\":lenderInput[\"selectedTier\"],\n                \"advance\":carCalculation[\"advance\"],\n                \"interest\":carCalculation[\"interest\"],\n                \"interestList\":interestList,\n                \"term\":carCalculation[\"term\"],\n                \"payment\":lenderInput[\"payment\"],\n                \"back\":carCalculation[\"back\"],\n                \"front\":carCalculation[\"front\"],\n                \"profit\":carCalculation[\"profit\"]\n            });\n        });\n\n        return (\n            <>\n            <Grid container>\n                <Grid item xs={12}>\n                    {this.props.screenData[\"mdUp\"]?this.renderAsOneTable(lenderInputsCalculation):this.renderAsManyTables(lenderInputsCalculation)}\n                </Grid>\n                <Grid item xs={12} style={{textAlign: \"right\"}}>\n                    <Button color={\"primary\"} variant={\"contained\"} onClick={this.addLender}><AddIcon/>Add Lender</Button>\n                </Grid>\n            </Grid>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        lenderInputs:state[\"lenderInputs\"],\n        screenData:state[\"screenData\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        selectInterest: (carDetail, lenderInputIndex, interest) => {\n            dispatch(\n                {\n                    type: \"SELECT_INTEREST\",\n                    carDetail:carDetail,\n                    lenderInputIndex:lenderInputIndex,\n                    interest:interest\n                }\n            )\n        },\n        deleteLenderInput: (lenderInputIndex) => {\n            dispatch({\n                type:\"DELETE_LENDER_INPUT\",\n                index:lenderInputIndex\n            })\n        },\n        openLenderInputDialog: () => {\n            dispatch({\n                type:\"OPEN_LENDER_INPUT_DIALOG\"\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CarCalculation);","import React from \"react\";\nimport { Card } from '@material-ui/core';\nimport Utils from \"../Utils\";\nimport CardContent from '@material-ui/core/CardContent';\nimport \"./DetailedCar.css\";\nimport Grid from '@material-ui/core/Grid';\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CarCalculation from \"./CarCalculation\";\nimport {connect} from \"react-redux\";\n\nclass DetailedCar extends React.Component {\n    getTitle(){\n        let carYear = this.props.details['year'];\n        let carMake = this.props.details['make'];\n        let carModel = this.props.details['model'];\n        let carTrim = this.props.details['trim'];\n\n        return Utils.convertStr(`${carYear} ${carMake} ${carModel} ${carTrim}`);\n    }\n\n    render(){\n        let carImages = this.props.details[\"images\"];\n        let displayedFields = [\"title\", \"make\", \"model\", \"series\", \"style\", \"drive\", \"fuel\", \"mileage\", \"vin\", \"trim\", \"color\", \"total_cost\"];\n\n        if(carImages.length > 0){\n            Utils.sortImages(carImages);\n        }\n\n        let carImagesToImageGallery = carImages.map(carImage => {return {original:carImage[\"src\"], thumbnail:carImage[\"src\"]}});\n\n        return (\n            <Card className={\"detailed_car\"}>\n                <CardContent>\n                    <Grid container>\n                        <Grid item md={6} xs={12} className={\"car_images\"}>\n                            <ImageGallery items={carImagesToImageGallery} showPlayButton={false}/>\n                        </Grid>\n                        <Grid item md={6} xs={12} className={\"car_description \" + (this.props.screenData[\"mdUp\"]?\"paddingLeft20Important\":\"\")}>\n                            <Grid container>\n                                <Grid item md={12} xs={12}  className={\"car_title\"}>\n                                    {this.getTitle()}\n                                </Grid>\n                                <Grid item md={12} xs={12} >\n                                    <Table>\n                                        <TableBody>\n                                            {\n                                                displayedFields.map(infoName => {\n                                                    return (<TableRow>\n                                                        <TableCell>{infoName}</TableCell>\n                                                        <TableCell>{this.props.details[infoName]}</TableCell>\n                                                    </TableRow>);\n                                                })\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <CarCalculation details={this.props.details}/>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        screenData:state[\"screenData\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedCar);\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\nimport React from 'react';\n\nexport default class LoaderWrapper extends React.Component {\n    render(){\n        return (\n            <Loader\n                type=\"Oval\"\n                color=\"#3f51b5\"\n                height={50}\n                width={50}\n            />\n        );\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Car from \"./Car\";\nimport \"./CarShow.css\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DetailedCar from \"./DetailedCar\";\nimport LazyLoad from 'react-lazyload';\nimport LoaderWrapper from \"./LoaderWrapper\";\nimport { withRouter } from \"react-router\";\n\nclass CarShow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sortByIndexChange = this.sortByIndexChange.bind(this);\n        this.viewTypeChange = this.viewTypeChange.bind(this);\n        this.carClick = this.carClick.bind(this);\n    }\n\n    sortByIndexChange(event){\n        this.props.sortBySelect(event.target.value);\n    }\n\n    viewTypeChange(index){\n        this.props.changeViewType(index);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.loadDataFinished)\n            this.props.loading(false);\n    }\n\n    carClick(carIndex){\n        const {history} = this.props;\n\n        history.push('/car', {carIndex: carIndex});\n    }\n\n    render(){\n        let gridView = this.props.viewTypeIndex == 0;\n        return (\n            <Grid container className={\"car_show \" + (this.props.screenData[\"mdUp\"]?\"big_screen\":\"small_screen\")}>\n                <Grid item xs={12}>\n                    <Grid container>\n                        <Grid item xs={6} className={\"item_match_count\"}>\n                            {this.props.carDetails.length} matches\n                        </Grid>\n                        <Grid item xs={6} className={\"sort_by_wrapper\"}>\n                            <IconButton onClick={(event) => this.viewTypeChange(0)} className={\"view_type grid \" + ((this.props.viewTypeIndex == 0)?\"active\":\"deactive\")}><ViewComfyIcon /></IconButton>\n                            <IconButton onClick={(event) => this.viewTypeChange(1)} className={\"view_type list \" + ((this.props.viewTypeIndex == 1)?\"active\":\"deactive\")}><MenuIcon /></IconButton>\n                            <Select value={this.props.sortOptionIndex} className={\"sort_by\"} onChange={this.sortByIndexChange}>\n                                <MenuItem value={0}>Sort By</MenuItem>\n                                <MenuItem value={1}>Lowest Price</MenuItem>\n                                <MenuItem value={2}>Highest Price</MenuItem>\n                                <MenuItem value={3}>Lowest Mileage</MenuItem>\n                                <MenuItem value={4}>Highest Mileage</MenuItem>\n                                <MenuItem value={5}>Newest Year</MenuItem>\n                                <MenuItem value={6}>Oldest Year</MenuItem>\n                                <MenuItem value={7}>Highest Profit</MenuItem>\n                            </Select>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {\n                    (!this.props.isLoading)?(\n                    gridView?(\n                            this.props.carDetails.map((carDetail, carIndex) => {\n                                return <Grid item md={3} xs={12} className={\"car_wrapper\"}>\n                                    <LazyLoad height={100} offset={100} once><Car details={carDetail} onClick={() => this.carClick(carIndex)}/></LazyLoad>\n                                </Grid>\n                            })\n                        ):(\n                        this.props.carDetails.map((carDetail, carIndex) => {\n                            return <Grid xs={12} className={\"car_wrapper\"}>\n                                <LazyLoad height={500} offset={100} once><DetailedCar details={carDetail} onClick={() => this.carClick(carIndex)} /></LazyLoad>\n                            </Grid>\n                        })\n                    )\n                    ):(\n                        <div className={\"loader_wrapper\"}>\n                            <LoaderWrapper />\n                        </div>\n                        )\n                }\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        carDetails: state[\"postProcessingCarDetails\"],\n        sortOptionIndex: state[\"sortOptionIndex\"],\n        viewTypeIndex:state[\"viewTypeIndex\"],\n        isLoading:state[\"isLoading\"],\n        loadDataFinished:state[\"loadDataFinished\"],\n        screenData:state[\"screenData\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        sortBySelect : (sortByOptionIndex) => {\n            dispatch({\n                type:\"SORT_BY_SELECTION\",\n                index:sortByOptionIndex\n            })\n        },\n        changeViewType : (viewTypeIndex) => {\n            dispatch({\n                type:\"CHANGE_VIEW_TYPE\",\n                index:viewTypeIndex\n            })\n        },\n        loading:(value) => {\n            dispatch({\n                type:\"LOADING\",\n                value: value\n            })\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CarShow));","import React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {connect} from \"react-redux\";\n\nclass MenuBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        return (\n            <>\n                <AppBar position=\"static\">\n                    {this.props.screenData[\"mdUp\"] ? (\n                        <React.Fragment>\n                            <Tabs>\n                                <Tab label=\"Home\"/>\n                                <Tab label=\"Rate Sheet\" disabled/>\n                                <Tab label=\"Quick Quote\" disabled/>\n                                <Tab label=\"Lender Assist\" disabled/>\n                            </Tabs>\n                        </React.Fragment>) : (\n                        <Toolbar>\n                            <IconButton\n                                aria-label=\"menu\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                style={{\"color\":\"white\"}}\n                                onClick={this.menuBtnOnClick}>\n                                <MenuIcon />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={this.state.anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={Boolean(this.state.anchorEl)}\n                                onClose={this.closeMenu}\n                            >\n                                <MenuItem>HOME</MenuItem>\n                                <MenuItem>RATE SHEET</MenuItem>\n                                <MenuItem>QUICK QUOTE</MenuItem>\n                                <MenuItem>LENDER ASSIST</MenuItem>\n                            </Menu>\n                        </Toolbar>\n                    )\n                    }\n                </AppBar>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n        screenData:state[\"screenData\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuBar from \"./MenuBar\";\nimport LeftPanel from \"./LeftPanel\";\nimport CarShow from \"./CarShow\";\nimport LenderInputModalDialog from \"./LenderInputModalDialog\";\nimport React from \"react\";\n\nclass HomePage extends React.Component {\n    render(){\n        return (<>\n            <ScrollToTop smooth/>\n            <Grid container className={\"app\"}>\n                <Grid item xs={12}>\n                    <MenuBar />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <LeftPanel/>\n                </Grid>\n                <Grid item xs={12} md={9}>\n                    <CarShow/>\n                    <LenderInputModalDialog/>\n                </Grid>\n            </Grid>\n        </>);\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Car from \"./Car\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport \"./CarList.css\";\n\nclass CarList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let selectedCarIndex = 0;\n\n        if(this.props.initSelectedCarIndex){\n            selectedCarIndex = this.props.initSelectedCarIndex;\n        }\n\n        this.state = {\n            selectedCarIndex:selectedCarIndex,\n            firstBtnDisabled:this.props.initSelectedCarIndex == 0,\n            previousBtnDisabled:this.props.initSelectedCarIndex == 0,\n            nextBtnDisabled:this.props.initSelectedCarIndex == this.props.carDetails.length - 1,\n            lastBtnDisabled:this.props.initSelectedCarIndex == this.props.carDetails.length - 1\n        }\n\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.carOnClick = this.carOnClick.bind(this);\n        this.first = this.first.bind(this);\n        this.last = this.last.bind(this);\n    }\n\n    updateBtnDisabled(selectedCarIndex){\n        return {\n            firstBtnDisabled: selectedCarIndex == 0,\n            previousBtnDisabled:selectedCarIndex == 0,\n            nextBtnDisabled:(selectedCarIndex == this.props.carDetails.length - 1),\n            lastBtnDisabled: (selectedCarIndex == this.props.carDetails.length - 1)\n        };\n    }\n\n    callOnChange = (carIndex) => {\n        if (this.props.onChange)\n            this.props.onChange(carIndex);\n    }\n\n    first(){\n        if (this.state.selectedCarIndex > 0){\n            let newCarIndex = 0;\n\n            this.setState({selectedCarIndex: newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    previous(){\n        if(this.state.selectedCarIndex > 0) {\n            let newCarIndex = (this.state.selectedCarIndex - 1);\n\n            this.setState({selectedCarIndex: newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    next(){\n        if(this.state.selectedCarIndex < this.props.carDetails.length - 1){\n            let newCarIndex = (this.state.selectedCarIndex + 1);\n\n            this.setState({selectedCarIndex:newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    last(){\n        if (this.state.selectedCarIndex < this.props.carDetails.length - 1){\n            let newCarIndex = this.props.carDetails.length - 1;\n\n            this.setState({selectedCarIndex: newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    carOnClick(carIndex){\n        this.setState({selectedCarIndex:carIndex}, this.callOnChange(carIndex));\n    }\n\n    renderFullVersion(startCarIndex, endCarIndex){\n        return (\n            <>\n                <Grid container>\n                    {\n                        this.props.carDetails.slice(startCarIndex, endCarIndex + 1).map((carDetail, index) =>\n                            <Grid item xs={1} style={{padding:10}}>\n                                <div className={(startCarIndex + index == this.state.selectedCarIndex)?\"selected_car\":\"\"}>\n                                    <Car size={\"sm\"} details={carDetail} onClick={(event, carDetails) => this.carOnClick(startCarIndex + index)}/>\n                                </div>\n                            </Grid>\n                        )\n                    }\n                    <Grid item xs={1} />\n                    <Grid item xs={2}>\n                        <div style={{display:'flex', width:'100%', height:'100%', alignItems: 'center', justifyContent:\"center\"}}>\n                            <IconButton disabled={this.state.previousBtnDisabled} variant=\"contained\" onClick={this.previous} size={\"medium\"} className={\"full_version navigation_btn prev_btn \" + (this.state.previousBtnDisabled?\"disabled\":\"enabled\")}><ArrowLeft /> Prev</IconButton>\n                            <IconButton disabled={this.state.nextBtnDisabled} variant=\"contained\" onClick={this.next} size={\"medium\"} className={\"full_version navigation_btn next_btn \" + (this.state.nextBtnDisabled?\"disabled\":\"enabled\")}>Next <ArrowRight /></IconButton>\n                        </div>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n    renderOnlyButtonsVersion(){\n        return (\n            <Grid container>\n                <Grid item xs={5}>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <IconButton disabled={this.state.firstBtnDisabled} onClick={this.first} className={\"navigation_btn firt_btn \" + (this.state.firstBtnDisabled?\"disabled\":\"enabled\")}><FirstPageIcon />First</IconButton>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <IconButton disabled={this.state.previousBtnDisabled} variant=\"contained\" onClick={this.previous} size={\"medium\"} className={\"navigation_btn prev_btn \" + (this.state.previousBtnDisabled?\"disabled\":\"enabled\")}><ArrowLeft /> Prev</IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n                <Grid item xs={5}>\n                    <Grid container>\n                        <Grid item xs={6} style={{textAlign:\"right\"}}>\n                            <IconButton disabled={this.state.nextBtnDisabled} variant=\"contained\" onClick={this.next} size={\"medium\"} className={\"navigation_btn next_btn \" + (this.state.nextBtnDisabled?\"disabled\":\"enabled\")}>Next <ArrowRight /></IconButton>\n                        </Grid>\n                        <Grid item xs={6} style={{textAlign:\"right\"}}>\n                            <IconButton disabled={this.state.lastBtnDisabled} onClick={this.last} className={\"navigation_btn last_btn \" + (this.state.lastBtnDisabled?\"disabled\":\"enabled\")}>Last<LastPageIcon /></IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    render(){\n        let startCarIndex = -1;\n        let endCarIndex = -1;\n\n        if (this.state.selectedCarIndex - 4 >= 0 && this.state.selectedCarIndex + 4 < this.props.carDetails.length){\n            startCarIndex = this.state.selectedCarIndex - 4;\n            endCarIndex = this.state.selectedCarIndex + 4;\n        }else if(this.state.selectedCarIndex - 4 < 0){\n            startCarIndex = 0;\n            endCarIndex = 8;\n        }else if(this.state.selectedCarIndex + 4 >= this.props.carDetails.length){\n            endCarIndex = this.props.carDetails.length;\n            startCarIndex = this.props.carDetails.length - 9;\n        }\n\n        let fullVersion = true;\n\n        if(!this.props.screenData[\"mdUp\"]){\n            fullVersion = false;\n        }\n\n        if (fullVersion){\n            return this.renderFullVersion(startCarIndex, endCarIndex);\n        }else {\n            return this.renderOnlyButtonsVersion();\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n        carDetails:state[\"postProcessingCarDetails\"],\n        screenData:state[\"screenData\"],\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CarList);","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuBar from \"./MenuBar\";\nimport LeftPanel from \"./LeftPanel\";\nimport CarShow from \"./CarShow\";\nimport LenderInputModalDialog from \"./LenderInputModalDialog\";\nimport CarList from \"../components/CarList\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport DetailedCar from \"./DetailedCar\";\nimport {connect} from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nclass CarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.changeCar = this.changeCar.bind(this);\n        this.goBack = this.goBack.bind(this);\n        let carIndex = 0;\n\n        const {location} = this.props;\n\n        if(location && location.state){\n            carIndex = location.state.carIndex;\n        }\n\n        this.state = {\n            carIndex:carIndex\n        }\n    }\n\n    changeCar(carIndex){\n        this.setState({carIndex: carIndex});\n    }\n\n    goBack(){\n        const {history} = this.props;\n\n        history.push('/');\n    }\n\n    render() {\n        let  carDetailsAvailable = false;\n\n        if(this.props.carDetails.length > this.state.carIndex){\n            carDetailsAvailable = true;\n        }\n\n        return (<>\n            <ScrollToTop smooth/>\n            <Grid container className={\"app\"}>\n                <Grid item xs={12}>\n                    <MenuBar />\n                </Grid>\n                <Grid item xs={12}>\n                    <a href={\"#\"} className={\"search_results_back_link\"}\n                       onClick={this.goBack}><BsArrowLeft/> All Results</a>\n                </Grid>\n                {carDetailsAvailable?(\n                    <>\n                        <Grid item xs={12}>\n                            <CarList initSelectedCarIndex={this.state.carIndex} onChange={this.changeCar} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <DetailedCar details={this.props.carDetails[this.state.carIndex]}/>\n                        </Grid>\n                    </>\n                ):(\n                    'Not found'\n                )}\n                <LenderInputModalDialog/>\n            </Grid>\n        </>);\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n        carDetails:state[\"postProcessingCarDetails\"]\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CarPage));","import React, {useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LeftPanel from './components/LeftPanel';\nimport CarShow from './components/CarShow';\nimport Grid from '@material-ui/core/Grid';\nimport {fetchCarDetails, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Service\";\nimport {connect} from \"react-redux\";\nimport LenderInputModalDialog from \"./components/LenderInputModalDialog\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\nimport MenuBar from \"./components/MenuBar\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport HomePage from \"./components/HomePage\";\nimport CarPage from \"./components/CarPage\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst App = (props) => {\n    let theme = useTheme();\n    let mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n    props.updateScreenData({\n        mdUp:mdUp\n    });\n\n    useEffect(() => {\n        props.loading(true);\n\n        Promise.all([fetchCarDetails(), fetchLenders(), fetchLenderTerms(), fetchLenderPrograms()]).then((result) => {\n            let carDetails = result[0];\n            let lenders = result[1];\n            let lenderTerms = result[2];\n            let lenderPrograms = result[3];\n\n            props.fetchDataFinished(carDetails, lenders, lenderTerms, lenderPrograms);\n            props.loading(false);\n        });\n    }, [props.loading, props.fetchDataFinished]);\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/car\">\n                    <CarPage/>\n                </Route>\n                <Route path=\"/\">\n                    <HomePage/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        fetchDataFinished: (carDetails, lenders, lenderTerms, lenderPrograms) => {\n            dispatch({\n                type:\"FETCH_DATA_FINISHED\",\n                carDetails:carDetails,\n                lenders:lenders,\n                lenderTerms:lenderTerms,\n                lenderPrograms:lenderPrograms\n            })\n        },\n        loading:(value) => {\n            dispatch({\n                type:\"LOADING\",\n                value: value\n            })\n        },\n        updateScreenData: (value) => {\n            dispatch({\n                type:\"UPDATE_SCREEN_DATA\",\n                value: value\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export function fetchCarDetails(){\n    return fetch(\"https://lender-filter-backend-test.herokuapp.com/cars/\").then(reponse => reponse.json());\n}\n\nexport function fetchLenders(){\n    return fetch(\"https://lender-filter-backend-test.herokuapp.com/lenders/\").then(reponse => reponse.json());\n}\n\nexport function fetchLenderTerms(){\n    return fetch(\"https://lender-filter-backend-test.herokuapp.com/lenders/terms/\").then(reponse => reponse.json());\n}\n\nexport function fetchLenderPrograms(){\n    return fetch(\"https://lender-filter-backend-test.herokuapp.com/lenders/programs/\").then(reponse => reponse.json());\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {appReducer} from \"./reducer\";\n\nconst store = createStore(appReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider\n      store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}