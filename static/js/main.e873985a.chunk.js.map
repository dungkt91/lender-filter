{"version":3,"sources":["ListFilter.js","RangeFilter.js","Filter.js","Lender.js","Utils.js","LeftPanel.js","Api.js","Car.js","Loader.js","CarShow.js","Menubar.js","HomePage.js","CarDescription.js","CarImagesGallery.js","CarShowElement.js","CarShowElementButtons.js","CarList.js","CarPage.js","App.js","serviceWorker.js","index.js","GlobalVariables.js","LenderInput.js","LenderInputs.js","CarCalculation.js"],"names":["ListFilter","props","optionCheckedDict","options","state","selectAll","bind","optionOnchange","this","init","newState","checkedAll","option","isChecked","includes","setState","onChange","title","selectedOptions","push","event","selectAllCheckbox","target","selectedCheckboxState","checked","name","checkbox","console","log","sortedOptions","sort","manyOptions","length","Grid","container","className","item","xs","Checkbox","color","map","titleTransformFunc","displayCount","counts","React","Component","RangeFilter","onChangeDebounced","min","max","value_type","Math","values","debounce","sliderOnChange","textFieldName","value","current_min","current_max","undefined","minTitle","maxTitle","toText","inputProps","startAdornment","InputAdornment","position","endAdornment","style","padding","TextField","label","getMinTitle","variant","size","textFieldOnChange","InputProps","align","paddingTop","getToText","getMaxTitle","Slider","valueLabelDisplay","step","Filter","filters","filtersInitializationHappened","filter","filterOnChange","createFilter","expandOrCollapse","filterTitle","stateKeyName","dependentFilter","dependentList","refsDict","getValues","newOptions","Set","forEach","add","Array","from","filterType","stateName","filterIndex","filterComponent","ref","curFilter","Fragment","onClick","Collapse","in","Lender","lenderMenuItems","lenderName","MenuItem","lenderToPrograms","beginningState","lenderInputs","selectLender","selectTier","addLender","reset","deleteLenderInput","selectedTier","tierMenuItems","tierSelectDisabled","selectedLender","lenderSelectDisabled","currencyFields","error","percentageFields","isTextFieldsEnabled","fieldLabel","newValue","isError","isNaN","newCurrencyFields","newPercentageFields","selectLenderName","tierName","selectIndex","hasAnyErrors","Object","keys","key","lenderInput","hasAnyErrorsInLenderInput","newLenderInputs","lenderInputIndex","splice","setLenderInputs","spacing","LenderInput","LenderInputs","inputs","handleDeleteBtnClick","Utils","convertStr","str","split","word","result","charAt","toUpperCase","substring","toLowerCase","join","LeftPanel","handleChange","filterRef","createRef","lenderRef","parseProps","carDetails","selectedTabIndex","lenderDialogOpen","filterDialogOpen","openFilter","openLender","closeFilter","closeLender","newSelectedTabIndex","makes","makeToModelsDict","makeToCountDict","modelToCountDict","models","yearSet","i","carDetail","make","model","year","yearRangeList","filtersExpanded","createRangeListContinuousValue","parseInt","lenderIdToLenderName","lenders","lender","lenderPrograms","lenderProgram","partsCount","current","getFilterValues","getLenderInputs","lendersDialogOpen","screenSize","Tabs","TabIndicatorProps","background","Tab","lenderOnChange","Button","width","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","edge","aria-label","DialogContent","domain","Car","carYear","details","carMake","carModel","carTrim","images","image","original","carImgSrc","detailsImages","Card","CardMedia","src","CardContent","textAlign","getCarTitle","clipLoaderCss","css","Loader","isVisible","hideLoader","nextProps","timeout","setTimeout","display","justifyContent","children","CarShow","sortOptionIndex","selectSortOption","carOnClick","number","carDetail1","carDetail2","total_cost","reverseNumberSign","mileage","hasFilterValues","filterValues","filterValue","filterFieldName","filterTitleToFieldName","selectedOptionsSet","has","minVal","maxVal","Number","MAX_SAFE_INTEGER","sortCarDetails","carIndex","history","results","carDetailsAfterFilterAndSort","Select","index","md","lg","withRouter","Menubar","isBigScreen","disabled","aria-controls","aria-haspopup","menuBtnOnClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","closeMenu","HomePage","leftPanelRef","setFilterValues","smooth","xl","isLoading","sm","carJson","lendersJson","lenderProgramsJson","CarDescription","getRowValue","trim","rowName","row","getRowWithName","matches","Table","TableBody","TableRow","TableCell","CarImagesGallery","items","showPlayButton","showFullscreenButton","CarShowElement","fieldName","convertDict","excludeCarDetailFields","convertFieldNameToLabel","isCurrencyField","thumbnail","convertToImages","convertToCarDetails","CarCalculation","filtersInputs","lenderData","CarList","callOnChange","detailsList","noCars","selectedCarIndex","initSelectedCarIndex","previousBtnDisabled","nextBtnDisabled","next","previous","newCarIndex","updateBtnDisabled","startCarIndex","endCarIndex","slice","height","alignItems","CarPage","location","goBack","selectCarInCarList","carDetailsAvailable","href","getLenderData","AppClass","lenderTermsJson","Promise","all","fetch","then","responses","response","json","jsons","convertKmToMileage","setLenderData","car","mileageLowerCase","floor","parseFloat","replace","basename","process","path","App","theme","useTheme","xsUp","useMediaQuery","breakpoints","up","smUp","mdUp","lgUp","xlUp","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","globalDict","newFilterValues","newLenderData","currencyFieldLabel","textboxOnChange","helperText","percentageFieldLabel","marginLeft","input","keyToTitle","StyledTableCell","withStyles","head","backgroundColor","palette","primary","main","common","white","body","fontSize","StyledTableRow","root","default","CarCalculationClass","mileageToKms","addCurrencySymbol","abs","pv","rate","periods","payment","future","type","eval","pow","getLenderId","calculateProfitFirstInterest","filterInputs","interests","createCalculationDetail","profit","selectedInterest","lenderTerms","advance","interest","term","foundLenderTerm","foundLenderProgram","lenderId","lender_id","rateMin","rate_min","rateMax","rate_max","toFixed","carKms","lenderTerm","min_kms","max_kms","maxFront","termType","x_clean","clean","average","rough","round","maxProfit","financed","holdBack","hold_back","funded","tradeAllowance","tradePayOff","downPayment","tradeAcv","paidOut","userInputTax","netPaid","calculationDetailsColumnHeaders","calculationDetailsValues","createLenderToPrograms","selectInterestEvent","addRemoveLenders","handleModalClose","selectedInterests","newCalculationDetailsValues","entries","isValidFilterInputs","calculationDetails","firstInterest","selectedLenderIndex","selectedTierIndex","lenderIndex","newInterest","classNameValue","header","columnValues","columnValue","interestMenuItems","getCellStyle","removeLenderInput","tables","lenderCalculationDetailsValues","createCell","colspan","userInputsFilterData","createCalculationDetails","table","renderWithOneTable","renderWithThreeTables","marginTop"],"mappings":"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","file":"static/js/main.e873985a.chunk.js","sourcesContent":["import React from 'react';\nimport {Checkbox} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport './ListFilter.css';\n\nclass ListFilter extends React.Component{\n    constructor(props) {\n        super(props);\n        let optionCheckedDict = {};\n\n        for(let option of this.props.options){\n            optionCheckedDict[option] = true;\n        }\n\n        this.state = {\n            'Select All': true,\n            ...optionCheckedDict\n        };\n\n        this.selectAll = this.selectAll.bind(this);\n        this.optionOnchange = this.optionOnchange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.init){\n            let newState = {...this.state};\n\n            let checkedAll = true;\n\n            for(let option of this.props.options){\n                let isChecked = this.props.init.includes(option);\n                newState[option] = isChecked;\n\n                if(!isChecked) {\n                    checkedAll = false;\n                }\n            }\n\n            newState['Select All'] = checkedAll;\n\n            this.setState(newState, this.props.onChange);\n        }\n    }\n\n    getTitle(){\n        return this.props.title;\n    }\n\n    getValues(){\n        let selectedOptions = [];\n\n        for (let option of this.props.options){\n            if (this.state[option]){\n                selectedOptions.push(option);\n            }\n        }\n\n        return {\"selectedOptions\":selectedOptions};\n    }\n\n    selectAll(event){\n        let selectAllCheckbox = event.target;\n        let selectedCheckboxState = selectAllCheckbox.checked;\n        let newState = {...this.state};\n\n        for(let option of this.props.options){\n            if (selectAllCheckbox.checked){\n                newState[option] = true;\n            }else {\n                newState[option] = false;\n            }\n        }\n\n        newState['Select All'] = selectedCheckboxState;\n        this.setState(newState, this.props.onChange);\n    }\n\n    optionOnchange(event, name){\n\n        let checkbox = event.target;\n        let newState = {...this.state};\n        newState[name] = checkbox.checked;\n\n        let selectAll = true;\n\n        for(let option of this.props.options){\n            if(!newState[option]){\n                selectAll = false;\n            }\n        }\n\n        newState['Select All'] = selectAll;\n\n        this.setState(newState, this.props.onChange);\n        console.log((checkbox.checked?'Check ':'Unchecked ') + name);\n    }\n\n    render(){\n        let sortedOptions = [...this.props.options];\n        sortedOptions.sort();\n\n        let manyOptions = sortedOptions.length > 10;\n\n        return (\n            <Grid container className={'item_wrapper ' + (manyOptions?'many_options':'')}>\n                <Grid item xs={12}>\n                    <Checkbox checked={this.state['Select All']} color={\"primary\"} onChange={this.selectAll} />All\n                </Grid>\n                {\n                    sortedOptions.map(item => (\n                        <Grid item xs={12}>\n                            <Checkbox checked={this.state[item]} color={\"primary\"}\n                                      onChange={(event) => this.optionOnchange(event, item)}/>\n                            {this.props.titleTransformFunc?this.props.titleTransformFunc(item):item}\n                            {this.props.displayCount?<span className={\"filter_item_count\"}>  ({this.props.counts[item]})</span>:null}\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default ListFilter;","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport debounce from \"lodash/debounce\";\nimport Slider from '@material-ui/core/Slider';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nclass RangeFilter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let min = \"\";\n        let max = \"\";\n\n        if (this.props.value_type == \"discrete\"){\n            min = Math.min(...this.props.values);\n            max = Math.max(...this.props.values);\n        } else if (this.props.value_type == \"continuous\"){\n            min = this.props.values[0];\n            max = this.props.values[1];\n        }\n\n        this.state = {\n            \"min\":min,\n            \"max\":max,\n            \"current_min\":min,\n            \"current_max\":max\n        }\n\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 1000);\n        this.sliderOnChange = this.sliderOnChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.init){\n            this.setState({\"current_min\":this.props.init[\"min\"], \"current_max\":this.props.init[\"max\"]});\n        }\n    }\n\n    textFieldOnChange(event, textFieldName){\n        let newState = {};\n\n        newState[textFieldName] = event.target.value;\n\n        this.setState(newState);\n        this.onChangeDebounced();\n    }\n\n    onChangeDebounced = () => {\n        this.props.onChange();\n    }\n\n    getValues(){\n        return {\"min\":this.state.current_min, \"max\":this.state.current_max};\n    }\n\n    getMinTitle(){\n        return this.props.minTitle == undefined?\"Min\":this.props.minTitle;\n    }\n\n    getMaxTitle(){\n        return this.props.maxTitle == undefined?\"Max\":this.props.maxTitle;\n    }\n\n    getToText(){\n        return this.props.toText == undefined?\"To\":this.props.toText;\n    }\n\n    sliderOnChange(event, values){\n        this.setState({current_min:values[0], current_max:values[1]});\n        this.onChangeDebounced();\n    }\n\n    render(){\n        let inputProps = {};\n\n        if (this.props.startAdornment){\n            inputProps['startAdornment'] = <InputAdornment position=\"start\">{this.props.startAdornment}</InputAdornment>\n        }\n\n        if (this.props.endAdornment){\n            inputProps['endAdornment'] = <InputAdornment position=\"end\">{this.props.endAdornment}</InputAdornment>\n        }\n\n        return (\n            <Grid container style={{padding:20}}>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"current_min\"]} label={this.getMinTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"current_min\")}\n                               InputProps={inputProps}\n                    />\n                </Grid>\n                <Grid item xs={4} align={\"center\"} style={{paddingTop:10}}>\n                    {this.getToText()}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"current_max\"]} label={this.getMaxTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"current_max\")}\n                               InputProps={inputProps}\n                    />\n                </Grid>\n                <Slider min={this.state.min} max={this.state.max} value={[this.state.current_min, this.state.current_max]} valueLabelDisplay=\"auto\" step={1} onChange={this.sliderOnChange}/>\n            </Grid>\n        )\n    }\n}\n\nexport default RangeFilter;","import React from 'react';\nimport ListFilter from \"./ListFilter\";\nimport RangeFilter from \"./RangeFilter\";\nimport {Collapse} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {filters:this.props.filters, filtersInitializationHappened:{}};\n\n        for(let filter of this.props.filters){\n            if (\"expand\" in filter) {\n                this.state[filter[\"title\"] + '_expand'] = filter[\"expand\"];\n            }else{\n                this.state[filter[\"title\"] + '_expand'] = true;\n            }\n        }\n\n        this.filterOnChange = this.filterOnChange.bind(this);\n        this.createFilter = this.createFilter.bind(this);\n        this.expandOrCollapse = this.expandOrCollapse.bind(this);\n    }\n\n    componentDidMount(){\n        let filtersInitializationHappened = {};\n\n        for(let filter of this.props.filters){\n            if(filter[\"init\"]){\n                filtersInitializationHappened[filter[\"title\"]] = true;\n            }\n        }\n\n        this.setState({filtersInitializationHappened:filtersInitializationHappened});\n    }\n\n    expandBtnOnClick(event, filterTitle) {\n        let stateKeyName = filterTitle + '_expand';\n        let newState = {};\n        newState[stateKeyName] = !this.state[stateKeyName];\n\n        this.setState(newState);\n    }\n\n    filterOnChange(event, filterTitle){\n\n        let newState = {...this.state};\n\n        for(let filter of newState.filters){\n            let isDependentList = filter[\"type\"] == \"list\" && \"dependent_filter\" in filter && \"dependent_list\" in filter;\n\n            if (isDependentList){\n                let dependentFilter = filter[\"dependent_filter\"];\n                let dependentList = filter[\"dependent_list\"];\n\n                if (this.refsDict[dependentFilter]) {\n                    let selectedOptions = this.refsDict[dependentFilter].getValues()[\"selectedOptions\"];\n                    let newOptions = new Set();\n\n                    for (let selectedOption of selectedOptions) {\n                        dependentList[selectedOption].forEach(newOptions.add, newOptions);\n                    }\n\n                    filter[\"options\"] = Array.from(newOptions);\n                }\n            }\n\n            if(this.state.filtersInitializationHappened[filter[\"title\"]]){\n                delete filter[\"init\"];\n            }\n        }\n\n        console.log(newState);\n        this.setState(newState, this.props.onChange);\n    }\n\n    getFilterValues(){\n        let values = {};\n\n        for(let title in this.refsDict){\n            let filterType = this.state.filters.filter(filter => filter[\"title\"]===title)[0][\"type\"];\n            values[title] = {\n                \"type\":filterType,\n                ...this.refsDict[title].getValues()\n            }\n        }\n\n        return values;\n    }\n\n    expandOrCollapse(event, filterTitle){\n        let stateName = filterTitle + '_expand';\n        let newState = {};\n\n        newState[stateName] = !this.state[stateName];\n        this.setState(newState);\n    }\n\n    createFilter(filter, filterIndex){\n        let lastFilterIndex = this.state.filters.length - 1;\n        let filterType = filter[\"type\"];\n        let filterComponent = undefined;\n\n        if (filterType == \"list\"){\n            filterComponent = <ListFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>;\n        }else if (filterType == \"range\"){\n            filterComponent = <RangeFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>\n        }\n\n        return (\n            <React.Fragment>\n                <Grid item xs={12} className={\"filter\"}>\n                    <Grid container className={\"expandable\"} onClick={(event) => this.expandOrCollapse(event, filter[\"title\"])}>\n                        <Grid item xs={10}>\n                            <span className={'filter_title'}>{filter[\"title\"]}</span>\n                        </Grid>\n                        <Grid item xs={2} align='right'>\n                            {this.state[filter[\"title\"] + \"_expand\"]?(<ExpandLess/>):(<ExpandMore />)}\n                        </Grid>\n                    </Grid>\n                    <Collapse in={this.state[filter[\"title\"] + \"_expand\"]}>\n                        {filterComponent}\n                    </Collapse>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n\n    render(){\n        this.refsDict = {};\n\n        return (\n            <Grid container className={\"filter_main_content\"}>\n                {\n                    this.state.filters.map(this.createFilter)\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport LenderInputs from \"./LenderInputs\";\nimport LenderInput from \"./LenderInput\";\nimport './Lender.css';\nimport {setLenderInputs} from \"./GlobalVariables\";\n\nclass Lender extends React.Component {\n    beginningState(){\n        return {\n            selectedTier:'NONE',\n            tierMenuItems:[],\n            tierSelectDisabled:true,\n\n            selectedLender:'NONE',\n            lenderSelectDisabled:false,\n\n            currencyFields:{\n                \"Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Down Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Allowance\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Payoff\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trace a.c.v\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            percentageFields:{\n                \"Tax\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            isTextFieldsEnabled:false\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        let lenderMenuItems = [];\n\n        lenderMenuItems.push(<MenuItem value={'NONE'}>Please select lender</MenuItem>);\n\n        for (let lenderName in props.lenderToPrograms){\n            lenderMenuItems.push(<MenuItem value={lenderName}>{lenderName}</MenuItem>);\n        }\n\n        this.state = {\n            lenderMenuItems:lenderMenuItems,\n            ...this.beginningState(),\n            lenderInputs:[]\n        }\n\n        this.selectLender = this.selectLender.bind(this);\n        this.selectTier = this.selectTier.bind(this);\n        this.addLender = this.addLender.bind(this);\n        this.reset = this.reset.bind(this);\n        this.deleteLenderInput = this.deleteLenderInput.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.init){\n            this.setState({lenderInputs:this.props.init});\n        }\n    }\n\n    textboxOnChange(event, fieldLabel){\n        let newValue = event.target.value;\n        let isError = isNaN(newValue);\n        console.log(isError);\n\n        if (fieldLabel in this.state.currencyFields){\n            let newCurrencyFields = {...this.state.currencyFields};\n            newCurrencyFields[fieldLabel] =  {\n                value:newValue,\n                error:isError\n            }\n\n            this.setState({currencyFields:newCurrencyFields});\n        }else if (fieldLabel in this.state.percentageFields){\n            let newPercentageFields = {...this.state.percentageFields};\n            newPercentageFields[fieldLabel] = {\n                value:newValue,\n                error:isError\n            }\n            this.setState({percentageFields:newPercentageFields})\n        }\n    }\n\n    selectLender(event){\n        let selectLenderName = event.target.value;\n\n        let tierSelectDisabled = true;\n\n        if (selectLenderName != 'NONE'){\n            tierSelectDisabled = false;\n        }\n\n        let tierMenuItems = [];\n        tierMenuItems.push(<MenuItem value={'NONE'}>Please select tier</MenuItem>);\n\n        for(let tierName of this.props.lenderToPrograms[selectLenderName]) {\n            tierMenuItems.push(<MenuItem value={tierName}>{tierName}</MenuItem>);\n        }\n\n        this.setState({\n            selectedLender:selectLenderName,\n            selectedTier:'NONE',\n            tierSelectDisabled: tierSelectDisabled,\n            tierMenuItems:tierMenuItems\n        });\n    }\n\n    selectTier(event){\n        let selectIndex = event.target.value;\n\n        this.setState({\n            selectedTier : selectIndex,\n            isTextFieldsEnabled:true\n        })\n    }\n\n    hasAnyErrorsInLenderInput(){\n        let hasAnyErrors = false;\n\n        Object.keys(this.state.currencyFields).forEach((key) => {\n            if (this.state.currencyFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        Object.keys(this.state.percentageFields).forEach((key) => {\n            if (this.state.percentageFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        return hasAnyErrors;\n    }\n\n    addLender(event){\n        let lenderInput = {};\n        let hasAnyErrors = this.hasAnyErrorsInLenderInput();\n\n        if (this.state.selectedLender != 'NONE' && this.state.selectedTier != 'NONE' && !hasAnyErrors) {\n            lenderInput[\"lender\"] = this.state.selectedLender;\n            lenderInput[\"tier\"] = this.state.selectedTier;\n            lenderInput[\"payment\"] = this.state.currencyFields[\"Payment\"].value;\n            lenderInput[\"down payment\"] = this.state.currencyFields[\"Down Payment\"].value;\n            lenderInput[\"trade allowance\"] = this.state.currencyFields[\"Trade Allowance\"].value;\n            lenderInput[\"trade payoff\"] = this.state.currencyFields[\"Trade Payoff\"].value;\n            lenderInput[\"trade a.c.v\"] = this.state.currencyFields[\"Trace a.c.v\"].value;\n            lenderInput[\"tax\"] = this.state.percentageFields[\"Tax\"].value;\n\n            let newLenderInputs = this.state.lenderInputs;\n            newLenderInputs.push(lenderInput);\n\n            this.setState({lenderInputs: newLenderInputs}, this.props.onChange);\n        }\n    }\n\n    reset(event){\n        this.setState({...this.beginningState()});\n    }\n\n    deleteLenderInput(event, lenderInputIndex){\n        let newLenderInputs = this.state.lenderInputs;\n\n        newLenderInputs.splice(lenderInputIndex, 1);\n\n        this.setState({lenderInputs:newLenderInputs}, this.props.onChange);\n    }\n\n    getLenderInputs(){\n        return this.state.lenderInputs;\n    }\n\n    addLender(lenderInput){\n        let newLenderInputs = [...this.state.lenderInputs];\n        newLenderInputs.push(lenderInput);\n        setLenderInputs(newLenderInputs);\n\n        this.setState({lenderInputs:newLenderInputs});\n    }\n\n    render(){\n        return (\n          <Grid container className={\"lender_main_content padding10\"} spacing={2}>\n              <Grid item xs={12}>\n                  <LenderInput lenderToPrograms={this.props.lenderToPrograms} onChange={this.addLender}/>\n              </Grid>\n              {\n                  this.state.lenderInputs.map((lenderInput, lenderInputIndex) =>\n                      <Grid item xs={12}>\n                          <LenderInputs inputs={lenderInput} handleDeleteBtnClick={(event) => this.deleteLenderInput(lenderInputIndex)}/>\n                      </Grid>)\n              }\n          </Grid>\n        );\n    }\n}\n\nexport default Lender;","function convertStr(str){\n    let words = str.split(/(\\s+)/);\n\n    return words.map(word => {\n        let result = '';\n\n        if (word.length > 0){\n            result += word.charAt(0).toUpperCase();\n        }\n\n        if (word.length > 1){\n            result += word.substring(1).toLowerCase();\n        }\n\n        return result;\n    }).join(' ');\n}\n\nconst Utils = {\n    convertStr:convertStr\n}\n\nexport default Utils;","import React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Filter from './Filter';\nimport './LeftPanel.css';\nimport Lender from './Lender';\nimport {getLenderInputs} from \"./GlobalVariables\";\nimport './LeftPanel.css';\nimport Utils from \"./Utils\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport LenderInput from \"./LenderInput\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass LeftPanel extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.filterRef = React.createRef();\n        this.lenderRef = React.createRef();\n        const {filters, lenderToPrograms, carDetails} = this.parseProps(this.props);\n        console.log(this.props);\n        console.log(filters);\n\n        this.state = {\n            selectedTabIndex:0,\n            filters:filters,\n            lenderToPrograms:lenderToPrograms,\n            carDetails:carDetails,\n            lenderDialogOpen:false,\n            filterDialogOpen:false\n        }\n\n        this.openFilter = this.openFilter.bind(this);\n        this.openLender = this.openLender.bind(this);\n        this.closeFilter = this.closeFilter.bind(this);\n        this.closeLender = this.closeLender.bind(this);\n    }\n\n    handleChange(event, newSelectedTabIndex){\n        this.setState({selectedTabIndex:newSelectedTabIndex});\n    }\n\n    parseProps(props) {\n        let makes = new Set();\n        let makeToModelsDict = {};\n        let makeToCountDict = {};\n        let modelToCountDict = {};\n        let models = new Set();\n        let yearSet = new Set();\n\n        for (let i = 0; i < props.carDetails.length; i++) {\n            let carDetail = props.carDetails[i];\n            let make = carDetail[\"make\"];\n            let model = carDetail[\"model\"];\n            let year = carDetail[\"year\"];\n\n            makes.add(make);\n            models.add(model);\n            if (!isNaN(year)) {\n                yearSet.add(year);\n            }\n\n            if (!(make in makeToModelsDict)) {\n                makeToModelsDict[make] = new Set();\n            }\n\n            makeToModelsDict[make].add(model);\n\n            if(!(make in makeToCountDict)){\n                makeToCountDict[make] = 0;\n            }\n\n            makeToCountDict[make] = makeToCountDict[make] + 1;\n\n            if(!(model in modelToCountDict)){\n                modelToCountDict[model] = 0;\n            }\n\n            modelToCountDict[model] = modelToCountDict[model] + 1;\n        }\n\n        let yearRangeList = [];\n\n        // Create year range list\n        for (let year of yearSet) {\n            yearRangeList.push([year]);\n        }\n\n        let filters = [\n            {\n                \"title\": \"Make\",\n                \"type\": \"list\",\n                \"options\": Array.from(makes),\n                \"expand\": this.props.filtersExpanded,\n                \"displayCount\":true,\n                \"counts\": makeToCountDict,\n                \"titleTransformFunc\":Utils.convertStr\n            },\n            {\n                \"title\": \"Model\",\n                \"type\": \"list\",\n                \"dependent_filter\": \"Make\",\n                \"dependent_list\": makeToModelsDict,\n                \"options\": Array.from(models),\n                \"expand\": this.props.filtersExpanded,\n                \"displayCount\":true,\n                \"counts\":modelToCountDict,\n                \"titleTransformFunc\":Utils.convertStr\n            },\n            {\n                \"title\": \"Year\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"discrete\",\n                \"values\":yearRangeList,\n                \"expand\": this.props.filtersExpanded\n            },\n            {\n                \"title\": \"Mileage\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"continuous\",\n                \"values\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"mileage\"])), 10),\n                \"expand\": this.props.filtersExpanded,\n                \"endAdornment\":'mi'\n            },\n            {\n                \"title\": \"Total cost\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"continuous\",\n                \"values\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"total_cost\"])), 10),\n                \"expand\": this.props.filtersExpanded,\n                \"startAdornment\":'$'\n            }\n        ];\n\n        if(this.props.init){\n            for(let filterTitle in this.props.init){\n                for(let filter of filters){\n                    if (filter[\"title\"] == filterTitle){\n                        if (filter[\"type\"] == \"list\"){\n                            filter[\"init\"] = this.props.init[filterTitle][\"selectedOptions\"];\n                        }else{\n                            filter[\"init\"] = this.props.init[filterTitle];\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        let lenderToPrograms = {};\n        let lenderIdToLenderName = {};\n        props.lenders.forEach(lender => {\n            lenderIdToLenderName[lender[\"id\"]] = lender[\"name\"];\n        });\n\n        props.lenderPrograms.forEach(lenderProgram => {\n            let lenderName = lenderIdToLenderName[lenderProgram[\"lender_id\"]];\n\n            if (!(lenderName in lenderToPrograms)) {\n                lenderToPrograms[lenderName] = [];\n            }\n\n            lenderToPrograms[lenderName].push(lenderProgram[\"name\"]);\n        });\n\n        return {filters: filters, lenderToPrograms: lenderToPrograms, carDetails: props.carDetails};\n    }\n\n    createRangeListContinuousValue(values, partsCount){\n        let min = Math.min(...values);\n        let max = Math.max(...values);\n        let x = (max - min)/partsCount;\n\n        return [min, max];\n    }\n\n    getFilterValues(){\n        return this.filterRef.current.getFilterValues();\n    }\n\n    getLenderInputs(){\n        return this.lenderRef.current.getLenderInputs();\n    }\n\n    openFilter(){\n        this.setState({filterDialogOpen:true});\n    }\n\n    closeFilter(){\n        this.setState({filterDialogOpen:false});\n    }\n\n    openLender(){\n        this.setState({lendersDialogOpen:true});\n    }\n\n    closeLender(){\n        this.setState({lendersDialogOpen:false});\n    }\n\n    render(){\n        return (\n        <div className={\"left_panel\"}>\n            {\n                this.props.screenSize[\"smUp\"]?(\n                    <>\n                        <Tabs value={this.state.selectedTabIndex} onChange={this.handleChange} TabIndicatorProps={{style:{background:'#4153AF'}}}>\n                            <Tab label={\"Filter\"} className={\"filter_tab \" + (this.state.selectedTabIndex==0?\"tab_selected\":\"tab_deselected\")}/>\n                            <Tab label={\"Lender\"} className={\"lender_tab \" + (this.state.selectedTabIndex==1?\"tab_selected\":\"tab_deselected\")} />\n                        </Tabs>\n                        <div className={this.state.selectedTabIndex==0?'':'hide'}>\n                        <Filter ref={this.filterRef} filters={this.state.filters}\n                        onChange={this.props.filterOnChange}\n                        />\n                        </div>\n                        <div className={this.state.selectedTabIndex==1?'':'hide'}>\n                        <Lender init={getLenderInputs()} ref={this.lenderRef} lenderToPrograms={this.state.lenderToPrograms} onChange={this.props.lenderOnChange}/>\n                        </div>\n                    </>\n                ):(\n                    <>\n                        <Grid container>\n                            <Grid xs={6}>\n                                <Button className={\"filter_btn\"} variant={\"contained\"} style={{width:\"100%\"}} onClick={this.openFilter}>Filter</Button>\n                            </Grid>\n                            <Grid xs={6}>\n                                <Button className={\"lender_btn\"} variant={\"contained\"} style={{width:\"100%\"}} onClick={this.openLender}>Lender</Button>\n                            </Grid>\n                        </Grid>\n                    </>\n                )\n            }\n            <Dialog  fullScreen open={this.state.filterDialogOpen}>\n                <AppBar  style={{position: \"relative\"}}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.closeFilter} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent>\n                    <Filter ref={this.filterRef} filters={this.state.filters}\n                            onChange={this.props.filterOnChange}\n                    />\n                </DialogContent>\n            </Dialog>\n            <Dialog  fullScreen open={this.state.lendersDialogOpen}>\n                <AppBar style={{position: \"relative\"}}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.closeLender} aria-label=\"close\">\n                            <CloseIcon/>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Lender init={getLenderInputs()} ref={this.lenderRef} lenderToPrograms={this.state.lenderToPrograms}\n                        onChange={this.props.lenderOnChange}/>\n            </Dialog>\n        </div>\n        );\n    }\n}\n\nexport default LeftPanel;","var domain = 'https://lender-filter-backend-test.herokuapp.com';\n\nfunction fetchCars(){\n    return fetch(`${domain}/cars/`);\n}\n\nfunction fetchLenders(){\n    return fetch(`${domain}/lenders/`);\n}\n\nfunction fetchLenderPrograms(){\n    return fetch(`${domain}/lenders/programs/`);\n}\n\nfunction fetchLenderTerms(){\n    return fetch(`${domain}/lenders/terms/`)\n}\n\n\nexport {fetchCars, fetchLenders, fetchLenderPrograms, fetchLenderTerms};","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ImageGallery from \"react-image-gallery\";\nimport './Car.css';\n\nclass Car extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    getCarTitle(){\n        let carYear = this.props.details['year'];\n        let carMake = this.props.details['make'];\n        let carModel = this.props.details['model'];\n        let carTrim = this.props.details['trim'];\n\n        return `${carYear} ${carMake} ${carModel} ${carTrim}`;\n    }\n\n    convertImages(images){\n        return images.map(image => {return {original:image}});\n    }\n\n    render(){\n        let carImgSrc = '';\n        let detailsImages = this.props.details[\"images\"];\n\n        if (detailsImages && detailsImages.length > 0){\n            carImgSrc = detailsImages[0][\"src\"];\n        }\n\n        return (\n            <Card className={\"car \" + this.props.size} onClick={(event) => {\n                if(this.props.onClick)\n                    this.props.onClick(event, this.props.details)\n            }}>\n                <CardMedia>\n                    <img src={carImgSrc} style={{width:'100%'}}/>\n                </CardMedia>\n                <CardContent>\n                    <Grid container>\n                        {this.props.size == 'sm'\n                            ?(\n                                <Grid item xs={12} style={{textAlign:'center'}}>\n                                    <span className={\"car_total_cost\"}>${this.props.details['total_cost']}</span>\n                                </Grid>\n                            ):(\n                                <>\n                                    <Grid item xs={12}>\n                                        <span className={\"car_title\"}>{this.getCarTitle()}</span>\n                                    </Grid>\n                                    <Grid container className={\"price_mileage_row\"}>\n                                        <Grid item xs={6}>\n                                            <span className={\"car_total_cost\"}>${this.props.details['total_cost']}</span>\n                                        </Grid>\n                                        <Grid item xs={6} align={\"right\"}>\n                                            <span className={\"car_mileage\"}>{this.props.details['mileage']} mi.</span>\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )\n                        }\n                    </Grid>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default Car;","import {css} from \"@emotion/core\";\nimport * as React from \"react\";\nimport {ClipLoader} from \"react-spinners\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass Loader extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible:true\n        }\n\n        this.hideLoader = this.hideLoader.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({isVisible: true}, this.hideLoader);\n    }\n\n    hideLoader(){\n        if(this.props.timeout)\n            setTimeout(() => {\n                this.setState({isVisible:false})\n            }, this.props.timeout);\n    }\n\n    componentDidMount() {\n        this.hideLoader();\n    }\n\n    render(){\n        return this.state.isVisible?<div style={{display:'flex', justifyContent:'center'}}><ClipLoader css={clipLoaderCss}/></div>:this.props.children;\n    }\n}\n\nexport default Loader;","import * as React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {styled, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {css} from \"@emotion/core\";\nimport {ClipLoader} from \"react-spinners\";\nimport './CarShow.css';\nimport {fetchCars} from \"./Api\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {calculateProfitFirstInterest} from \"./CarCalculation\";\nimport Car from './Car.js';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Loader from './Loader';\nimport { withRouter } from \"react-router\";\n\nclass CarShow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sortOptionIndex:0\n        }\n\n        this.selectSortOption = this.selectSortOption.bind(this);\n        this.carOnClick = this.carOnClick.bind(this);\n    }\n\n    filterTitleToFieldName(filterTitle){\n        let dict = {\n            \"Make\":\"make\",\n            \"Model\":\"model\",\n            \"Year\":\"year\",\n            \"Total cost\":\"total_cost\",\n            \"Mileage\":\"mileage\"\n        }\n\n        return dict[filterTitle];\n    }\n\n    reverseNumberSign(number){\n        return -number;\n    }\n\n    sortCarDetails(carDetails, sortOptionIndex){\n        switch(sortOptionIndex){\n            case 1:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost));\n                break;\n            case 2:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost)));\n                break;\n            case 3:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage));\n                break;\n            case 4:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage)));\n                break;\n            case 5:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.year) - parseInt(carDetail2.year)));\n                break;\n            case 6:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.year) - parseInt(carDetail2.year));\n                break;\n        }\n\n        return carDetails;\n    }\n\n    carDetails(){\n        let filterValuesLength = Object.keys(this.props.filterValues).length;\n        let hasFilterValues = filterValuesLength > 0;\n        let carDetails = [...this.props.carDetails];\n\n        if (hasFilterValues) {\n\n\n            for(let filterTitle in this.props.filterValues){\n                let filterValue = this.props.filterValues[filterTitle];\n                let filterType = filterValue[\"type\"];\n                let filterFieldName = this.filterTitleToFieldName(filterTitle);\n\n                if (filterType == \"list\"){\n                    let selectedOptions = filterValue[\"selectedOptions\"];\n                    let selectedOptionsSet = new Set(selectedOptions);\n\n                    carDetails = carDetails.filter(carDetail => selectedOptionsSet.has(carDetail[filterFieldName]));\n                }else if(filterType == \"range\"){\n                    let minVal = filterValue[\"min\"];\n                    let maxVal = filterValue[\"max\"];\n\n                    if (minVal !== \"\" || maxVal != \"\") {\n                        if (minVal == \"\") {\n                            minVal = 0;\n                        }\n\n                        if (maxVal == \"\") {\n                            maxVal = Number.MAX_SAFE_INTEGER;\n                        }\n\n                        carDetails = carDetails.filter(carDetail => carDetail[filterFieldName] >= minVal && carDetail[filterFieldName] <= maxVal);\n                    }\n                }\n            }\n\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }else{\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }\n    }\n\n    selectSortOption(event){\n        let sortOptionIndex = event.target.value;\n\n        this.setState({sortOptionIndex:sortOptionIndex});\n    }\n\n    carOnClick(event, carDetails, carIndex){\n        const {history} = this.props;\n\n        history.push('/car', {carDetails:carDetails, results:this.carDetails(), carIndex: carIndex});\n    }\n\n    render() {\n        let carDetailsAfterFilterAndSort = this.carDetails();\n\n        return (\n            <>\n                {/*<Loader timeout={500}>*/}\n                    <Grid container spacing={2} className={\"carshow\"}>\n                    <Grid item xs={6} style={{paddingTop:20}}>\n                        <span className={\"matches\"}>{carDetailsAfterFilterAndSort.length + \" matches\"}</span>\n                    </Grid>\n                    <Grid item xs={6} align={\"right\"}>\n                        <Select className={\"sort_by_select_option\"} value={this.state.sortOptionIndex} onChange={this.selectSortOption}>\n                            <MenuItem value={0}>Sort By</MenuItem>\n                            <MenuItem value={1}>Lowest Price</MenuItem>\n                            <MenuItem value={2}>Highest Price</MenuItem>\n                            <MenuItem value={3}>Lowest Mileage</MenuItem>\n                            <MenuItem value={4}>Highest Mileage</MenuItem>\n                            <MenuItem value={5}>Newest Year</MenuItem>\n                            <MenuItem value={6}>Oldest Year</MenuItem>\n                        </Select>\n                    </Grid>\n                    {carDetailsAfterFilterAndSort.map((carDetail, index) => (\n                       <Grid item xs={12} md={4} lg={3}>\n                           <Car details={carDetail} onClick={(event, carDetails) => this.carOnClick(event, carDetails, index)}/>\n                       </Grid>\n                    ))}\n                    </Grid>\n                {/*</Loader>*/}\n            </>\n        );\n    }\n}\n\nexport default withRouter(CarShow);","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Menubar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        return (\n            <>\n                        <AppBar position=\"static\">\n                            {this.props.isBigScreen ? (\n                                <React.Fragment>\n                                    <Tabs>\n                                        <Tab label=\"Home\"/>\n                                        <Tab label=\"Rate Sheet\" disabled/>\n                                        <Tab label=\"Quick Quote\" disabled/>\n                                        <Tab label=\"Lender Assist\" disabled/>\n                                    </Tabs>\n                                </React.Fragment>) : (\n                                <Toolbar>\n                                    <IconButton\n                                        aria-label=\"menu\"\n                                        aria-controls=\"menu-appbar\"\n                                        aria-haspopup=\"true\"\n                                        style={{\"color\":\"white\"}}\n                                        onClick={this.menuBtnOnClick}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"menu-appbar\"\n                                        anchorEl={this.state.anchorEl}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        open={Boolean(this.state.anchorEl)}\n                                        onClose={this.closeMenu}\n                                    >\n                                        <MenuItem>HOME</MenuItem>\n                                        <MenuItem>RATE SHEET</MenuItem>\n                                        <MenuItem>QUICK QUOTE</MenuItem>\n                                        <MenuItem>LENDER ASSIST</MenuItem>\n                                    </Menu>\n                                </Toolbar>\n                            )\n                            }\n                        </AppBar>\n            </>\n        )\n    }\n}\n\nexport default Menubar;","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LeftPanel from \"./LeftPanel\";\nimport {ClipLoader} from \"react-spinners\";\nimport CarShow from \"./CarShow\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport {css} from \"@emotion/core\";\nimport Menubar from \"./Menubar\";\nimport Loader from './Loader';\nimport {getFilterValues, setFilterValues, setLenderInputs} from \"./GlobalVariables\";\n\nclass HomePage extends React.Component{\n    constructor() {\n        super();\n\n        this.leftPanelRef = React.createRef();\n        this.state = {\n            filterValues: {}\n        }\n\n        this.filterOnChange = this.filterOnChange.bind(this);\n        this.lenderOnChange = this.lenderOnChange.bind(this);\n    }\n\n    filterOnChange(){\n        let filterValues = this.leftPanelRef.current.getFilterValues();\n\n        this.setState({filterValues:filterValues}, () => {\n            setFilterValues(filterValues);\n        });\n    }\n\n    lenderOnChange(){\n        let lenderInputs = this.leftPanelRef.current.getLenderInputs();\n        console.log(lenderInputs);\n\n        setLenderInputs(lenderInputs);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ScrollToTop smooth />\n                <Grid container>\n                    <Grid item xl={2} xs={0} />\n                    <Grid item xl={8} xs={12}>\n                        <Menubar isBigScreen={this.props.screenSize[\"mdUp\"]}/>\n                    </Grid>\n                    <Grid item xl={2} xs={0}/>\n                    <Grid item xl={2} xs={0}/>\n                    {this.props.isLoading?(\n                        <Grid item xs={12}>\n                            <Loader />\n                        </Grid>\n                    ):(\n                        <>\n                        <Grid item xl={2} sm={3} xs={12}>\n                            <LeftPanel init={getFilterValues()} filtersExpanded={this.props.screenSize[\"mdUp\"]} screenSize={this.props.screenSize}ref={this.leftPanelRef} carDetails={this.props.carJson} lenders={this.props.lendersJson} lenderPrograms={this.props.lenderProgramsJson} filterOnChange={this.filterOnChange} lenderOnChange={this.lenderOnChange}/>\n                        </Grid>\n                        <Grid item xl={6} sm={9} xs={12}>\n                            <CarShow carDetails={this.props.carJson} filterValues={this.state.filterValues}/>\n                        </Grid>\n                        </>\n                    )}\n                    <Grid item xl={2} xs={0}/>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default HomePage;","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport './CarDescription.css';\nimport Utils from \"./Utils\";\n\nexport default class CarDescription extends React.Component {\n    getCarTitle() {\n        let year = this.getRowValue('YEAR');\n        let make = this.getRowValue('MAKE');\n        let model = this.getRowValue('MODEL');\n        let trim = this.getRowValue('TRIM');\n\n        return `${year} ${make} ${model} ${trim}`;\n    }\n\n    getRowValue(rowName){\n        let row = this.getRowWithName(rowName);\n\n        if (row != null){\n            return row.value;\n        }\n\n        return '';\n    }\n\n    getRowWithName(rowName){\n        let matches = this.props.details.filter(row => (row.name == rowName));\n\n        if (matches.length > 0){\n            return matches[0];\n        }\n\n        return null;\n    }\n    render() {\n        return (\n            <Grid container>\n                <Grid item xs={12} className={\"car_description_title\"}>\n                    <span>{this.getCarTitle()} - {this.getRowValue('TOTAL COST')}</span>\n                </Grid>\n                <Table className={\"car_description_table\"}>\n                    <TableBody>\n                {this.props.details.map(row => (\n                    <TableRow>\n                        <TableCell>\n                            <span className={\"car_description_row_header\"}>{Utils.convertStr(row.name)}</span>\n                        </TableCell>\n                        <TableCell>\n                            <span className={\"car_description_row_value\"}>{row.value}</span>\n                        </TableCell>\n                    </TableRow>\n                ))}\n                    </TableBody>\n                </Table>\n            </Grid>\n        )\n    }\n}","import * as React from \"react\";\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './CarImagesGallery.css';\n\nexport default class CarImagesGallery extends React.Component{\n    render(){\n        return (\n            <ImageGallery items={this.props.images} showPlayButton={false} showFullscreenButton={false}/>\n        );\n    }\n}","import * as React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CarDescription from \"./CarDescription\";\nimport CarCalculation from \"./CarCalculation\";\nimport CarImagesGallery from \"./CarImagesGallery\";\nimport CarShowElementButtons from \"./CarShowElementButtons\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElement extends React.Component{\n    excludeCarDetailFields(fieldName){\n        let excludedFields = ['id', 'images', 'img_url', 'x_clean', 'clean', 'average', 'rough', 'series'];\n\n        return excludedFields.includes(fieldName);\n    }\n\n    convertFieldNameToLabel(fieldName){\n        let convertDict = {\n            'total_cost': 'TOTAL COST'\n        }\n\n        if (fieldName in convertDict){\n            return convertDict[fieldName];\n        }\n\n        return fieldName\n    }\n\n    isCurrencyField(fieldName){\n        return ['total_cost'].includes(fieldName);\n    }\n    convertToCarDetails(carJson){\n        let result = [];\n        let currencySymbol = '$';\n\n        for(let key in carJson){\n            if (!this.excludeCarDetailFields(key)){\n                let name = this.convertFieldNameToLabel(key).toUpperCase();\n                let value = carJson[key];\n\n                if (this.isCurrencyField(key)){\n                    value = currencySymbol + value;\n                }\n\n                result.push({\n                    name: name,\n                    value: value\n                });\n            }\n        }\n\n        return result;\n    }\n\n    convertToImages(carDetail){\n        console.log(carDetail);\n\n        let images = [];\n        for(let image of carDetail[\"images\"]){\n            console.log(image);\n            images.push({original:image[\"src\"], thumbnail:image[\"src\"]});\n        }\n\n        console.log(images);\n        return images;\n    }\n\n    render() {\n        return (\n            <Grid container spacing={2}>\n                <Grid item xs={12} lg={7}>\n                    <CarImagesGallery images={this.convertToImages(this.props.details)}/>\n                </Grid>\n                <Grid item xs={12} lg={5}>\n                    <CarDescription details={this.convertToCarDetails(this.props.details)}/>\n                </Grid>\n                <Grid item xs={12}>\n                    <CarCalculation filtersInputs={this.props.filtersInputs} lenderData={this.props.lenderData}\n                                    details={this.props.details}/>\n                </Grid>\n            </Grid>\n        )\n    }\n}","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElementButtons extends React.Component{\n    render(){\n        return <React.Fragment>\n            <Grid container spacing={1}>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Save</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Pictures</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Breakdown</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Send</Button>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    }\n}","import React from \"react\";\nimport Car from './Car';\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport './CarList.css';\n\nexport default class CarList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let noCars = this.props.detailsList.length  == 0;\n\n        let selectedCarIndex = 0;\n\n        if(this.props.initSelectedCarIndex){\n            selectedCarIndex = this.props.initSelectedCarIndex;\n        }\n\n        this.state = {\n            selectedCarIndex:selectedCarIndex,\n            previousBtnDisabled:true,\n            nextBtnDisabled:noCars\n        }\n\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.carOnClick = this.carOnClick.bind(this);\n    }\n\n    updateBtnDisabled(selectedCarIndex){\n        return {\n            previousBtnDisabled:selectedCarIndex == 0,\n            nextBtnDisabled:(selectedCarIndex == this.props.detailsList.length - 1)\n        };\n    }\n\n    callOnChange = (carIndex) => {\n        if (this.props.onChange)\n            this.props.onChange(this.props.detailsList[carIndex]);\n    }\n\n    previous(){\n        if(this.state.selectedCarIndex > 0) {\n            let newCarIndex = (this.state.selectedCarIndex - 1);\n\n            this.setState({selectedCarIndex: newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    next(){\n        if(this.state.selectedCarIndex < this.props.detailsList.length - 1){\n            let newCarIndex = (this.state.selectedCarIndex + 1);\n\n            this.setState({selectedCarIndex:newCarIndex, ...this.updateBtnDisabled(newCarIndex)}, this.callOnChange(newCarIndex));\n        }\n    }\n\n    carOnClick(carIndex){\n        this.setState({selectedCarIndex:carIndex}, this.callOnChange(carIndex));\n    }\n\n    render(){\n        let startCarIndex = -1;\n        let endCarIndex = -1;\n\n        if (this.state.selectedCarIndex - 4 >= 0 && this.state.selectedCarIndex + 4 < this.props.detailsList.length){\n            startCarIndex = this.state.selectedCarIndex - 4;\n            endCarIndex = this.state.selectedCarIndex + 4;\n        }else if(this.state.selectedCarIndex - 4 < 0){\n            startCarIndex = 0;\n            endCarIndex = 8;\n        }else if(this.state.selectedCarIndex + 4 >= this.props.detailsList.length){\n            endCarIndex = this.props.detailsList.length;\n            startCarIndex = this.props.detailsList.length - 9;\n        }\n\n        return (\n            <Grid container>\n                {\n                    this.props.detailsList.slice(startCarIndex, endCarIndex + 1).map((details, index) =>\n                        <Grid item xs={1} style={{padding:10}}>\n                            <div className={(startCarIndex + index == this.state.selectedCarIndex)?\"selected_car\":\"\"}>\n                                <Car size={\"sm\"} details={details} onClick={(event, carDetails) => this.carOnClick(startCarIndex + index)}/>\n                            </div>\n                        </Grid>\n                    )\n                }\n                <Grid item xs={1} />\n                <Grid item xs={2}>\n                    <div style={{display:'flex', width:'100%', height:'100%', alignItems: 'center', justifyContent:\"center\"}}>\n                        <IconButton disabled={this.state.previousBtnDisabled} variant=\"contained\" onClick={this.previous} size={\"medium\"} className={\"navigation_btn prev_btn \" + (this.state.previousBtnDisabled?\"disabled\":\"enabled\")}><ArrowLeft /> Prev</IconButton>\n                        <IconButton disabled={this.state.nextBtnDisabled} variant=\"contained\" onClick={this.next} size={\"medium\"} className={\"navigation_btn next_btn \" + (this.state.nextBtnDisabled?\"disabled\":\"enabled\")}>Next <ArrowRight /></IconButton>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Menubar from \"./Menubar\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport CarShowElement from \"./CarShowElement\";\nimport CarList from \"./CarList\";\nimport {getLenderData, getLenderInputs} from \"./GlobalVariables\";\nimport './CarPage.css';\n\nclass CarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const {location} = this.props;\n\n        let carDetails = null;\n\n        if (location.state && location.state.carDetails){\n            carDetails = location.state.carDetails;\n        }\n\n        this.state = {\n            carDetails: carDetails\n        }\n\n        this.goBack = this.goBack.bind(this);\n        this.selectCarInCarList = this.selectCarInCarList.bind(this);\n    }\n\n    goBack(){\n        const {history} = this.props;\n\n        history.push('/');\n    }\n\n    selectCarInCarList(carDetails){\n        this.setState({carDetails:carDetails});\n    }\n\n    render() {\n        const {history, location} = this.props;\n        let results = [];\n        let carIndex = 0;\n        let  carDetailsAvailable = false;\n\n        if (location && location.state){\n            results = location.state.results;\n            carDetailsAvailable = location.state && location.state.carDetails;\n            carIndex = location.state.carIndex;\n        }\n\n        let lenderInputs = getLenderInputs();\n\n        if (lenderInputs == null){\n            lenderInputs = [];\n        }\n\n        return (\n            <>\n                <ScrollToTop smooth />\n                <Grid container>\n                    <Grid item xl={2} xs={0} />\n                    <Grid item xl={8} xs={12}>\n                        <Menubar isBigScreen={this.props.screenSize[\"mdUp\"]}/>\n                    </Grid>\n                    <Grid item xl={2} xs={0}/>\n                    <Grid item xl={2} xs={0} />\n                    <Grid item xl={8} xs={12}>\n                        <Grid container item>\n                            <Grid item xs={12}>\n                                <a href={\"#\"} className={\"search_results_back_link\"}onClick={this.goBack}><BsArrowLeft /> All Results</a>\n                            </Grid>\n                            {\n                                this.props.screenSize[\"mdUp\"]?\n                                    <Grid item xs={12} className={\"car_list\"}>\n                                        {results.length > 0?(<CarList initSelectedCarIndex={carIndex} detailsList={results} onChange={this.selectCarInCarList}/>):null}\n                                    </Grid>:null\n                            }\n                            <Grid item xs={12} className={\"car_detail\"}>\n                                {carDetailsAvailable?<CarShowElement filtersInputs={lenderInputs} lenderData={getLenderData()} details={this.state.carDetails}/>:'Not found'}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xl={2} xs={0}/>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default withRouter(CarPage);","import React from 'react';\nimport './App.css';\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport \"react-scroll-to-top/lib/index.css\";\nimport HomePage from \"./HomePage\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CarPage from \"./CarPage\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport {setLenderData} from \"./GlobalVariables\";\n\nconst App = (props) => {\n    const theme = useTheme();\n    const xsUp = useMediaQuery(theme.breakpoints.up(\"xs\"));\n    const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"));\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const lgUp = useMediaQuery(theme.breakpoints.up(\"lg\"));\n    const xlUp = useMediaQuery(theme.breakpoints.up(\"xl\"));\n\n    return <AppClass screenSize={{\n        xsUp:xsUp,\n        smUp:smUp,\n        mdUp:mdUp,\n        lgUp:lgUp,\n        xlUp:xlUp\n    }}/>\n}\n\n\nclass AppClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            carJson:[],\n            lendersJson:[],\n            lenderTermsJson:[],\n            lenderProgramsJson:[],\n            isLoading: true\n        }\n\n        Promise.all([fetchCars(), fetchLenders(), fetchLenderTerms(), fetchLenderPrograms()]).then(responses => Promise.all(responses.map(response => response.json()))).then(jsons => {\n            let carJson = jsons[0];\n            carJson = this.convertKmToMileage(carJson);\n\n            let lendersJson = jsons[1];\n            let lenderTermsJson = jsons[2];\n            let lenderProgramsJson = jsons[3];\n\n            setLenderData([lendersJson, lenderProgramsJson, lenderTermsJson]);\n\n            this.setState({carJson:carJson, lendersJson:lendersJson, lenderTermsJson:lenderTermsJson, lenderProgramsJson:lenderProgramsJson, isLoading:false});\n        });\n    }\n\n    convertKmToMileage(carJson){\n        return carJson.map(car => {\n            let mileageLowerCase = car[\"mileage\"].toLowerCase();\n\n            if(mileageLowerCase.includes('km')){\n                car[\"mileage\"] = Math.floor(0.621371 * parseFloat(mileageLowerCase.replace(\"km\", \"\")));\n            }\n\n            return car;\n        });\n    }\n\n    render(){\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path=\"/car\">\n                        <CarPage screenSize={this.props.screenSize} />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage screenSize={this.props.screenSize} {...this.state}/>\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const globalDict = {\n    filterValues:null,\n    lenderInputs:null,\n    lenderData:null\n}\n\nexport function setFilterValues(newFilterValues){\n    console.log('setFilterValues');\n    console.log(newFilterValues);\n    globalDict.filterValues = {...newFilterValues};\n}\n\nexport function getFilterValues(){\n    if (globalDict.filterValues)\n        return {...globalDict.filterValues};\n\n    return null;\n}\n\nexport function setLenderInputs(newLenderInputs){\n    globalDict.lenderInputs = [...newLenderInputs];\n}\n\nexport function getLenderInputs(){\n    if (globalDict.lenderInputs)\n        return [...globalDict.lenderInputs];\n\n    return null;\n}\n\nexport function setLenderData(newLenderData){\n    globalDict.lenderData = [...newLenderData];\n}\n\nexport function getLenderData(){\n    if (globalDict.lenderData)\n        return [...globalDict.lenderData];\n\n    return null;\n}","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport LenderInputs from \"./LenderInputs\";\nimport './Lender.css';\n\nclass LenderInput extends React.Component {\n    beginningState(){\n        return {\n            selectedTier:'NONE',\n            tierMenuItems:[],\n            tierSelectDisabled:true,\n\n            selectedLender:'NONE',\n            lenderSelectDisabled:false,\n\n            currencyFields:{\n                \"Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Down Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Allowance\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Payoff\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trace a.c.v\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            percentageFields:{\n                \"Tax\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            isTextFieldsEnabled:false\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        let lenderMenuItems = [];\n\n        lenderMenuItems.push(<MenuItem value={'NONE'}>Please select lender</MenuItem>);\n\n        for (let lenderName in props.lenderToPrograms){\n            lenderMenuItems.push(<MenuItem value={lenderName}>{lenderName}</MenuItem>);\n        }\n\n        this.state = {\n            lenderMenuItems:lenderMenuItems,\n            ...this.beginningState()\n        }\n\n        this.selectLender = this.selectLender.bind(this);\n        this.selectTier = this.selectTier.bind(this);\n        this.addLender = this.addLender.bind(this);\n        this.reset = this.reset.bind(this);\n        this.deleteLenderInput = this.deleteLenderInput.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.init){\n            this.setState({lenderInputs:this.props.init});\n        }\n    }\n\n    textboxOnChange(event, fieldLabel){\n        let newValue = event.target.value;\n        let isError = isNaN(newValue);\n        console.log(isError);\n\n        if (fieldLabel in this.state.currencyFields){\n            let newCurrencyFields = {...this.state.currencyFields};\n            newCurrencyFields[fieldLabel] =  {\n                value:newValue,\n                error:isError\n            }\n\n            this.setState({currencyFields:newCurrencyFields});\n        }else if (fieldLabel in this.state.percentageFields){\n            let newPercentageFields = {...this.state.percentageFields};\n            newPercentageFields[fieldLabel] = {\n                value:newValue,\n                error:isError\n            }\n            this.setState({percentageFields:newPercentageFields})\n        }\n    }\n\n    selectLender(event){\n        let selectLenderName = event.target.value;\n\n        let tierSelectDisabled = true;\n\n        if (selectLenderName != 'NONE'){\n            tierSelectDisabled = false;\n        }\n\n        let tierMenuItems = [];\n        tierMenuItems.push(<MenuItem value={'NONE'}>Please select tier</MenuItem>);\n\n        for(let tierName of this.props.lenderToPrograms[selectLenderName]) {\n            tierMenuItems.push(<MenuItem value={tierName}>{tierName}</MenuItem>);\n        }\n\n        this.setState({\n            selectedLender:selectLenderName,\n            selectedTier:'NONE',\n            tierSelectDisabled: tierSelectDisabled,\n            tierMenuItems:tierMenuItems\n        });\n    }\n\n    selectTier(event){\n        let selectIndex = event.target.value;\n\n        this.setState({\n            selectedTier : selectIndex,\n            isTextFieldsEnabled:true\n        })\n    }\n\n    hasAnyErrorsInLenderInput(){\n        let hasAnyErrors = false;\n\n        Object.keys(this.state.currencyFields).forEach((key) => {\n            if (this.state.currencyFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        Object.keys(this.state.percentageFields).forEach((key) => {\n            if (this.state.percentageFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        return hasAnyErrors;\n    }\n\n    addLender(event){\n        let hasAnyErrors = this.hasAnyErrorsInLenderInput();\n\n        if (this.state.selectedLender != 'NONE' && this.state.selectedTier != 'NONE' && !hasAnyErrors) {\n            let lenderInput = {};\n            lenderInput[\"lender\"] = this.state.selectedLender;\n            lenderInput[\"tier\"] = this.state.selectedTier;\n            lenderInput[\"payment\"] = this.state.currencyFields[\"Payment\"].value;\n            lenderInput[\"down payment\"] = this.state.currencyFields[\"Down Payment\"].value;\n            lenderInput[\"trade allowance\"] = this.state.currencyFields[\"Trade Allowance\"].value;\n            lenderInput[\"trade payoff\"] = this.state.currencyFields[\"Trade Payoff\"].value;\n            lenderInput[\"trade a.c.v\"] = this.state.currencyFields[\"Trace a.c.v\"].value;\n            lenderInput[\"tax\"] = this.state.percentageFields[\"Tax\"].value;\n\n            if (this.props.onChange){\n                this.props.onChange(lenderInput);\n            }\n        }\n    }\n\n    reset(event){\n        this.setState({...this.beginningState()});\n    }\n\n    deleteLenderInput(event, lenderInputIndex){\n        let newLenderInputs = this.state.lenderInputs;\n\n        newLenderInputs.splice(lenderInputIndex, 1);\n\n        this.setState({lenderInputs:newLenderInputs}, this.props.onChange);\n    }\n\n    render(){\n        return (\n            <Grid container className={\"lender_main_content padding10\"} spacing={2}>\n                <Grid item xs={12}>\n                    <Select onChange={this.selectLender} value={this.state.selectedLender} disabled={this.state.lenderSelectDisabled} style={{width:'100%'}}>\n                        {this.state.lenderMenuItems}\n                    </Select>\n                </Grid>\n                <Grid item xs={12}>\n                    <Select onChange={this.selectTier} value={this.state.selectedTier} disabled={this.state.tierSelectDisabled} style={{width:'100%'}}>\n                        {this.state.tierMenuItems}\n                    </Select>\n                </Grid>\n                {Object.keys(this.state.currencyFields).map(currencyFieldLabel => (\n                        <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                        label={currencyFieldLabel}\n                                                                                        variant=\"outlined\"\n                                                                                        onChange={(event) => this.textboxOnChange(event, currencyFieldLabel)}\n                                                                                        error = {this.state.currencyFields[currencyFieldLabel].error}\n                                                                                        helperText={this.state.currencyFields[currencyFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                        value={this.state.currencyFields[currencyFieldLabel].value}\n                                                                                        InputProps={{\n                                                                                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                                                                        }\n                                                                                        }\n                                                                                        size={\"small\"}\n                        /></Grid>\n                    )\n                )\n                }\n                {Object.keys(this.state.percentageFields).map(percentageFieldLabel => (\n                        <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                        label={percentageFieldLabel}\n                                                                                        variant=\"outlined\"\n                                                                                        onChange={(event) => this.textboxOnChange(event, percentageFieldLabel)}\n                                                                                        error = {this.state.percentageFields[percentageFieldLabel].error}\n                                                                                        helperText={this.state.percentageFields[percentageFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                        value={this.state.percentageFields[percentageFieldLabel].value}\n                                                                                        InputProps={{\n                                                                                            startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                                                                                        }}\n                                                                                        size={\"small\"}\n                        /></Grid>\n                    )\n                )\n                }\n                <Grid item xs={12} style={{textAlign:\"center\"}}>\n                    <Button variant=\"contained\" color={\"primary\"} onClick={this.addLender}>Add</Button>\n                    <Button variant=\"contained\" color={\"secondary\"} onClick={this.reset} style={{marginLeft:10}}>Reset</Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default LenderInput;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport { Paper } from '@material-ui/core';\n\nclass LenderInputs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    keyToTitle(key){\n        let result = key.replace('_',' ');\n\n        return result\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    render(){\n        return (\n        <Paper style={{padding:10}}>\n            <Grid container>\n                <Grid item xs={12} align={\"right\"}>\n                    <IconButton color=\"secondary\" onClick={this.props.handleDeleteBtnClick}>\n                        <Close />\n                    </IconButton>\n                </Grid>\n                {\n                    Object.keys(this.props.inputs).map(input =>\n                        <React.Fragment>\n                            <Grid item xs={6}>\n                            {this.keyToTitle(input)}\n                            </Grid>\n                            <Grid item xs={6}>\n                                {this.props.inputs[input]}\n                            </Grid>\n                        </React.Fragment>)\n                }\n        </Grid>\n        </Paper>);\n    }\n}\n\nexport default LenderInputs;","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport {getLenderData, getLenderInputs, setLenderInputs} from \"./GlobalVariables\";\nimport LenderInput from \"./LenderInput\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./CarCalculation.css\";\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst CarCalculation = (props)=>{\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <CarCalculationClass isBigScreen={mdUp} {...props}/>\n}\n\nfunction mileageToKms(mileage){\n    return mileage * 1.60934;\n}\n\n\n\nfunction addCurrencySymbol(value){\n    if (value < 0){\n        return `-$${Math.abs(value)}`\n    }else{\n        return `$${value}`\n    }\n}\n\nfunction pv(rate, periods, payment, future, type) {\n    // Initialize type\n    var type = (typeof type === 'undefined') ? 0 : type;\n\n    // Evaluate rate and periods (TODO: replace with secure expression evaluator)\n    rate = eval(rate);\n    periods = eval(periods);\n\n    // Return present value\n    if (rate === 0) {\n        return - payment * periods - future;\n    } else {\n        return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 +rate * type) - future) / Math.pow(1 + rate, periods);\n    }\n}\n\nfunction getLenderId(lenderName, lenders){\n    for(let i = 0; i < lenders.length; i++){\n        if (lenderName == lenders[i].name)\n            return lenders[i].id;\n    }\n\n    return null;\n}\n\nexport function calculateProfitFirstInterest(filterInputs, lenderData, carDetails){\n    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, carDetails);\n    let interestColumnIndex = 3;\n    let profitColumnIndex = 8;\n    let interests = calculationDetails[interestColumnIndex].split(',');\n\n    if (interests.length > 0) {\n        // Select first interest as default\n        let firstInterest = interests[0];\n\n        let calculationDetailsForFirstInterest = createCalculationDetail(firstInterest, filterInputs, lenderData, carDetails);\n        let profit = calculationDetailsForFirstInterest[profitColumnIndex];\n\n        if (profit != 'NOT_FOUND')\n            return profit;\n    }\n\n    return null;\n}\n\nfunction createCalculationDetail(selectedInterest, filterInputs, lenderData, carDetails){\n    console.log('createCalculationDetail()');\n    console.log(selectedInterest);\n    console.log(filterInputs);\n    console.log(lenderData);\n    console.log(carDetails);\n\n    let lenders = lenderData[0];\n    let lenderPrograms = lenderData[1];\n    let lenderTerms = lenderData[2];\n\n    let lenderName = filterInputs[\"lender\"];\n    let tierName = filterInputs[\"tier\"];\n    console.log('lenderName = ' + lenderName);\n    console.log('tierName = ' + tierName);\n\n    // Advance\n    let advance = 'NOT_FOUND';\n    let interest = 'NOT_FOUND';\n    let term = 'NOT_FOUND';\n    let foundLenderTerm = null;\n    let foundLenderProgram = null;\n    let lenderId = getLenderId(lenderName, lenders);\n    console.log('lenderId = ' + lenderId);\n\n    if(lenderId != null){\n        for(let lenderProgram of lenderPrograms){\n            if (lenderProgram.lender_id == lenderId && lenderProgram.name == tierName){\n                foundLenderProgram = lenderProgram;\n\n                // Advance\n                if(!isNaN(lenderProgram.advance)){\n                    advance = parseFloat(lenderProgram.advance);\n                }\n\n                // Interest\n                let rateMin = parseFloat(lenderProgram.rate_min);\n                let rateMax = parseFloat(lenderProgram.rate_max);\n                interest = '';\n\n\n                let rate = rateMin;\n\n                while(rate < rateMax){\n                    rate += 1;\n                    rate = rate.toFixed(2);\n                    interest += rate + ',';\n                }\n\n                interest += rateMax;\n\n                break;\n            }\n        }\n\n        let carKms = mileageToKms(parseFloat(carDetails.mileage));\n        console.log('carKms = ' + carKms);\n\n        for(let lenderTerm of lenderTerms){\n            if (lenderTerm.lender_id == lenderId && lenderTerm.min_kms <= carKms && lenderTerm.max_kms >= carKms && lenderTerm.year == parseInt(carDetails.year)){\n                // Term\n                term = lenderTerm.term;\n                foundLenderTerm = lenderTerm;\n                break;\n            }\n        }\n    }\n\n    console.log('advance = ' + advance);\n    console.log('interest = ' + interest);\n    console.log('term = ' + term);\n\n    let payment = parseFloat(filterInputs[\"payment\"]);\n    let back = '0';\n\n    // Calculate max front\n    let maxFront = 'NOT_FOUND';\n\n    if (foundLenderTerm !=null && advance != \"NOT_FOUND\"){\n        let termType = foundLenderTerm.type.replace(/\\s/g, '');\n        console.log('termType = ' + termType);\n\n        switch(termType.toLowerCase()){\n            case 'x-clean':\n                maxFront = carDetails.x_clean * advance - carDetails.total_cost;\n                break;\n            case 'clean':\n                maxFront = carDetails.clean  * advance - carDetails.total_cost;\n                break;\n            case 'average':\n                maxFront = carDetails.average  * advance - carDetails.total_cost;\n                break;\n            case 'rough':\n                maxFront = carDetails.rough  * advance - carDetails.total_cost;\n                break;\n        }\n\n        maxFront = Math.round(maxFront);\n    }\n\n    console.log('maxFront = ' + maxFront);\n\n    // Calculate max profit\n    let maxProfit = 'NOT_FOUND';\n\n    if (selectedInterest != -1 && term!='NOT_FOUND') {\n        let discount = 0;\n        let tax = 0;\n        let financed = pv((selectedInterest / 100 + discount + tax) / 12, term, -payment, 0);\n        let holdBack = foundLenderProgram.hold_back;\n        let funded = financed * (1 - holdBack);\n\n        console.log('financed = ' + financed);\n        console.log('holdBack = ' + holdBack);\n        console.log('funded = ' + funded);\n\n        let lender = 0;\n        let ppsa = 0;\n\n        let tradeAllowance = 0;\n        if (filterInputs[\"trade allowance\"] != '' && !isNaN(filterInputs[\"trade allowance\"])) {\n            tradeAllowance = parseFloat(filterInputs[\"trade allowance\"]);\n        }\n\n        let tradePayOff = 0;\n        if (filterInputs[\"trade payoff\"] != '' && !isNaN(filterInputs[\"trade payoff\"])) {\n            tradePayOff = parseFloat(filterInputs[\"trade payoff\"])\n        }\n\n        let downPayment = 0;\n        if (filterInputs[\"down payment\"] != '' && !isNaN(filterInputs[\"down payment\"])) {\n            downPayment = parseFloat(filterInputs[\"down payment\"]);\n        }\n\n        let tradeAcv = 0;\n        if (filterInputs[\"trade a.c.v\"] != '' && !isNaN(filterInputs[\"trade a.c.v\"])) {\n            tradeAcv = parseFloat(filterInputs[\"trade a.c.v\"])\n        }\n\n        console.log('tradeAllowance = ' + tradeAllowance);\n        console.log('tradePayOff = ' + tradePayOff);\n        console.log('downPayment = ' + downPayment);\n        console.log('tradeAcv = ' + tradeAcv);\n\n        let paidOut = funded - lender - ppsa + tradeAllowance - tradePayOff + downPayment;\n        console.log('paidOut = ' + paidOut);\n\n        let userInputTax = 0;\n\n        if (filterInputs[\"tax\"] != '' && !isNaN(filterInputs[\"tax\"])) {\n            console.log(filterInputs[\"tax\"]);\n            userInputTax = parseFloat(filterInputs[\"tax\"]) / 100;\n        }\n\n        console.log('userInputTax = ' + userInputTax);\n\n        let netPaid = paidOut*(1-userInputTax) + tradeAcv;\n        console.log('netPaid = ' + netPaid);\n\n        if (netPaid - carDetails.total_cost < maxFront){\n            maxProfit = netPaid - carDetails.total_cost;\n        }else {\n            maxProfit = maxFront;\n        }\n\n        maxProfit = Math.round(maxProfit);\n    }\n\n    console.log('maxProfit = ' + maxProfit);\n\n    if (maxFront != 'NOT_FOUND'){\n        maxFront = addCurrencySymbol(maxFront);\n    }\n\n    if (maxProfit != 'NOT_FOUND'){\n        maxProfit = addCurrencySymbol(maxProfit);\n    }\n\n    console.log('End createCalculationDetail()');\n    return [lenderName, tierName, (advance * 100) + '%', interest, term, '$' + payment, back, maxFront, maxProfit];\n}\n\nclass CarCalculationClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.calculationDetailsColumnHeaders =[\n            \"Lender\",\n            \"Tier\",\n            \"Advance\",\n            \"Interest\",\n            \"Term\",\n            \"Payment\",\n            \"Back\",\n            \"Front\",\n            \"Profit\"\n        ];\n\n        this.state = {\n            calculationDetailsValues:[],\n            interests:[-1,-1,-1],\n            lendersDialogOpen:false,\n            lenderToPrograms: this.createLenderToPrograms(),\n            lenderInputs: this.props.filtersInputs\n        }\n\n        this.selectInterestEvent = this.selectInterestEvent.bind(this);\n        this.addRemoveLenders = this.addRemoveLenders.bind(this);\n        this.handleModalClose = this.handleModalClose.bind(this);\n        this.addLender = this.addLender.bind(this);\n    }\n\n    createLenderToPrograms(){\n        let lenderData = getLenderData();\n\n        if(lenderData){\n            let lenderToPrograms = {};\n            let lenderIdToLenderName = {};\n            let [lenders, lenderPrograms, ...rest] = lenderData;\n\n            lenders.forEach(lender => {\n                lenderIdToLenderName[lender[\"id\"]] = lender[\"name\"];\n            });\n\n            lenderPrograms.forEach(lenderProgram => {\n                let lenderName = lenderIdToLenderName[lenderProgram[\"lender_id\"]];\n\n                if (!(lenderName in lenderToPrograms)) {\n                    lenderToPrograms[lenderName] = [];\n                }\n\n                lenderToPrograms[lenderName].push(lenderProgram[\"name\"]);\n            });\n\n            return lenderToPrograms;\n        }\n\n        return [];\n    }\n\n    createCalculationDetails(selectedInterests, filtersInputs, lenderData, details){\n        let newCalculationDetailsValues = [];\n\n        for(let [i, filterInputs] of filtersInputs.entries()){\n            if(this.isValidFilterInputs(filterInputs)) {\n                if (selectedInterests[i] == -1){\n                    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, details);\n                    let interestColumnIndex = 3;\n                    let interests = calculationDetails[interestColumnIndex].split(',');\n\n                    if (interests.length > 0) {\n                        // Select first interest as default\n                        let firstInterest = interests[0];\n                        this.state.interests[i] = firstInterest;\n\n                        newCalculationDetailsValues.push(createCalculationDetail(firstInterest, filterInputs, lenderData, details));\n                    }else{\n                        newCalculationDetailsValues.push(calculationDetails);\n                    }\n                }\n                else{\n                    newCalculationDetailsValues.push(createCalculationDetail(selectedInterests[i], filterInputs, lenderData, details));\n                }\n            }\n        }\n\n        return newCalculationDetailsValues;\n    }\n\n    isValidFilterInputs(filterInputs){\n        return filterInputs.selectedLenderIndex != 0 && filterInputs.selectedTierIndex != 0;\n    }\n\n    selectInterestEvent(event, lenderIndex){\n        let newInterest = event.target.value;\n        let interests = this.state.interests;\n        interests[lenderIndex] = newInterest;\n\n        this.setState({interests:interests});\n    }\n\n    removeLenderInput(lenderInputIndex){\n        let newLenderInputs = [...this.state.lenderInputs];\n        newLenderInputs.splice(lenderInputIndex, 1);\n        setLenderInputs(newLenderInputs);\n\n        this.setState({lenderInputs:newLenderInputs});\n    }\n\n\n    getCellStyle(value, index){\n        let classNameValue = \"\";\n        let maxFrontIndex = 7;\n        let profitIndex = 8;\n\n        if ((index == maxFrontIndex || index == profitIndex) && value !==\"NOT_FOUND\"){\n            let number = value.replace(\"$\", \"\");\n\n            if (parseFloat(number) > 0){\n                classNameValue = \"positive\";\n            }else if (parseFloat(number) < 0){\n                classNameValue = \"negative\";\n            }\n        }\n\n        return classNameValue;\n    }\n    \n    renderWithOneTable(calculationDetailsValues){\n        return (\n            <React.Fragment>\n                <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                    <Table>\n                        <TableHead>\n                                <StyledTableRow>\n                                    {this.calculationDetailsColumnHeaders.map(header => (\n                                        <StyledTableCell>{header}</StyledTableCell>\n                                    ))}\n                                    <StyledTableCell>\n                                        Actions\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                        </TableHead>\n                        {\n                            calculationDetailsValues.map((columnValues, lenderIndex) =>(\n                                <StyledTableRow>\n                                    {\n                                        columnValues.map((columnValue, index) => {\n                                            let interestColumnIndex = 3;\n\n                                            if (index == interestColumnIndex){\n                                                let interestMenuItems = [];\n\n                                                columnValue.split(',').forEach((interest, index) => {\n                                                    interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n                                                });\n\n                                                return (\n                                                    <StyledTableCell>\n                                                        <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                                                            {interestMenuItems}\n                                                        </Select>\n                                                    </StyledTableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <StyledTableCell className={this.getCellStyle(columnValue, index)}>\n                                                        {columnValue}\n                                                    </StyledTableCell>\n                                                )\n                                            }\n                                        })\n                                    }\n                                    <StyledTableCell>\n                                        <IconButton className=\"remove_lender\" onClick={(event) => this.removeLenderInput(lenderIndex)}><DeleteIcon /></IconButton>\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            ))\n                        }\n                    </Table>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n    createCell(value, index, lenderIndex){\n        let interestColumnIndex = 3;\n\n        if (index == interestColumnIndex){\n            let interestMenuItems = [];\n\n            value.split(',').forEach((interest, index) => {\n                interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n            });\n\n            return (\n                    <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                        {interestMenuItems}\n                    </Select>\n            )\n        }\n        else\n            return <React.Fragment>\n                {value}\n            </React.Fragment>\n    }\n\n    renderWithThreeTables(calculationDetailsValues){\n        let tables = [];\n\n        for(let [lenderIndex, lenderCalculationDetailsValues] of calculationDetailsValues.entries()){\n            tables.push(\n                <Grid item xs={12}>\n                    <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                        <Table>\n                            <TableHead>\n                                <StyledTableRow>\n                                    <StyledTableCell>Name</StyledTableCell>\n                                    <StyledTableCell>Value</StyledTableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {\n                                lenderCalculationDetailsValues.map((row, index) => (\n                                    <StyledTableRow>\n                                        <StyledTableCell>{this.calculationDetailsColumnHeaders[index]}</StyledTableCell>\n                                        <StyledTableCell className={this.getCellStyle(row, index)}>{this.createCell(row, index, lenderIndex)}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))\n                            }\n                            <StyledTableRow>\n                                <StyledTableCell colspan={2} style={{textAlign: 'center'}}>\n                                    <IconButton className=\"remove_lender\" onClick={(event) => this.removeLenderInput(lenderIndex)}><DeleteIcon /></IconButton>\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        </Table>\n                    </Paper>\n                </Grid>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={4}>\n                    {tables}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n\n    addRemoveLenders(){\n        this.setState({lendersDialogOpen: true});\n    }\n\n    handleModalClose(){\n        this.setState({lendersDialogOpen:false});\n    }\n\n    addLender(lenderInput){\n        let newLenderInputs = getLenderInputs();\n\n        if (newLenderInputs == null)\n            newLenderInputs = [];\n        newLenderInputs.push(lenderInput);\n        setLenderInputs(newLenderInputs);\n        this.setState({lendersDialogOpen:false, lenderInputs:newLenderInputs});\n    }\n\n    render(){\n        let userInputsFilterData = this.state.lenderInputs != undefined;\n        let calculationDetailsValues = this.createCalculationDetails(this.state.interests, this.state.lenderInputs, this.props.lenderData, this.props.details);\n\n        if (userInputsFilterData){\n            let table = null;\n\n            if (this.props.isBigScreen){\n                table = this.renderWithOneTable(calculationDetailsValues);\n            }else{\n                table = this.renderWithThreeTables(calculationDetailsValues);\n            }\n\n            return (\n                <>\n                    {table}\n                    <div style={{textAlign:'right', marginTop:10}}>\n                        <Button variant={\"contained\"} color={\"primary\"} onClick={this.addRemoveLenders}><AddIcon />Add Lender</Button>\n                    </div>\n                    <Dialog  open={this.state.lendersDialogOpen}\n                             onClose={this.handleModalClose}>\n                        <DialogTitle>Add Lender</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>Please enter full information for new lender</DialogContentText>\n                            <LenderInput lenderToPrograms={this.state.lenderToPrograms} onChange={this.addLender}/>\n                        </DialogContent>\n                    </Dialog>\n                </>\n            )\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default CarCalculation;"],"sourceRoot":""}