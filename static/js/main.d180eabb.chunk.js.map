{"version":3,"sources":["Api.js","LenderFilter.js","LenderFilters.js","CarDescription.js","CarCalculation.js","CarImagesGallery.js","CarShowElementButtons.js","CarShowElement.js","CarShow.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["domain","LenderFilter","selectLenderEvent","bind","selectTierEvent","state","filterBeginningState","selectedTierIndex","currencyFields","value","error","percentageFields","beginningState","selectedLenderValue","selectedLenderImage","tierMenuItems","this","textfieldsBeginningState","isTierSelectEnabled","isTextFieldsEnabled","lenderMenuItems","push","MenuItem","key","nextProps","i","lenders","length","lender","name","setState","event","fieldLabel","newValue","target","isError","isNaN","console","log","newCurrencyFields","newPercentageFields","index","indexMinusOne","newState","selectedLenderId","props","id","allTierOfSelectedLender","lenderPrograms","filter","lenderProgram","lender_id","map","newTierMenuItems","itemValue","isPleaseSelectItemSelected","Grid","container","spacing","item","xs","Select","onChange","style","width","disabled","Object","keys","currencyFieldLabel","sm","md","TextField","label","variant","textboxOnChange","helperText","InputProps","startAdornment","InputAdornment","position","size","percentageFieldLabel","React","LendersFilter","clearFiltersOnClick","lenderFilter1","lenderFilter2","lenderFilter3","lenderTerms","Promise","all","fetch","then","a","json","lendersJson","lenderProgramsJson","lenderTermsJson","current","reset","direction","textAlign","Button","color","onClick","xl","ref","submitOnClick","CarDescription","Paper","padding","backgroundColor","Table","details","row","TableRow","TableCell","colSpan","fontSize","StyledTableCell","withStyles","theme","head","palette","primary","main","common","white","body","StyledTableRow","root","background","default","CarCalculationClass","calculationDetailsColumnHeaders","calculationDetailsValues","TableHead","header","columnValues","columnValue","tables","lenderCalculationDetailsValues","isBigScreen","renderWithOneTable","renderWithThreeTables","CarCalculation","useTheme","mdUp","useMediaQuery","breakpoints","up","CarImagesGallery","items","images","showPlayButton","showFullscreenButton","CarShowElementButtons","lg","CarShowElement","Card","CardContent","clipLoaderCss","css","CarShow","carShowElements","isLoading","res","car_details","convertToCarDetails","car_images","getCarImages","carJson","result","imageSrc","src","original","thumbnail","toUpperCase","className","AppClass","carshowRef","createRef","lendersFilter","filterOnClick","submitOnclick","menuBtnOnClick","closeMenu","displayFilters","displayCarShow","anchorEl","window","scrollTo","currentTarget","AppBar","Fragment","Tabs","Tab","Toolbar","IconButton","aria-label","aria-controls","aria-haspopup","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","ToggleButton","selected","marginTop","marginBottom","display","Component","App","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.d180eabb.chunk.js","sourcesContent":["var domain = 'https://lender-filter-backend-test.herokuapp.com';\n\nfunction fetchCars(){\n    return fetch(`${domain}/cars/`);\n}\n\nfunction fetchLenders(){\n    return fetch(`${domain}/lenders/`);\n}\n\nfunction fetchLenderPrograms(){\n    return fetch(`${domain}/lenders/programs/`);\n}\n\nfunction fetchLenderTerms(){\n    return fetch(`${domain}/lenders/terms/`)\n}\n\n\nexport {fetchCars, fetchLenders, fetchLenderPrograms, fetchLenderTerms};","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {fetchCars, fetchLenders, fetchLenderPrograms, fetchLenderTerms} from \"./Api\";\n\nconst PLEASE_SELECT_INDEX = 0;\n\nexport default class LenderFilter extends React.Component{\n    constructor() {\n        super();\n        this.selectLenderEvent = this.selectLenderEvent.bind(this);\n        this.selectTierEvent = this.selectTierEvent.bind(this);\n        this.state = this.filterBeginningState();\n    }\n\n    textfieldsBeginningState(){\n        return {\n            selectedTierIndex:0,\n            currencyFields:{\n                \"Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Down Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Allowance\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Payoff\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trace a.c.v\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            percentageFields:{\n                \"Tax\":{\n                    value: null,\n                    error: false\n                }\n            }\n        }\n    }\n\n    filterBeginningState(){\n        let beginningState = {\n            selectedLenderValue: 0,\n            selectedLenderImage: null,\n            tierMenuItems:[],\n            ...this.textfieldsBeginningState(),\n            isTierSelectEnabled:false,\n            isTextFieldsEnabled:false,\n            lenderMenuItems:[]\n        };\n\n        beginningState.tierMenuItems.push(<MenuItem key={\"tier_please_select_item\"}value={PLEASE_SELECT_INDEX}>Please select tier</MenuItem>);\n\n        return beginningState;\n    }\n\n    componentWillReceiveProps(nextProps){\n        let lenderMenuItems = [];\n\n        for(let i = 0; i < nextProps.lenders.length; i++){\n            let lender = nextProps.lenders[i];\n\n            lenderMenuItems.push(<MenuItem key={\"lender_name_\" + i} value={i+1}>{lender.name}</MenuItem>);\n        }\n\n        this.setState({lenderMenuItems:lenderMenuItems});\n    }\n\n    textboxOnChange(event, fieldLabel){\n        let newValue = event.target.value;\n        let isError = isNaN(newValue);\n        console.log(isError);\n\n        if (fieldLabel in this.state.currencyFields){\n            let newCurrencyFields = {...this.state.currencyFields};\n            newCurrencyFields[fieldLabel] =  {\n                value:newValue,\n                error:isError\n            }\n\n            this.setState({currencyFields:newCurrencyFields});\n        }else if (fieldLabel in this.state.percentageFields){\n            let newPercentageFields = {...this.state.percentageFields};\n            newPercentageFields[fieldLabel] = {\n                value:newValue,\n                error:isError\n            }\n            this.setState({percentageFields:newPercentageFields})\n        }\n    }\n\n    selectLenderEvent(event){\n        let index = event.target.value;\n        let indexMinusOne = index - 1;\n\n        let newState = {};\n        newState.selectedLenderValue = index;\n\n        let isPleaseSelectItemSelected = index == PLEASE_SELECT_INDEX;\n\n        // // Update lender logo\n        // if (isPleaseSelectItemSelected){\n        //     newState.selectedLenderImage = null;\n        //     newState.isTierSelectEnabled = false;\n        // }else{\n        //     newState.selectedLenderImage = this.lenders[indexMinusOne].img_url;\n        //     newState.isTierSelectEnabled = true;\n        // }\n\n        // Update tiers\n        if (!isPleaseSelectItemSelected){\n            let selectedLenderId = this.props.lenders[indexMinusOne].id;\n            let allTierOfSelectedLender = this.props.lenderPrograms.filter(lenderProgram  => lenderProgram.lender_id == selectedLenderId).map(lenderProgram => lenderProgram.name);\n            let newTierMenuItems = [];\n            newTierMenuItems.push(<MenuItem value={PLEASE_SELECT_INDEX}>Please select tier</MenuItem>);\n\n            for (let i = 0; i < allTierOfSelectedLender.length; i++) {\n                let itemValue = i + 1;\n\n                newTierMenuItems.push(<MenuItem value={itemValue}>{allTierOfSelectedLender[i]}</MenuItem>)\n            }\n\n            newState.tierMenuItems = newTierMenuItems;\n            newState.isTierSelectEnabled = true;\n        }\n\n        newState.selectedTierIndex = PLEASE_SELECT_INDEX;\n\n        this.setState(newState);\n    }\n\n    selectTierEvent(event){\n        let newState = {...this.textfieldsBeginningState()};\n\n        newState.selectedTierIndex = event.target.value;\n\n        let isPleaseSelectItemSelected = event.target.value == PLEASE_SELECT_INDEX;\n\n        if(isPleaseSelectItemSelected){\n            newState.isTextFieldsEnabled = false;\n        }else{\n            newState.isTextFieldsEnabled = true;\n        }\n\n        this.setState(newState);\n    }\n\n    reset(){\n        this.setState(this.filterBeginningState());\n    }\n\n    render(){\n        return (\n            <Grid container spacing={5}>\n                <Grid item xs={12}>\n                    <Select onChange={this.selectLenderEvent} value={this.state.selectedLenderValue} style={{width:'100%'}}>\n                        {this.state.lenderMenuItems}\n                    </Select>\n                </Grid>\n                {/*<Grid item xs={12} style={{textAlign:\"center\"}}>*/}\n                {/*    <img src={this.state.selectedLenderImage} {...this.state.selectedLenderImage == null? {style:{width:'150px', height:'150px', visibility:\"hidden\"}}:{style:{width:'150px', height:'150px'}}} />*/}\n                {/*</Grid>*/}\n                <Grid item xs={12}>\n                    <Select style={{width:'100%'}} disabled={!this.state.isTierSelectEnabled} value={this.state.selectedTierIndex} onChange={this.selectTierEvent}>\n                        {this.state.tierMenuItems}\n                    </Select>\n                </Grid>\n                {Object.keys(this.state.currencyFields).map(currencyFieldLabel => (\n                    <Grid item xs={6} sm={3} md={6}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                         label={currencyFieldLabel}\n                                                         variant=\"outlined\"\n                                                         onChange={(event) => this.textboxOnChange(event, currencyFieldLabel)}\n                                                               error = {this.state.currencyFields[currencyFieldLabel].error}\n                                                               helperText={this.state.currencyFields[currencyFieldLabel].error?\"Invalid Value\":\"\"}\n                                                               value={this.state.currencyFields[currencyFieldLabel].value}\n                                                         InputProps={{\n                                                             startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                                         }\n                                                         }\n                                                         size={\"small\"}\n                    /></Grid>\n                        )\n                    )\n                }\n                {Object.keys(this.state.percentageFields).map(percentageFieldLabel => (\n                        <Grid item xs={6} sm={3} md={6}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                             label={percentageFieldLabel}\n                                                             variant=\"outlined\"\n                                                             onChange={(event) => this.textboxOnChange(event, percentageFieldLabel)}\n                                                             error = {this.state.percentageFields[percentageFieldLabel].error}\n                                                                   helperText={this.state.percentageFields[percentageFieldLabel].error?\"Invalid Value\":\"\"}\n                                                             value={this.state.percentageFields[percentageFieldLabel].value}\n                                                             InputProps={{\n                                                                 startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                                                             }}\n                                                             size={\"small\"}\n                        /></Grid>\n                    )\n                )\n                }\n            </Grid>\n        )\n    }\n}","import LenderFilter from \"./LenderFilter\";\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default class LendersFilter extends React.Component{\n    constructor() {\n        super();\n        this.clearFiltersOnClick = this.clearFiltersOnClick.bind(this);\n        this.lenderFilter1 = React.createRef();\n        this.lenderFilter2 = React.createRef();\n        this.lenderFilter3 = React.createRef();\n\n        this.state = {\n            lenders: [],\n            lenderPrograms: [],\n            lenderTerms: []\n        }\n\n        Promise.all([fetchLenders(), fetchLenderPrograms(), fetchLenderTerms()]).then(async([lenders, lenderPrograms, lenderTerms]) => {\n            const lendersJson = await lenders.json();\n            const lenderProgramsJson = await lenderPrograms.json();\n            const lenderTermsJson = await lenderTerms.json();\n\n            return [lendersJson, lenderProgramsJson, lenderTermsJson];\n        }).then(([lenders, lenderPrograms, lenderTerms]) => {\n            this.setState({lenders:lenders, lenderPrograms:lenderPrograms, lenderTerms:lenderTerms});\n        });\n    }\n\n    clearFiltersOnClick(event){\n        this.lenderFilter1.current.reset();\n        this.lenderFilter2.current.reset();\n        this.lenderFilter3.current.reset();\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                <Grid container direction={\"row\"} spacing={4}>\n                    <Grid item xs={12} style={{textAlign:\"center\"}}>\n                        <Button variant=\"contained\" color={\"secondary\"} onClick={this.clearFiltersOnClick}>Clear Filters</Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                        Customer Name:\n                    </Grid>\n                    <Grid item xl={4}>\n                        <LenderFilter ref={this.lenderFilter1} lenders={this.state.lenders} lenderPrograms={this.state.lenderPrograms} lenderTerms={this.state.lenderTerms}/>\n                    </Grid>\n                    <Grid item xl={4}>\n                        <LenderFilter ref={this.lenderFilter2} lenders={this.state.lenders} lenderPrograms={this.state.lenderPrograms} lenderTerms={this.state.lenderTerms}/>\n                    </Grid>\n                    <Grid item xl={4}>\n                        <LenderFilter ref={this.lenderFilter3} lenders={this.state.lenders} lenderPrograms={this.state.lenderPrograms} lenderTerms={this.state.lenderTerms}/>\n                    </Grid>\n                    <Grid item xs={12} style={{textAlign:\"center\"}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.props.submitOnClick}>Submit</Button>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default class CarDescription extends React.Component{\n    render(){\n        return (\n            <Paper style={{padding:\"20px\", backgroundColor:\"rgb(247, 248, 248)\"}}>\n                <Table>\n                    {this.props.details.map(row => (\n                        row.name == \"TITLE\"?\n                            (\n                                <TableRow>\n                                    <TableCell colSpan={2} style={{textAlign:\"center\"}}><b style={{fontSize:\"1.2rem\"}}>{row.value}</b></TableCell>\n                                </TableRow>\n                            ):\n                            (\n                                <TableRow>\n                                    <TableCell style={{padding:\"0px\"}}>\n                                        <b>{row.name}</b>\n                                    </TableCell>\n                                    <TableCell style={{padding:\"0px\"}}>\n                                        {row.value}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                    ))}\n                </Table>\n            </Paper>\n        )\n    }\n}","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst CarCalculation = (props)=>{\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <CarCalculationClass isBigScreen={mdUp} />\n}\n\nclass CarCalculationClass extends React.Component{\n    constructor() {\n        super();\n\n        this.calculationDetailsColumnHeaders =[\n            \"Lender\",\n            \"Tier\",\n            \"Advance\",\n            \"Interest\",\n            \"Term\",\n            \"Payment\",\n            \"Back\",\n            \"Front\",\n            \"Profit\"\n        ]\n\n        this.calculationDetailsValues = [\n            [\"lender name\", \"tier_value\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n            [\"lender_value1\", \"tier_value1\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n            [\"lender_value2\", \"tier_value2\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]\n        ]\n    }\n\n    renderWithOneTable(){\n        console.log('Test Arr ' + this.calculationDetailsColumnHeaders);\n\n        return (\n            <React.Fragment>\n                <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                    <Table>\n                        <TableHead>\n                                <StyledTableRow>\n                                {this.calculationDetailsColumnHeaders.map(header => (\n                                    <StyledTableCell>{header}</StyledTableCell>\n                                ))}\n                                </StyledTableRow>\n                        </TableHead>\n                        {\n                            this.calculationDetailsValues.map(columnValues =>(\n                                <StyledTableRow>\n                                    {\n                                        columnValues.map(columnValue => (\n                                            <StyledTableCell>\n                                                {columnValue}\n                                            </StyledTableCell>\n                                        ))\n                                    }\n                                </StyledTableRow>\n                            ))\n                        }\n                    </Table>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n    renderWithThreeTables(){\n        let tables = [];\n\n        for(let lenderCalculationDetailsValues of this.calculationDetailsValues){\n            tables.push(\n                <Grid item xs={12}>\n                    <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                        <Table>\n                            <TableHead>\n                                <StyledTableRow>\n                                    <StyledTableCell>Name</StyledTableCell>\n                                    <StyledTableCell>Value</StyledTableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {\n                                lenderCalculationDetailsValues.map((row, index) => (\n                                    <StyledTableRow>\n                                        <StyledTableCell>{this.calculationDetailsColumnHeaders[index]}</StyledTableCell>\n                                        <StyledTableCell>{row}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))\n                            }\n                        </Table>\n                    </Paper>\n                </Grid>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={4}>\n                    {tables}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n\n\n    render(){\n        if (this.props.isBigScreen){\n            return this.renderWithOneTable();\n        }else{\n            return this.renderWithThreeTables();\n        }\n    }\n}\n\nexport default CarCalculation;","import * as React from \"react\";\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './CarImagesGallery.css';\n\nexport default class CarImagesGallery extends React.Component{\n    render(){\n        return (\n            <ImageGallery items={this.props.images} showPlayButton={false} showFullscreenButton={false}/>\n        );\n    }\n}","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElementButtons extends React.Component{\n    render(){\n        return <React.Fragment>\n            <Grid container spacing={1}>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Save</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Pictures</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Breakdown</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Send</Button>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    }\n}","import * as React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CarDescription from \"./CarDescription\";\nimport CarCalculation from \"./CarCalculation\";\nimport CarImagesGallery from \"./CarImagesGallery\";\nimport CarShowElementButtons from \"./CarShowElementButtons\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElement extends React.Component{\n    constructor() {\n        super();\n\n        this.details =[\n            {\n                name:\"title\",\n                value:\"2018 CHEVROLET EQUINOX\"\n            },\n            {\n                name:\"YEAR\",\n                value:\"2018\"\n            },\n            {\n                name:\"MAKE\",\n                value:\"test make\"\n            },\n            {\n                name:\"MODEL\",\n                value:\"test make\"\n            },\n            {\n                name:\"SERIES\",\n                value:\"test model\"\n            },\n            {\n                name:\"STYLE\",\n                value:\"test series\"\n            },\n            {\n                name:\"DRIVE\",\n                value:\"test style\"\n            },\n            {\n                name:\"FUEL\",\n                value:\"test fuel\"\n            },\n            {\n                name:\"MILEAGE\",\n                value:\"test mileage\"\n            },\n            {\n                name:\"EXT. COLOR\",\n                value:\"test ext color\"\n            },\n            {\n                name:\"VIN\",\n                value:\"test vin\"\n            },\n            {\n                name:\"STATUS\",\n                value:\"test status\"\n            }\n        ]\n    }\n    render() {\n        return (\n           <Card style={{width:\"100%\"}}>\n               <CardContent>\n                   <Grid container spacing={2}>\n                       <Grid item xs={12} lg={7}>\n                            <CarImagesGallery images={this.props.images}/>\n                       </Grid>\n                       <Grid item xs={12} lg={5}>\n                           <CarDescription details={this.props.details}/>\n                       </Grid>\n                       <Grid item xs={12}>\n                           <CarCalculation />\n                       </Grid>\n                       <Grid item xs={12}>\n                           <CarShowElementButtons />\n                       </Grid>\n                   </Grid>\n               </CardContent>\n           </Card>\n        )\n    }\n}","import * as React from \"react\";\nimport CarShowElement from \"./CarShowElement\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {styled, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {css} from \"@emotion/core\";\nimport {ClipLoader} from \"react-spinners\";\nimport './CarShow.css';\nimport {fetchCars} from \"./Api\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass CarShow extends React.Component{\n    constructor() {\n        super();\n\n        this.state = {\n            carShowElements:[],\n            isLoading:false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({isLoading:true});\n        fetchCars()\n            .then(res => res.json())\n            .then(json => {\n                let carShowElements = []\n\n                for(let i = 0; i < json.length; i++){\n                    let car_details = this.convertToCarDetails(json[i])\n                    let car_images = this.getCarImages(json[i])\n\n                    carShowElements.push(\n                        <Grid item xs={12} xl={6}>\n                            <CarShowElement details={car_details} images={car_images}/>\n                        </Grid>\n                    );\n                }\n                this.setState({carShowElements:carShowElements, isLoading:false});\n            });\n    }\n\n    getCarImages(carJson){\n        let result = [];\n\n        for(let i = 0; i < carJson[\"images\"].length; i++){\n            let image = carJson[\"images\"][i];\n\n            let imageSrc = image.src;\n            console.log(imageSrc);\n\n            result.push({\n                original:imageSrc,\n                thumbnail:imageSrc\n            });\n        }\n        return result;\n    }\n\n    convertToCarDetails(carJson){\n        let result = [];\n\n        for(let key in carJson){\n            if (key != \"id\" && key != \"images\"){\n                result.push({\n                    name:key.toUpperCase(),\n                    value:carJson[key]\n                });\n            }\n        }\n\n        return result;\n    }\n\n\n    render(){\n        return (\n            <Grid container spacing={4} className={`car-show-grid ${this.state.isLoading?\"loading\":\"\"}`}>\n                {this.state.isLoading?<div className={\"spinner\"}><ClipLoader css={clipLoaderCss}/></div>:this.state.carShowElements}\n            </Grid>\n        );\n    }\n}\n\nexport default CarShow;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LenderFilter from \"./LenderFilter\";\nimport LendersFilter from \"./LenderFilters\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Form from \"@material-ui/core/FormControl\"\nimport CarShow from \"./CarShow\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport {FaFilter} from \"react-icons/all\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst App = (props) => {\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <AppClass isBigScreen={mdUp}/>\n}\n\nclass AppClass extends React.Component{\n    constructor() {\n        super();\n\n        this.carshowRef= React.createRef();\n        this.lendersFilter = React.createRef();\n        this.filterOnClick = this.filterOnClick.bind(this);\n        this.submitOnclick = this.submitOnclick.bind(this);\n        this.menuBtnOnClick = this.menuBtnOnClick.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n\n        this.state = {\n            displayFilters:false,\n            displayCarShow:true,\n            anchorEl:null\n        }\n    }\n\n    filterOnClick(event){\n        console.log('Filter')\n        this.setState({displayFilters:!this.state.displayFilters});\n    }\n\n    submitOnclick(){\n        this.setState({\n            displayFilters:false,\n            displayCarShow:true\n        })\n        window.scrollTo(0,0);\n    }\n\n    menuBtnOnClick(event){\n        this.setState({anchorEl:event.currentTarget})    ;\n    }\n\n    closeMenu(){\n        this.setState({anchorEl:null});\n    }\n\n    render() {\n        return (\n            <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                <Grid item xl={1} xs={0} />\n                <Grid item xl={10} xs={12}>\n                    <AppBar position=\"static\">\n                        {this.props.isBigScreen ? (\n                            <React.Fragment>\n                                <Tabs>\n                                    <Tab label=\"Home\"/>\n                                    <Tab label=\"Rate Sheet\" disabled/>\n                                    <Tab label=\"Quick Quote\" disabled/>\n                                    <Tab label=\"Lender Assist\" disabled/>\n                                </Tabs>\n                            </React.Fragment>) : (\n                                <Toolbar>\n                                    <IconButton\n                                        aria-label=\"menu\"\n                                        aria-controls=\"menu-appbar\"\n                                        aria-haspopup=\"true\"\n                                        style={{\"color\":\"white\"}}\n                                        onClick={this.menuBtnOnClick}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"menu-appbar\"\n                                        anchorEl={this.state.anchorEl}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        open={Boolean(this.state.anchorEl)}\n                                        onClose={this.closeMenu}\n                                    >\n                                        <MenuItem>HOME</MenuItem>\n                                        <MenuItem>RATE SHEET</MenuItem>\n                                        <MenuItem>QUICK QUOTE</MenuItem>\n                                        <MenuItem>LENDER ASSIST</MenuItem>\n                                    </Menu>\n                                </Toolbar>\n                            )\n                        }\n                    </AppBar>\n                </Grid>\n                <Grid item xl={1} xs={0}/>\n                <Grid item xl={1} xs={0}/>\n                <Grid item xl={10} xs={12}>\n                    <Grid container>\n                        <Grid item lg={12} xs={12}>\n                            <Grid container spacing={2}>\n                                {this.state.displayCarShow?(\n                                    <React.Fragment>\n                                        <Grid item xs={12} sm={4} lg={2} style={{textAlign:\"center\"}}>\n                                            <Select value={0}>\n                                                <MenuItem value={0}>Sort by (choose)</MenuItem>\n                                            </Select>\n                                        </Grid>\n                                        <Grid item xs={12} sm={4} lg={2} style={{textAlign:\"center\"}}>\n                                            <Select value={0}>\n                                                <MenuItem value={0}>Sort by (choose)</MenuItem>\n                                            </Select>\n                                        </Grid>\n                                        <Grid item xs={12} sm={4} lg={2} style={{textAlign:\"center\"}}>\n                                            <Select value={0}>\n                                                <MenuItem value={0}>Sort by (choose)</MenuItem>\n                                            </Select>\n                                        </Grid>\n                                        <Grid item xs={12} sm={4} lg={2} style={{textAlign:\"center\"}}>\n                                            <ToggleButton onClick={this.filterOnClick} selected={this.state.displayFilters}><FaFilter/>  Filter</ToggleButton>\n                                        </Grid>\n                                    </React.Fragment>\n                                ):null\n                                }\n                                <Grid item xs={12} style={{marginTop:\"16px\", marginBottom:\"16px\", display:this.state.displayFilters?\"\":\"none\"}}>\n                                      <Paper style={{padding:\"10px\"}}>\n                                            <LendersFilter ref={this.lendersFilter} submitOnClick={this.submitOnclick}/>\n                                      </Paper>\n                                </Grid>\n                                {\n                                    this.state.displayCarShow?(\n                                        <Grid item xs={12}>\n                                            <CarShow ref={this.carshowRef}/>\n                                        </Grid>\n                                    ):null\n                                }\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xl={1} xs={0}/>\n            </Grid>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}