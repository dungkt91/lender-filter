{"version":3,"sources":["ListFilter.js","RangeFilter.js","Filter.js","LenderInputs.js","Lender.js","LeftPanel.js","CarDescription.js","CarImagesGallery.js","CarShowElement.js","CarShowElementButtons.js","Api.js","Car.js","CarShow.js","Menubar.js","HomePage.js","CarPage.js","App.js","serviceWorker.js","index.js","CarCalculation.js"],"names":["ListFilter","props","optionCheckedDict","options","state","selectAll","bind","optionOnchange","this","init","newState","checkedAll","option","isChecked","includes","setState","onChange","title","selectedOptions","push","event","selectAllCheckbox","target","selectedCheckboxState","checked","name","checkbox","console","log","sortedOptions","sort","manyOptions","length","Grid","container","className","item","xs","Checkbox","color","map","titleTransformFunc","displayCount","counts","React","Component","RangeFilter","onChangeDebounced","min","max","value_type","Math","values","debounce","sliderOnChange","textFieldName","value","current_min","current_max","undefined","minTitle","maxTitle","toText","TextField","label","getMinTitle","variant","size","textFieldOnChange","align","getToText","getMaxTitle","Slider","valueLabelDisplay","step","Filter","filters","filter","filterOnChange","createFilter","expandOrCollapse","filterTitle","stateKeyName","dependentFilter","dependentList","refsDict","getValues","newOptions","Set","forEach","add","Array","from","filterType","stateName","filterIndex","filterComponent","ref","curFilter","Fragment","onClick","Collapse","in","LenderInputs","key","replace","toLowerCase","split","word","charAt","toUpperCase","slice","join","Paper","style","padding","IconButton","handleDeleteBtnClick","Object","keys","inputs","input","keyToTitle","Lender","lenderMenuItems","beginningState","lenderInputs","selectLender","selectTier","addLender","reset","deleteLenderInput","selectedTier","tierMenuItems","tierSelectDisabled","selectedLender","lenderSelectDisabled","currencyFields","error","percentageFields","isTextFieldsEnabled","nextProps","lenderName","MenuItem","lenderToPrograms","fieldLabel","newValue","isError","isNaN","newCurrencyFields","newPercentageFields","selectLenderName","tierName","selectIndex","hasAnyErrors","lenderInput","hasAnyErrorsInLenderInput","newLenderInputs","lenderInputIndex","splice","spacing","Select","disabled","width","currencyFieldLabel","sm","md","textboxOnChange","helperText","InputProps","startAdornment","InputAdornment","position","percentageFieldLabel","textAlign","Button","marginLeft","LeftPanel","handleChange","filterRef","createRef","parseProps","carDetails","selectedTabIndex","newSelectedTabIndex","str","result","substring","makes","makeToModelsDict","makeToCountDict","modelToCountDict","models","yearSet","i","carDetail","make","model","year","yearRangeList","filtersExpanded","convertStr","createRangeListContinuousValue","parseInt","lenderIdToLenderName","lenders","lender","lenderPrograms","lenderProgram","partsCount","current","getFilterValues","Tabs","Tab","CarDescription","getRowValue","trim","rowName","row","getRowWithName","matches","details","backgroundColor","Table","TableRow","TableCell","colSpan","fontSize","getCarTitle","CarImagesGallery","items","images","showPlayButton","showFullscreenButton","showThumbnails","CarShowElement","fieldName","convertDict","carJson","excludeCarDetailFields","convertFieldNameToLabel","isCurrencyField","image","original","Card","CardContent","lg","convertToImages","convertToCarDetails","domain","Car","cardOnClick","carYear","carMake","carModel","carTrim","history","withRouter","css","CarShow","sortOptionIndex","selectSortOption","number","carDetail1","carDetail2","total_cost","reverseNumberSign","mileage","hasFilterValues","filterValues","filterValue","filterFieldName","filterTitleToFieldName","selectedOptionsSet","has","minVal","maxVal","Number","MAX_SAFE_INTEGER","sortCarDetails","carDetailsAfterFilterAndSort","Menubar","AppBar","isBigScreen","Toolbar","aria-label","aria-controls","aria-haspopup","menuBtnOnClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","closeMenu","clipLoaderCss","HomePage","leftPanelRef","smooth","xl","isLoading","display","justifyContent","lendersJson","lenderProgramsJson","CarPage","goBack","location","carDetailsAvailable","href","AppClass","lenderTermsJson","Promise","all","fetch","then","responses","response","json","jsons","convertKmToMileage","car","mileageLowerCase","floor","parseFloat","basename","process","path","App","theme","useTheme","mdUp","useMediaQuery","breakpoints","up","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","StyledTableCell","withStyles","head","palette","primary","main","common","white","body","StyledTableRow","root","background","default","CarCalculation","CarCalculationClass","mileageToKms","addCurrencySymbol","abs","pv","rate","periods","payment","future","type","eval","pow","getLenderId","calculateProfitFirstInterest","filterInputs","lenderData","interests","createCalculationDetail","profit","selectedInterest","lenderTerms","allLenderNames","selectedLenderIndex","allTierNames","selectedTierIndex","advance","interest","term","foundLenderTerm","foundLenderProgram","lenderId","lender_id","rateMin","rate_min","rateMax","rate_max","carKms","lenderTerm","min_kms","max_kms","Payment","maxFront","termType","x_clean","clean","average","rough","round","maxProfit","financed","holdBack","hold_back","funded","tradeAllowance","tradePayOff","downPayment","tradeAcv","paidOut","userInputTax","Tax","netPaid","calculationDetailsColumnHeaders","calculationDetailsValues","selectInterestEvent","selectedInterests","filtersInputs","newCalculationDetailsValues","entries","isValidFilterInputs","calculationDetails","firstInterest","lenderIndex","newInterest","header","columnValues","columnValue","index","interestMenuItems","tables","lenderCalculationDetailsValues","createCell","userInputsFilterData","createCalculationDetails","renderWithOneTable","renderWithThreeTables"],"mappings":"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","file":"static/js/main.8b396dda.chunk.js","sourcesContent":["import React from 'react';\nimport {Checkbox} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport './ListFilter.css';\n\nclass ListFilter extends React.Component{\n    constructor(props) {\n        super(props);\n        let optionCheckedDict = {};\n\n        for(let option of this.props.options){\n            optionCheckedDict[option] = true;\n        }\n\n        this.state = {\n            'Select All': true,\n            ...optionCheckedDict\n        };\n\n        this.selectAll = this.selectAll.bind(this);\n        this.optionOnchange = this.optionOnchange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.init){\n            let newState = {...this.state};\n\n            let checkedAll = true;\n\n            for(let option of this.props.options){\n                let isChecked = this.props.init.includes(option);\n                newState[option] = isChecked;\n\n                if(!isChecked) {\n                    checkedAll = false;\n                }\n            }\n\n            newState['Select All'] = checkedAll;\n\n            this.setState(newState, this.props.onChange);\n        }\n    }\n\n    getTitle(){\n        return this.props.title;\n    }\n\n    getValues(){\n        let selectedOptions = [];\n\n        for (let option of this.props.options){\n            if (this.state[option]){\n                selectedOptions.push(option);\n            }\n        }\n\n        return {\"selectedOptions\":selectedOptions};\n    }\n\n    selectAll(event){\n        let selectAllCheckbox = event.target;\n        let selectedCheckboxState = selectAllCheckbox.checked;\n        let newState = {...this.state};\n\n        for(let option of this.props.options){\n            if (selectAllCheckbox.checked){\n                newState[option] = true;\n            }else {\n                newState[option] = false;\n            }\n        }\n\n        newState['Select All'] = selectedCheckboxState;\n        this.setState(newState, this.props.onChange);\n    }\n\n    optionOnchange(event, name){\n\n        let checkbox = event.target;\n        let newState = {...this.state};\n        newState[name] = checkbox.checked;\n\n        let selectAll = true;\n\n        for(let option of this.props.options){\n            if(!newState[option]){\n                selectAll = false;\n            }\n        }\n\n        newState['Select All'] = selectAll;\n\n        this.setState(newState, this.props.onChange);\n        console.log((checkbox.checked?'Check ':'Unchecked ') + name);\n    }\n\n    render(){\n        let sortedOptions = [...this.props.options];\n        sortedOptions.sort();\n\n        let manyOptions = sortedOptions.length > 10;\n\n        return (\n            <Grid container className={'item_wrapper ' + (manyOptions?'many_options':'')}>\n                <Grid item xs={12}>\n                    <Checkbox checked={this.state['Select All']} color={\"primary\"} onChange={this.selectAll} />All\n                </Grid>\n                {\n                    sortedOptions.map(item => (\n                        <Grid item xs={12}>\n                            <Checkbox checked={this.state[item]} color={\"primary\"}\n                                      onChange={(event) => this.optionOnchange(event, item)}/>\n                            {this.props.titleTransformFunc?this.props.titleTransformFunc(item):item}\n                            {this.props.displayCount?<span className={\"filter_item_count\"}>  ({this.props.counts[item]})</span>:null}\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default ListFilter;","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport debounce from \"lodash/debounce\";\nimport Slider from '@material-ui/core/Slider';\n\nclass RangeFilter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let min = \"\";\n        let max = \"\";\n\n        if (this.props.value_type == \"discrete\"){\n            min = Math.min(...this.props.values);\n            max = Math.max(...this.props.values);\n        } else if (this.props.value_type == \"continuous\"){\n            min = this.props.values[0];\n            max = this.props.values[1];\n        }\n\n        this.state = {\n            \"min\":min,\n            \"max\":max,\n            \"current_min\":min,\n            \"current_max\":max\n        }\n\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 1000);\n        this.sliderOnChange = this.sliderOnChange.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.init){\n            this.setState({\"current_min\":this.props.init[\"min\"], \"current_max\":this.props.init[\"max\"]});\n        }\n    }\n\n    textFieldOnChange(event, textFieldName){\n        let newState = {};\n\n        newState[textFieldName] = event.target.value;\n\n        this.setState(newState);\n        this.onChangeDebounced();\n    }\n\n    onChangeDebounced = () => {\n        this.props.onChange();\n    }\n\n    getValues(){\n        return {\"min\":this.state.current_min, \"max\":this.state.current_max};\n    }\n\n    getMinTitle(){\n        return this.props.minTitle == undefined?\"Min\":this.props.minTitle;\n    }\n\n    getMaxTitle(){\n        return this.props.maxTitle == undefined?\"Max\":this.props.maxTitle;\n    }\n\n    getToText(){\n        return this.props.toText == undefined?\"To\":this.props.toText;\n    }\n\n    sliderOnChange(event, values){\n        this.setState({current_min:values[0], current_max:values[1]});\n        this.onChangeDebounced();\n    }\n\n    render(){\n        return (\n            <Grid container>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"current_min\"]} label={this.getMinTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"current_min\")}/>\n                </Grid>\n                <Grid item xs={4} align={\"center\"}>\n                    {this.getToText()}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"current_max\"]} label={this.getMaxTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"current_max\")}/>\n                </Grid>\n                <Slider min={this.state.min} max={this.state.max} value={[this.state.current_min, this.state.current_max]} valueLabelDisplay=\"auto\" step={1} onChange={this.sliderOnChange}/>\n            </Grid>\n        )\n    }\n}\n\nexport default RangeFilter;","import React from 'react';\nimport ListFilter from \"./ListFilter\";\nimport RangeFilter from \"./RangeFilter\";\nimport {Collapse} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {filters:this.props.filters};\n\n        for(let filter of this.props.filters){\n            if (\"expand\" in filter) {\n                this.state[filter[\"title\"] + '_expand'] = filter[\"expand\"];\n            }else{\n                this.state[filter[\"title\"] + '_expand'] = true;\n            }\n        }\n\n        this.filterOnChange = this.filterOnChange.bind(this);\n        this.createFilter = this.createFilter.bind(this);\n        this.expandOrCollapse = this.expandOrCollapse.bind(this);\n    }\n\n    expandBtnOnClick(event, filterTitle) {\n        let stateKeyName = filterTitle + '_expand';\n        let newState = {};\n        newState[stateKeyName] = !this.state[stateKeyName];\n\n        this.setState(newState);\n    }\n\n    filterOnChange(event, filterTitle){\n        console.log(\"filterOnChange\");\n        let newState = {...this.state};\n\n        for(let filter of newState.filters){\n            let isDependentList = filter[\"type\"] == \"list\" && \"dependent_filter\" in filter && \"dependent_list\" in filter;\n\n            if (isDependentList){\n                let dependentFilter = filter[\"dependent_filter\"];\n                let dependentList = filter[\"dependent_list\"];\n\n                let selectedOptions = this.refsDict[dependentFilter].getValues()[\"selectedOptions\"];\n                let newOptions = new Set();\n\n                for(let selectedOption of selectedOptions){\n                    dependentList[selectedOption].forEach(newOptions.add, newOptions);\n                }\n\n                filter[\"options\"] = Array.from(newOptions);\n            }\n        }\n\n        this.setState(newState, this.props.onChange);\n    }\n\n    getFilterValues(){\n        let values = {};\n\n        for(let title in this.refsDict){\n            let filterType = this.state.filters.filter(filter => filter[\"title\"]===title)[0][\"type\"];\n            values[title] = {\n                \"type\":filterType,\n                ...this.refsDict[title].getValues()\n            }\n        }\n\n        return values;\n    }\n\n    expandOrCollapse(event, filterTitle){\n        let stateName = filterTitle + '_expand';\n        let newState = {};\n\n        newState[stateName] = !this.state[stateName];\n        this.setState(newState);\n    }\n\n    createFilter(filter, filterIndex){\n        let lastFilterIndex = this.state.filters.length - 1;\n        let filterType = filter[\"type\"];\n        let filterComponent = undefined;\n\n        if (filterType == \"list\"){\n            filterComponent = <ListFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>;\n        }else if (filterType == \"range\"){\n            filterComponent = <RangeFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>\n        }\n\n        return (\n            <React.Fragment>\n                <Grid item xs={12} className={\"filter\"}>\n                    <Grid container className={\"expandable\"} onClick={(event) => this.expandOrCollapse(event, filter[\"title\"])}>\n                        <Grid item xs={10}>\n                            <span className={'filter_title'}>{filter[\"title\"]}</span>\n                        </Grid>\n                        <Grid item xs={2} align='right'>\n                            {this.state[filter[\"title\"] + \"_expand\"]?(<ExpandLess/>):(<ExpandMore />)}\n                        </Grid>\n                    </Grid>\n                    <Collapse in={this.state[filter[\"title\"] + \"_expand\"]}>\n                        {filterComponent}\n                    </Collapse>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n\n    render(){\n        console.log('render');\n        console.log(this.state);\n        this.refsDict = {};\n\n        return (\n            <Grid container className={\"filter_main_content\"}>\n                {\n                    this.state.filters.map(this.createFilter)\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport { Paper } from '@material-ui/core';\n\nclass LenderInputs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    keyToTitle(key){\n        let result = key.replace('_',' ');\n\n        return result\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    render(){\n        return (\n        <Paper style={{padding:10}}>\n            <Grid container>\n                <Grid item xs={12} align={\"right\"}>\n                    <IconButton color=\"secondary\" onClick={this.props.handleDeleteBtnClick}>\n                        <Close />\n                    </IconButton>\n                </Grid>\n                {\n                    Object.keys(this.props.inputs).map(input =>\n                        <React.Fragment>\n                            <Grid item xs={6}>\n                            {this.keyToTitle(input)}\n                            </Grid>\n                            <Grid item xs={6}>\n                                {this.props.inputs[input]}\n                            </Grid>\n                        </React.Fragment>)\n                }\n        </Grid>\n        </Paper>);\n    }\n}\n\nexport default LenderInputs;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport LenderInputs from \"./LenderInputs\";\nimport './Lender.css';\n\nclass Lender extends React.Component {\n    beginningState(){\n        return {\n            selectedTier:'NONE',\n            tierMenuItems:[],\n            tierSelectDisabled:true,\n\n            selectedLender:'NONE',\n            lenderSelectDisabled:false,\n\n            currencyFields:{\n                \"Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Down Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Allowance\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Payoff\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trace a.c.v\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            percentageFields:{\n                \"Tax\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            isTextFieldsEnabled:false\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lenderMenuItems:[],\n            ...this.beginningState(),\n            lenderInputs:[]\n        }\n\n        this.selectLender = this.selectLender.bind(this);\n        this.selectTier = this.selectTier.bind(this);\n        this.addLender = this.addLender.bind(this);\n        this.reset = this.reset.bind(this);\n        this.deleteLenderInput = this.deleteLenderInput.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let lenderMenuItems = [];\n\n        lenderMenuItems.push(<MenuItem value={'NONE'}>Please select lender</MenuItem>);\n\n        for (let lenderName in nextProps.lenderToPrograms){\n            lenderMenuItems.push(<MenuItem value={lenderName}>{lenderName}</MenuItem>);\n        }\n\n        this.setState({lenderMenuItems:lenderMenuItems});\n    }\n\n    textboxOnChange(event, fieldLabel){\n        let newValue = event.target.value;\n        let isError = isNaN(newValue);\n        console.log(isError);\n\n        if (fieldLabel in this.state.currencyFields){\n            let newCurrencyFields = {...this.state.currencyFields};\n            newCurrencyFields[fieldLabel] =  {\n                value:newValue,\n                error:isError\n            }\n\n            this.setState({currencyFields:newCurrencyFields});\n        }else if (fieldLabel in this.state.percentageFields){\n            let newPercentageFields = {...this.state.percentageFields};\n            newPercentageFields[fieldLabel] = {\n                value:newValue,\n                error:isError\n            }\n            this.setState({percentageFields:newPercentageFields})\n        }\n    }\n\n    selectLender(event){\n        let selectLenderName = event.target.value;\n\n        let tierSelectDisabled = true;\n\n        if (selectLenderName != 'NONE'){\n            tierSelectDisabled = false;\n        }\n\n        let tierMenuItems = [];\n        tierMenuItems.push(<MenuItem value={'NONE'}>Please select tier</MenuItem>);\n\n        for(let tierName of this.props.lenderToPrograms[selectLenderName]) {\n            tierMenuItems.push(<MenuItem value={tierName}>{tierName}</MenuItem>);\n        }\n\n        this.setState({\n            selectedLender:selectLenderName,\n            selectedTier:'NONE',\n            tierSelectDisabled: tierSelectDisabled,\n            tierMenuItems:tierMenuItems\n        });\n    }\n\n    selectTier(event){\n        let selectIndex = event.target.value;\n\n        this.setState({\n            selectedTier : selectIndex,\n            isTextFieldsEnabled:true\n        })\n    }\n\n    hasAnyErrorsInLenderInput(){\n        let hasAnyErrors = false;\n\n        Object.keys(this.state.currencyFields).forEach((key) => {\n            if (this.state.currencyFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        Object.keys(this.state.percentageFields).forEach((key) => {\n            if (this.state.percentageFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        return hasAnyErrors;\n    }\n\n    addLender(event){\n        let lenderInput = {};\n        let hasAnyErrors = this.hasAnyErrorsInLenderInput();\n\n        if (this.state.selectedLender != 'NONE' && this.state.selectedTier != 'NONE' && !hasAnyErrors) {\n            lenderInput[\"lender\"] = this.state.selectedLender;\n            lenderInput[\"tier\"] = this.state.selectedTier;\n            lenderInput[\"payment\"] = this.state.currencyFields[\"Payment\"].value;\n            lenderInput[\"down payment\"] = this.state.currencyFields[\"Down Payment\"].value;\n            lenderInput[\"trade allowance\"] = this.state.currencyFields[\"Trade Allowance\"].value;\n            lenderInput[\"trade payoff\"] = this.state.currencyFields[\"Trade Payoff\"].value;\n            lenderInput[\"trade a.c.v\"] = this.state.currencyFields[\"Trace a.c.v\"].value;\n            lenderInput[\"tax\"] = this.state.percentageFields[\"Tax\"].value;\n\n            let newLenderInputs = this.state.lenderInputs;\n            newLenderInputs.push(lenderInput);\n\n            this.setState({lenderInputs: newLenderInputs});\n        }\n    }\n\n    reset(event){\n        this.setState({...this.beginningState()});\n    }\n\n    deleteLenderInput(event, lenderInputIndex){\n        let newLenderInputs = this.state.lenderInputs;\n\n        newLenderInputs.splice(lenderInputIndex, 1);\n\n        this.setState({lenderInputs:newLenderInputs});\n    }\n\n    render(){\n        return (\n          <Grid container className={\"lender_main_content padding10\"} spacing={2}>\n              <Grid item xs={12}>\n                  <Select onChange={this.selectLender} value={this.state.selectedLender} disabled={this.state.lenderSelectDisabled} style={{width:'100%'}}>\n                      {this.state.lenderMenuItems}\n                  </Select>\n              </Grid>\n              <Grid item xs={12}>\n                  <Select onChange={this.selectTier} value={this.state.selectedTier} disabled={this.state.tierSelectDisabled} style={{width:'100%'}}>\n                      {this.state.tierMenuItems}\n                  </Select>\n              </Grid>\n              {Object.keys(this.state.currencyFields).map(currencyFieldLabel => (\n                      <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                      label={currencyFieldLabel}\n                                                                                      variant=\"outlined\"\n                                                                                      onChange={(event) => this.textboxOnChange(event, currencyFieldLabel)}\n                                                                                      error = {this.state.currencyFields[currencyFieldLabel].error}\n                                                                                      helperText={this.state.currencyFields[currencyFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                      value={this.state.currencyFields[currencyFieldLabel].value}\n                                                                                      InputProps={{\n                                                                                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                                                                      }\n                                                                                      }\n                                                                                      size={\"small\"}\n                      /></Grid>\n                  )\n              )\n              }\n              {Object.keys(this.state.percentageFields).map(percentageFieldLabel => (\n                      <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                      label={percentageFieldLabel}\n                                                                                      variant=\"outlined\"\n                                                                                      onChange={(event) => this.textboxOnChange(event, percentageFieldLabel)}\n                                                                                      error = {this.state.percentageFields[percentageFieldLabel].error}\n                                                                                      helperText={this.state.percentageFields[percentageFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                      value={this.state.percentageFields[percentageFieldLabel].value}\n                                                                                      InputProps={{\n                                                                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                                                                                      }}\n                                                                                      size={\"small\"}\n                      /></Grid>\n                  )\n              )\n              }\n              <Grid item xs={12} style={{textAlign:\"center\"}}>\n                  <Button variant=\"contained\" color={\"primary\"} onClick={this.addLender}>Add</Button>\n                  <Button variant=\"contained\" color={\"secondary\"} onClick={this.reset} style={{marginLeft:10}}>Reset</Button>\n              </Grid>\n              {\n                  this.state.lenderInputs.map((lenderInput, lenderInputIndex) =>\n                      <Grid item xs={12}>\n                          <LenderInputs inputs={lenderInput} handleDeleteBtnClick={(event) => this.deleteLenderInput(lenderInputIndex)}/>\n                      </Grid>)\n              }\n          </Grid>\n        );\n    }\n}\n\nexport default Lender;","import React from 'react';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Filter from './Filter';\nimport './LeftPanel.css';\nimport Lender from './Lender';\n\nclass LeftPanel extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.filterRef = React.createRef();\n        const {filters, lenderToPrograms, carDetails} = this.parseProps(this.props);\n        console.log(this.props);\n        console.log(filters);\n\n        this.state = {\n            selectedTabIndex:0,\n            filters:filters,\n            lenderToPrograms:lenderToPrograms,\n            carDetails:carDetails\n        }\n    }\n\n    handleChange(event, newSelectedTabIndex){\n        this.setState({selectedTabIndex:newSelectedTabIndex});\n    }\n\n    convertStr(str){\n        let words = str.split(/(\\s+)/);\n\n        return words.map(word => {\n            let result = '';\n\n            if (word.length > 0){\n                result += word.charAt(0).toUpperCase();\n            }\n\n            if (word.length > 1){\n                result += word.substring(1).toLowerCase();\n            }\n\n            return result;\n        }).join(' ');\n    }\n\n    parseProps(props) {\n        let makes = new Set();\n        let makeToModelsDict = {};\n        let makeToCountDict = {};\n        let modelToCountDict = {};\n        let models = new Set();\n        let yearSet = new Set();\n\n        for (let i = 0; i < props.carDetails.length; i++) {\n            let carDetail = props.carDetails[i];\n            let make = carDetail[\"make\"];\n            let model = carDetail[\"model\"];\n            let year = carDetail[\"year\"];\n\n            makes.add(make);\n            models.add(model);\n            if (!isNaN(year)) {\n                yearSet.add(year);\n            }\n\n            if (!(make in makeToModelsDict)) {\n                makeToModelsDict[make] = new Set();\n            }\n\n            makeToModelsDict[make].add(model);\n\n            if(!(make in makeToCountDict)){\n                makeToCountDict[make] = 0;\n            }\n\n            makeToCountDict[make] = makeToCountDict[make] + 1;\n\n            if(!(model in modelToCountDict)){\n                modelToCountDict[model] = 0;\n            }\n\n            modelToCountDict[model] = modelToCountDict[model] + 1;\n        }\n\n        let yearRangeList = [];\n\n        // Create year range list\n        for (let year of yearSet) {\n            yearRangeList.push([year]);\n        }\n\n        let filters = [\n            {\n                \"title\": \"Make\",\n                \"type\": \"list\",\n                \"options\": Array.from(makes),\n                \"expand\": this.props.filtersExpanded,\n                \"displayCount\":true,\n                \"counts\": makeToCountDict,\n                \"titleTransformFunc\":this.convertStr\n            },\n            {\n                \"title\": \"Model\",\n                \"type\": \"list\",\n                \"dependent_filter\": \"Make\",\n                \"dependent_list\": makeToModelsDict,\n                \"options\": Array.from(models),\n                \"expand\": this.props.filtersExpanded,\n                \"displayCount\":true,\n                \"counts\":modelToCountDict,\n                \"titleTransformFunc\":this.convertStr\n            },\n            {\n                \"title\": \"Year\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"discrete\",\n                \"values\":yearRangeList,\n                \"expand\": this.props.filtersExpanded\n            },\n            {\n                \"title\": \"Mileage\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"continuous\",\n                \"values\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"mileage\"])), 10),\n                \"expand\": this.props.filtersExpanded\n            },\n            {\n                \"title\": \"Total cost\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"value_type\":\"continuous\",\n                \"values\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"total_cost\"])), 10),\n                \"expand\": this.props.filtersExpanded\n            }\n        ];\n\n        if(this.props.init){\n            for(let filterTitle in this.props.init){\n                for(let filter of filters){\n                    if (filter[\"title\"] == filterTitle){\n                        filter[\"init\"] = this.props.init[filterTitle];\n                        break;\n                    }\n                }\n            }\n        }\n\n        let lenderToPrograms = {};\n        let lenderIdToLenderName = {};\n        props.lenders.forEach(lender => {\n            lenderIdToLenderName[lender[\"id\"]] = lender[\"name\"];\n        });\n\n        props.lenderPrograms.forEach(lenderProgram => {\n            let lenderName = lenderIdToLenderName[lenderProgram[\"lender_id\"]];\n\n            if (!(lenderName in lenderToPrograms)) {\n                lenderToPrograms[lenderName] = [];\n            }\n\n            lenderToPrograms[lenderName].push(lenderProgram[\"name\"]);\n        });\n\n        return {filters: filters, lenderToPrograms: lenderToPrograms, carDetails: props.carDetails};\n    }\n\n    createRangeListContinuousValue(values, partsCount){\n        let min = Math.min(...values);\n        let max = Math.max(...values);\n        let x = (max - min)/partsCount;\n\n        return [min, max];\n    }\n\n    getFilterValues(){\n        return this.filterRef.current.getFilterValues();\n    }\n\n    render(){\n        return (\n        <React.Fragment>\n            <Tabs value={this.state.selectedTabIndex} onChange={this.handleChange}>\n                <Tab label={\"Filter\"} className={this.state.selectedTabIndex==0?\"tab_selected\":\"tab_deselected\"}/>\n                <Tab label={\"Lender\"} className={this.state.selectedTabIndex==1?\"tab_selected\":\"tab_deselected\"} />\n            </Tabs>\n            <div className={this.state.selectedTabIndex==0?'':'hide'}>\n                <Filter ref={this.filterRef} filters={this.state.filters}\n                        onChange={this.props.filterOnChange}\n                />\n            </div>\n            <div className={this.state.selectedTabIndex==1?'':'hide'}>\n                <Lender lenderToPrograms={this.state.lenderToPrograms} />\n            </div>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default LeftPanel;","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default class CarDescription extends React.Component {\n    getCarTitle() {\n        let year = this.getRowValue('YEAR');\n        let make = this.getRowValue('MAKE');\n        let model = this.getRowValue('MODEL');\n        let trim = this.getRowValue('TRIM');\n\n        return `${year} ${make} ${model} ${trim}`;\n    }\n\n    getRowValue(rowName){\n        let row = this.getRowWithName(rowName);\n\n        if (row != null){\n            return row.value;\n        }\n\n        return '';\n    }\n\n    getRowWithName(rowName){\n        let matches = this.props.details.filter(row => (row.name == rowName));\n\n        if (matches.length > 0){\n            return matches[0];\n        }\n\n        return null;\n    }\n    render() {\n        return (\n            <Paper style={{padding: \"20px\", backgroundColor: \"rgb(247, 248, 248)\"}}>\n                <Table>\n                    <TableRow>\n                        <TableCell colSpan={2} style={{textAlign: \"center\"}}><b\n                            style={{fontSize: \"1.2rem\"}}>{this.getCarTitle()}</b></TableCell>\n                    </TableRow>\n                    {this.props.details.map(row => (\n                        <TableRow>\n                            <TableCell style={{padding: \"0px\"}}>\n                                <b>{row.name}</b>\n                            </TableCell>\n                            <TableCell style={{padding: \"0px\"}}>\n                                {row.value}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </Table>\n            </Paper>\n        )\n    }\n}","import * as React from \"react\";\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './CarImagesGallery.css';\n\nexport default class CarImagesGallery extends React.Component{\n    render(){\n        return (\n            <ImageGallery items={this.props.images} showPlayButton={false} showFullscreenButton={false} showThumbnails={false}/>\n        );\n    }\n}","import * as React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CarDescription from \"./CarDescription\";\nimport CarCalculation from \"./CarCalculation\";\nimport CarImagesGallery from \"./CarImagesGallery\";\nimport CarShowElementButtons from \"./CarShowElementButtons\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElement extends React.Component{\n    excludeCarDetailFields(fieldName){\n        let excludedFields = ['id', 'images', 'img_url', 'x_clean', 'clean', 'average', 'rough', 'series'];\n\n        return excludedFields.includes(fieldName);\n    }\n\n    convertFieldNameToLabel(fieldName){\n        let convertDict = {\n            'total_cost': 'TOTAL COST'\n        }\n\n        if (fieldName in convertDict){\n            return convertDict[fieldName];\n        }\n\n        return fieldName\n    }\n\n    isCurrencyField(fieldName){\n        return ['total_cost'].includes(fieldName);\n    }\n    convertToCarDetails(carJson){\n        let result = [];\n        let currencySymbol = '$';\n\n        for(let key in carJson){\n            if (!this.excludeCarDetailFields(key)){\n                let name = this.convertFieldNameToLabel(key).toUpperCase();\n                let value = carJson[key];\n\n                if (this.isCurrencyField(key)){\n                    value = currencySymbol + value;\n                }\n\n                result.push({\n                    name: name,\n                    value: value\n                });\n            }\n        }\n\n        return result;\n    }\n\n    convertToImages(carDetail){\n        console.log(carDetail);\n\n        let images = [];\n        for(let image of carDetail[\"images\"]){\n            console.log(image);\n            images.push({original:image[\"src\"]});\n        }\n\n        console.log(images);\n        return images;\n    }\n\n    render() {\n        console.log(this.props.details);\n\n        return (\n           <Card style={{width:\"100%\"}}>\n               <CardContent>\n                   <Grid container spacing={2}>\n                       <Grid item xs={12} lg={7}>\n                            <CarImagesGallery images={this.convertToImages(this.props.details)}/>\n                       </Grid>\n                       <Grid item xs={12} lg={5}>\n                           <CarDescription details={this.convertToCarDetails(this.props.details)}/>\n                       </Grid>\n                       {/*<Grid item xs={12}>*/}\n                       {/*    <CarCalculation filtersInputs={this.props.filtersInputs} lenderData={this.props.lenderData} details={this.props.details}/>*/}\n                       {/*</Grid>*/}\n                       {/*<Grid item xs={12}>*/}\n                       {/*    <CarShowElementButtons />*/}\n                       {/*</Grid>*/}\n                   </Grid>\n               </CardContent>\n           </Card>\n        )\n    }\n}","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElementButtons extends React.Component{\n    render(){\n        return <React.Fragment>\n            <Grid container spacing={1}>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Save</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Pictures</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Breakdown</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Send</Button>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    }\n}","var domain = 'https://lender-filter-backend-test.herokuapp.com';\n\nfunction fetchCars(){\n    return fetch(`${domain}/cars/`);\n}\n\nfunction fetchLenders(){\n    return fetch(`${domain}/lenders/`);\n}\n\nfunction fetchLenderPrograms(){\n    return fetch(`${domain}/lenders/programs/`);\n}\n\nfunction fetchLenderTerms(){\n    return fetch(`${domain}/lenders/terms/`)\n}\n\n\nexport {fetchCars, fetchLenders, fetchLenderPrograms, fetchLenderTerms};","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from \"@material-ui/core/Grid\";\nimport ImageGallery from \"react-image-gallery\";\nimport { withRouter } from \"react-router\";\n\nclass Car extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.cardOnClick = this.cardOnClick.bind(this);\n    }\n\n    getCarTitle(){\n        let carYear = this.props.details['year'];\n        let carMake = this.props.details['make'];\n        let carModel = this.props.details['model'];\n        let carTrim = this.props.details['trim'];\n\n        return `${carYear} ${carMake} ${carModel} ${carTrim}`;\n    }\n\n    cardOnClick(){\n        const {history} = this.props;\n\n        history.push('/car', {carDetails:this.props.details})\n    }\n\n    render(){\n        return (\n            <Card className={\"car\"} onClick={this.cardOnClick}>\n                <CardContent>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <ImageGallery items={[{original:\"https://drive.google.com/uc?export=view&id=1PNPS_e8i8a_m2Owox2ncuuFWNotAbYh6\"}]} showPlayButton={false} showFullscreenButton={false} showThumbnails={false}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span className={\"car_title\"}>{this.getCarTitle()}</span>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <span className={\"car_total_cost\"}>${this.props.details['total_cost']}</span>\n                        </Grid>\n                        <Grid item xs={6} align={\"right\"}>\n                            <span className={\"car_mileage\"}>{this.props.details['mileage']}</span>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default withRouter(Car);","import * as React from \"react\";\nimport CarShowElement from \"./CarShowElement\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {styled, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {css} from \"@emotion/core\";\nimport {ClipLoader} from \"react-spinners\";\nimport './CarShow.css';\nimport {fetchCars} from \"./Api\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {calculateProfitFirstInterest} from \"./CarCalculation\";\nimport Car from './Car.js';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass CarShow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sortOptionIndex:-1\n        }\n\n        this.selectSortOption = this.selectSortOption.bind(this);\n    }\n\n    filterTitleToFieldName(filterTitle){\n        let dict = {\n            \"Make\":\"make\",\n            \"Model\":\"model\",\n            \"Year\":\"year\",\n            \"Total cost\":\"total_cost\",\n            \"Mileage\":\"mileage\"\n        }\n\n        return dict[filterTitle];\n    }\n\n    reverseNumberSign(number){\n        return -number;\n    }\n\n    sortCarDetails(carDetails, sortOptionIndex){\n        switch(sortOptionIndex){\n            case 1:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost));\n                break;\n            case 2:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost)));\n                break;\n            case 3:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage));\n                break;\n            case 4:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage)));\n                break;\n            case 5:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.year) - parseInt(carDetail2.year)));\n                break;\n            case 6:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.year) - parseInt(carDetail2.year));\n                break;\n        }\n\n        return carDetails;\n    }\n\n    carDetails(){\n        let filterValuesLength = Object.keys(this.props.filterValues).length;\n        let hasFilterValues = filterValuesLength > 0;\n        let carDetails = [...this.props.carDetails];\n\n        if (hasFilterValues) {\n\n\n            for(let filterTitle in this.props.filterValues){\n                let filterValue = this.props.filterValues[filterTitle];\n                let filterType = filterValue[\"type\"];\n                let filterFieldName = this.filterTitleToFieldName(filterTitle);\n\n                if (filterType == \"list\"){\n                    let selectedOptions = filterValue[\"selectedOptions\"];\n                    let selectedOptionsSet = new Set(selectedOptions);\n\n                    carDetails = carDetails.filter(carDetail => selectedOptionsSet.has(carDetail[filterFieldName]));\n                }else if(filterType == \"range\"){\n                    let minVal = filterValue[\"min\"];\n                    let maxVal = filterValue[\"max\"];\n\n                    if (minVal !== \"\" || maxVal != \"\") {\n                        if (minVal == \"\") {\n                            minVal = 0;\n                        }\n\n                        if (maxVal == \"\") {\n                            maxVal = Number.MAX_SAFE_INTEGER;\n                        }\n\n                        carDetails = carDetails.filter(carDetail => carDetail[filterFieldName] >= minVal && carDetail[filterFieldName] <= maxVal);\n                    }\n                }\n            }\n\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }else{\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }\n    }\n\n    selectSortOption(event){\n        let sortOptionIndex = event.target.value;\n\n        this.setState({sortOptionIndex:sortOptionIndex});\n    }\n\n    render() {\n        let carDetailsAfterFilterAndSort = this.carDetails();\n\n        return (<Grid container spacing={2} className={\"carshow\"}>\n            <Grid item xs={6}>\n                <span className={\"matches\"}>{carDetailsAfterFilterAndSort.length + \" matches\"}</span>\n            </Grid>\n            <Grid item xs={6} align={\"right\"}>\n                <span className={\"sortBy\"}>Sort by </span>\n                <Select value={this.state.sortOptionIndex} onChange={this.selectSortOption}>\n                    <MenuItem value={1}>Lowest Price</MenuItem>\n                    <MenuItem value={2}>Highest Price</MenuItem>\n                    <MenuItem value={3}>Lowest Mileage</MenuItem>\n                    <MenuItem value={4}>Highest Mileage</MenuItem>\n                    <MenuItem value={5}>Newest Year</MenuItem>\n                    <MenuItem value={6}>Oldest Year</MenuItem>\n                </Select>\n            </Grid>\n            {carDetailsAfterFilterAndSort.map(carDetail => (\n               <Grid item xs={12} md={4} lg={3}>\n                   <Car details={carDetail}/>\n               </Grid>\n            ))}\n        </Grid>);\n    }\n}\n\nexport default CarShow;","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Menubar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        return (\n            <>\n                        <AppBar position=\"static\">\n                            {this.props.isBigScreen ? (\n                                <React.Fragment>\n                                    <Tabs>\n                                        <Tab label=\"Home\"/>\n                                        <Tab label=\"Rate Sheet\" disabled/>\n                                        <Tab label=\"Quick Quote\" disabled/>\n                                        <Tab label=\"Lender Assist\" disabled/>\n                                    </Tabs>\n                                </React.Fragment>) : (\n                                <Toolbar>\n                                    <IconButton\n                                        aria-label=\"menu\"\n                                        aria-controls=\"menu-appbar\"\n                                        aria-haspopup=\"true\"\n                                        style={{\"color\":\"white\"}}\n                                        onClick={this.menuBtnOnClick}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"menu-appbar\"\n                                        anchorEl={this.state.anchorEl}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        open={Boolean(this.state.anchorEl)}\n                                        onClose={this.closeMenu}\n                                    >\n                                        <MenuItem>HOME</MenuItem>\n                                        <MenuItem>RATE SHEET</MenuItem>\n                                        <MenuItem>QUICK QUOTE</MenuItem>\n                                        <MenuItem>LENDER ASSIST</MenuItem>\n                                    </Menu>\n                                </Toolbar>\n                            )\n                            }\n                        </AppBar>\n            </>\n        )\n    }\n}\n\nexport default Menubar;","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LeftPanel from \"./LeftPanel\";\nimport {ClipLoader} from \"react-spinners\";\nimport CarShow from \"./CarShow\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport {css} from \"@emotion/core\";\nimport Menubar from \"./Menubar\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass HomePage extends React.Component{\n    constructor() {\n        super();\n\n        this.leftPanelRef = React.createRef();\n        this.state = {\n            filterValues: {}\n        }\n        this.filterOnChange = this.filterOnChange.bind(this);\n    }\n\n    filterOnChange(){\n        this.setState({filterValues:this.leftPanelRef.current.getFilterValues()});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ScrollToTop smooth />\n                <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                    <Grid item xl={1} xs={0} />\n                    <Grid item xl={10} xs={12}>\n                        <Menubar isBigScreen={this.props.isBigScreen}/>\n                    </Grid>\n                    <Grid item xl={1} xs={0}/>\n                    <Grid item sm={1} xs={0}/>\n                    {this.props.isLoading?(\n                        <Grid item xs={12}>\n                            <div style={{display:'flex', justifyContent:'center'}}><ClipLoader css={clipLoaderCss}/></div>\n                        </Grid>\n                    ):(\n                        <>\n                        <Grid item md={2} sm={3} xs={12}>\n                            <LeftPanel filtersExpanded={this.props.isBigScreen} ref={this.leftPanelRef} carDetails={this.props.carJson} lenders={this.props.lendersJson} lenderPrograms={this.props.lenderProgramsJson} filterOnChange={this.filterOnChange}/>\n                        </Grid>\n                        <Grid item md={8} sm={7} xs={12}>\n                            <CarShow carDetails={this.props.carJson} filterValues={this.state.filterValues}/>\n                        </Grid>\n                        </>\n                    )}\n                    <Grid item sm={1} xs={0}/>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Menubar from \"./Menubar\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport CarShowElement from \"./CarShowElement\";\n\nclass CarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.goBack = this.goBack.bind(this);\n    }\n\n    goBack(){\n        const {history} = this.props;\n\n        history.push('/');\n    }\n\n    render() {\n        const {history, location} = this.props;\n        let carDetailsAvailable = location.state && location.state.carDetails;\n\n        return (\n            <>\n                <ScrollToTop smooth />\n                <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                    <Grid item xl={1} xs={0} />\n                    <Grid item xl={10} xs={12}>\n                        <Menubar isBigScreen={this.props.isBigScreen}/>\n                    </Grid>\n                    <Grid item xl={1} xs={0}/>\n                    <Grid item xl={1} xs={0} />\n                    <Grid item xl={10} xs={12}>\n                        <Grid container item>\n                            <Grid item xs={12}>\n                                <BsArrowLeft /> <a href={\"#\"} onClick={this.goBack}>Search Results</a>\n                            </Grid>\n                        </Grid>\n                        {carDetailsAvailable?<CarShowElement details={location.state.carDetails}/>:'Not found'}\n                    </Grid>\n                    <Grid item xl={1} xs={0}/>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default withRouter(CarPage);","import React from 'react';\nimport './App.css';\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport \"react-scroll-to-top/lib/index.css\";\nimport HomePage from \"./HomePage\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CarPage from \"./CarPage\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\n\nconst App = (props) => {\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <AppClass isBigScreen={mdUp}/>\n}\n\n\nclass AppClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            carJson:[],\n            lendersJson:[],\n            lenderTermsJson:[],\n            lenderProgramsJson:[],\n            isLoading: true\n        }\n\n        Promise.all([fetchCars(), fetchLenders(), fetchLenderTerms(), fetchLenderPrograms()]).then(responses => Promise.all(responses.map(response => response.json()))).then(jsons => {\n            let carJson = jsons[0];\n            carJson = this.convertKmToMileage(carJson);\n\n            let lendersJson = jsons[1];\n            let lenderTermsJson = jsons[2];\n            let lenderProgramsJson = jsons[3];\n\n            this.setState({carJson:carJson, lendersJson:lendersJson, lenderTermsJson:lenderTermsJson, lenderProgramsJson:lenderProgramsJson, isLoading:false});\n        });\n    }\n\n    convertKmToMileage(carJson){\n        return carJson.map(car => {\n            let mileageLowerCase = car[\"mileage\"].toLowerCase();\n\n            if(mileageLowerCase.includes('km')){\n                car[\"mileage\"] = 0.621371 * Math.floor(parseFloat(mileageLowerCase.replace(\"km\", \"\")));\n            }\n\n            return car;\n        });\n    }\n\n    render(){\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path=\"/car\">\n                        <CarPage isBigScreen={this.props.isBigScreen} />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage isBigScreen={this.props.isBigScreen} {...this.state}/>\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst CarCalculation = (props)=>{\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <CarCalculationClass isBigScreen={mdUp} {...props}/>\n}\n\nfunction mileageToKms(mileage){\n    return mileage * 1.60934;\n}\n\n\n\nfunction addCurrencySymbol(value){\n    if (value < 0){\n        return `-$${Math.abs(value)}`\n    }else{\n        return `$${value}`\n    }\n}\n\nfunction pv(rate, periods, payment, future, type) {\n    // Initialize type\n    var type = (typeof type === 'undefined') ? 0 : type;\n\n    // Evaluate rate and periods (TODO: replace with secure expression evaluator)\n    rate = eval(rate);\n    periods = eval(periods);\n\n    // Return present value\n    if (rate === 0) {\n        return - payment * periods - future;\n    } else {\n        return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 +rate * type) - future) / Math.pow(1 + rate, periods);\n    }\n}\n\nfunction getLenderId(lenderName, lenders){\n    for(let i = 0; i < lenders.length; i++){\n        if (lenderName == lenders[i].name)\n            return lenders[i].id;\n    }\n\n    return null;\n}\n\nexport function calculateProfitFirstInterest(filterInputs, lenderData, carDetails){\n    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, carDetails);\n    let interestColumnIndex = 3;\n    let profitColumnIndex = 8;\n    let interests = calculationDetails[interestColumnIndex].split(',');\n\n    if (interests.length > 0) {\n        // Select first interest as default\n        let firstInterest = interests[0];\n\n        let calculationDetailsForFirstInterest = createCalculationDetail(firstInterest, filterInputs, lenderData, carDetails);\n        let profit = calculationDetailsForFirstInterest[profitColumnIndex];\n\n        if (profit != 'NOT_FOUND')\n            return profit;\n    }\n\n    return null;\n}\n\nfunction createCalculationDetail(selectedInterest, filterInputs, lenderData, carDetails){\n    console.log('createCalculationDetail()');\n    console.log(selectedInterest);\n    console.log(filterInputs);\n    console.log(lenderData);\n    console.log(carDetails);\n\n    let lenders = lenderData[0];\n    let lenderPrograms = lenderData[1];\n    let lenderTerms = lenderData[2];\n\n    let lenderName = filterInputs.allLenderNames[filterInputs.selectedLenderIndex - 1];\n    let tierName = filterInputs.allTierNames[filterInputs.selectedTierIndex - 1];\n    console.log('lenderName = ' + lenderName);\n    console.log('tierName = ' + tierName);\n\n    // Advance\n    let advance = 'NOT_FOUND';\n    let interest = 'NOT_FOUND';\n    let term = 'NOT_FOUND';\n    let foundLenderTerm = null;\n    let foundLenderProgram = null;\n    let lenderId = getLenderId(lenderName, lenders);\n    console.log('lenderId = ' + lenderId);\n\n    if(lenderId != null){\n        for(let lenderProgram of lenderPrograms){\n            if (lenderProgram.lender_id == lenderId && lenderProgram.name == tierName){\n                foundLenderProgram = lenderProgram;\n\n                // Advance\n                if(!isNaN(lenderProgram.advance)){\n                    advance = parseFloat(lenderProgram.advance);\n                }\n\n                // Interest\n                let rateMin = parseFloat(lenderProgram.rate_min);\n                let rateMax = parseFloat(lenderProgram.rate_max);\n                interest = '';\n\n                for(let rate = rateMin; rate < rateMax; rate+=1){\n                    interest += rate + ',';\n                }\n\n                interest += rateMax;\n\n                break;\n            }\n        }\n\n        let carKms = mileageToKms(parseFloat(carDetails.mileage));\n        console.log('carKms = ' + carKms);\n\n        for(let lenderTerm of lenderTerms){\n            if (lenderTerm.lender_id == lenderId && lenderTerm.min_kms <= carKms && lenderTerm.max_kms >= carKms && lenderTerm.year == parseInt(carDetails.year)){\n                // Term\n                term = lenderTerm.term;\n                foundLenderTerm = lenderTerm;\n                break;\n            }\n        }\n    }\n\n    console.log('advance = ' + advance);\n    console.log('interest = ' + interest);\n    console.log('term = ' + term);\n\n    let payment = parseFloat(filterInputs.currencyFields.Payment.value);\n    let back = '0';\n\n    // Calculate max front\n    let maxFront = 'NOT_FOUND';\n\n    if (foundLenderTerm !=null && advance != \"NOT_FOUND\"){\n        let termType = foundLenderTerm.type.replace(/\\s/g, '');\n        console.log('termType = ' + termType);\n\n        switch(termType.toLowerCase()){\n            case 'x-clean':\n                maxFront = carDetails.x_clean * advance - carDetails.total_cost;\n                break;\n            case 'clean':\n                maxFront = carDetails.clean  * advance - carDetails.total_cost;\n                break;\n            case 'average':\n                maxFront = carDetails.average  * advance - carDetails.total_cost;\n                break;\n            case 'rough':\n                maxFront = carDetails.rough  * advance - carDetails.total_cost;\n                break;\n        }\n\n        maxFront = Math.round(maxFront);\n    }\n\n    console.log('maxFront = ' + maxFront);\n\n    // Calculate max profit\n    let maxProfit = 'NOT_FOUND';\n\n    if (selectedInterest != -1 && term!='NOT_FOUND') {\n        let discount = 0;\n        let tax = 0;\n        let financed = pv((selectedInterest / 100 + discount + tax) / 12, term, -payment, 0);\n        let holdBack = foundLenderProgram.hold_back;\n        let funded = financed * (1 - holdBack);\n\n        console.log('financed = ' + financed);\n        console.log('holdBack = ' + holdBack);\n        console.log('funded = ' + funded);\n\n        let lender = 0;\n        let ppsa = 0;\n\n        let tradeAllowance = 0;\n        if (filterInputs.currencyFields[\"Trade Allowance\"].value != '' && !isNaN(filterInputs.currencyFields[\"Trade Allowance\"].value)) {\n            tradeAllowance = parseFloat(filterInputs.currencyFields[\"Trade Allowance\"].value);\n        }\n\n        let tradePayOff = 0;\n        if (filterInputs.currencyFields[\"Trade Payoff\"].value != '' && !isNaN(filterInputs.currencyFields[\"Trade Payoff\"].value)) {\n            tradePayOff = parseFloat(filterInputs.currencyFields[\"Trade Payoff\"].value)\n        }\n\n        let downPayment = 0;\n        if (filterInputs.currencyFields[\"Down Payment\"].value != '' && !isNaN(filterInputs.currencyFields[\"Down Payment\"].value)) {\n            downPayment = parseFloat(filterInputs.currencyFields[\"Down Payment\"].value);\n        }\n\n        let tradeAcv = 0;\n        if (filterInputs.currencyFields[\"Trace a.c.v\"].value != '' && !isNaN(filterInputs.currencyFields[\"Trace a.c.v\"].value)) {\n            tradeAcv = parseFloat(filterInputs.currencyFields[\"Trace a.c.v\"].value)\n        }\n\n        console.log('tradeAllowance = ' + tradeAllowance);\n        console.log('tradePayOff = ' + tradePayOff);\n        console.log('downPayment = ' + downPayment);\n        console.log('tradeAcv = ' + tradeAcv);\n\n        let paidOut = funded - lender - ppsa + tradeAllowance - tradePayOff + downPayment;\n        console.log('paidOut = ' + paidOut);\n\n        let userInputTax = 0;\n\n        if (filterInputs.percentageFields.Tax.value != '' && !isNaN(filterInputs.percentageFields.Tax.value)) {\n            console.log(filterInputs.percentageFields.Tax.value);\n            userInputTax = parseFloat(filterInputs.percentageFields.Tax.value) / 100;\n        }\n\n        console.log('userInputTax = ' + userInputTax);\n\n        let netPaid = paidOut*(1-userInputTax) + tradeAcv;\n        console.log('netPaid = ' + netPaid);\n\n        if (netPaid - carDetails.total_cost < maxFront){\n            maxProfit = netPaid - carDetails.total_cost;\n        }else {\n            maxProfit = maxFront;\n        }\n\n        maxProfit = Math.round(maxProfit);\n    }\n\n    console.log('maxProfit = ' + maxProfit);\n\n    if (maxFront != 'NOT_FOUND'){\n        maxFront = addCurrencySymbol(maxFront);\n    }\n\n    if (maxProfit != 'NOT_FOUND'){\n        maxProfit = addCurrencySymbol(maxProfit);\n    }\n\n    console.log('End createCalculationDetail()');\n    return [lenderName, tierName, (advance * 100) + '%', interest, term, '$' + payment, back, maxFront, maxProfit];\n}\n\nclass CarCalculationClass extends React.Component{\n    constructor() {\n        super();\n\n        this.calculationDetailsColumnHeaders =[\n            \"Lender\",\n            \"Tier\",\n            \"Advance\",\n            \"Interest\",\n            \"Term\",\n            \"Payment\",\n            \"Back\",\n            \"Front\",\n            \"Profit\"\n        ];\n\n        this.state = {\n            calculationDetailsValues:[],\n            interests:[-1,-1,-1]\n        }\n\n        this.selectInterestEvent = this.selectInterestEvent.bind(this);\n    }\n\n    createCalculationDetails(selectedInterests, filtersInputs, lenderData, details){\n        let newCalculationDetailsValues = [];\n\n        for(let [i, filterInputs] of filtersInputs.entries()){\n            if(this.isValidFilterInputs(filterInputs)) {\n                if (selectedInterests[i] == -1){\n                    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, details);\n                    let interestColumnIndex = 3;\n                    let interests = calculationDetails[interestColumnIndex].split(',');\n\n                    if (interests.length > 0) {\n                        // Select first interest as default\n                        let firstInterest = interests[0];\n                        this.state.interests[i] = firstInterest;\n\n                        newCalculationDetailsValues.push(createCalculationDetail(firstInterest, filterInputs, lenderData, details));\n                    }else{\n                        newCalculationDetailsValues.push(calculationDetails);\n                    }\n                }\n                else{\n                    newCalculationDetailsValues.push(createCalculationDetail(selectedInterests[i], filterInputs, lenderData, details));\n                }\n            }\n        }\n\n        return newCalculationDetailsValues;\n    }\n\n    isValidFilterInputs(filterInputs){\n        return filterInputs.selectedLenderIndex != 0 && filterInputs.selectedTierIndex != 0;\n    }\n\n    selectInterestEvent(event, lenderIndex){\n        let newInterest = event.target.value;\n        let interests = this.state.interests;\n        interests[lenderIndex] = newInterest;\n\n        this.setState({interests:interests});\n    }\n\n    renderWithOneTable(calculationDetailsValues){\n        return (\n            <React.Fragment>\n                <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                    <Table>\n                        <TableHead>\n                                <StyledTableRow>\n                                {this.calculationDetailsColumnHeaders.map(header => (\n                                    <StyledTableCell>{header}</StyledTableCell>\n                                ))}\n                                </StyledTableRow>\n                        </TableHead>\n                        {\n                            calculationDetailsValues.map((columnValues, lenderIndex) =>(\n                                <StyledTableRow>\n                                    {\n                                        columnValues.map((columnValue, index) => {\n                                            let interestColumnIndex = 3;\n\n                                            if (index == interestColumnIndex){\n                                                let interestMenuItems = [];\n\n                                                columnValue.split(',').forEach((interest, index) => {\n                                                    interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n                                                });\n\n                                                return (\n                                                    <StyledTableCell>\n                                                        <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                                                            {interestMenuItems}\n                                                        </Select>\n                                                    </StyledTableCell>\n                                                )\n                                            }\n                                            else\n                                            return (\n                                                <StyledTableCell>\n                                                    {columnValue}\n                                                </StyledTableCell>\n                                            )\n                                        })\n                                    }\n                                </StyledTableRow>\n                            ))\n                        }\n                    </Table>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n    createCell(value, index, lenderIndex){\n        let interestColumnIndex = 3;\n\n        if (index == interestColumnIndex){\n            let interestMenuItems = [];\n\n            value.split(',').forEach((interest, index) => {\n                interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n            });\n\n            return (\n                    <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                        {interestMenuItems}\n                    </Select>\n            )\n        }\n        else\n            return <React.Fragment>\n                {value}\n            </React.Fragment>\n    }\n\n    renderWithThreeTables(calculationDetailsValues){\n        let tables = [];\n\n        for(let [lenderIndex, lenderCalculationDetailsValues] of calculationDetailsValues.entries()){\n            tables.push(\n                <Grid item xs={12}>\n                    <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                        <Table>\n                            <TableHead>\n                                <StyledTableRow>\n                                    <StyledTableCell>Name</StyledTableCell>\n                                    <StyledTableCell>Value</StyledTableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {\n                                lenderCalculationDetailsValues.map((row, index) => (\n                                    <StyledTableRow>\n                                        <StyledTableCell>{this.calculationDetailsColumnHeaders[index]}</StyledTableCell>\n                                        <StyledTableCell>{this.createCell(row, index, lenderIndex)}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))\n                            }\n                        </Table>\n                    </Paper>\n                </Grid>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={4}>\n                    {tables}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n\n\n    render(){\n        let userInputsFilterData = this.props.filtersInputs != undefined && this.props.filtersInputs.length > 0;\n        let calculationDetailsValues = this.createCalculationDetails(this.state.interests, this.props.filtersInputs, this.props.lenderData, this.props.details);\n\n        if (userInputsFilterData){\n            if (this.props.isBigScreen){\n                return this.renderWithOneTable(calculationDetailsValues);\n            }else{\n                return this.renderWithThreeTables(calculationDetailsValues);\n            }\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default CarCalculation;"],"sourceRoot":""}