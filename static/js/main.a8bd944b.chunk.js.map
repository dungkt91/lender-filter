{"version":3,"sources":["ListFilter.js","RangeFilter.js","Filter.js","LenderInputs.js","Lender.js","LeftPanel.js","CarDescription.js","CarImagesGallery.js","CarShowElement.js","CarShowElementButtons.js","Api.js","Car.js","CarShow.js","Menubar.js","HomePage.js","CarPage.js","App.js","serviceWorker.js","index.js","CarCalculation.js"],"names":["ListFilter","props","optionCheckedDict","options","state","selectAll","bind","optionOnchange","this","title","selectedOptions","option","push","nextProps","length","newState","setState","event","selectAllCheckbox","target","selectedCheckboxState","checked","onChange","name","checkbox","console","log","sortedOptions","sort","manyOptions","Grid","container","item","xs","Checkbox","color","map","React","Component","RangeFilter","onChangeDebounced","debounce","selectRange","textFieldName","value","min","max","undefined","minTitle","maxTitle","toText","TextField","label","getMinTitle","variant","size","textFieldOnChange","align","getToText","getMaxTitle","rangeList","range","href","onClick","Filter","filters","filterOnChange","createFilter","expandOrCollapse","filterTitle","stateKeyName","filter","dependentFilter","dependentList","refsDict","getValues","newOptions","Set","forEach","add","Array","from","values","filterType","stateName","filterIndex","filterComponent","ref","curFilter","Fragment","className","Collapse","in","LenderInputs","key","replace","toLowerCase","split","word","charAt","toUpperCase","slice","join","Paper","style","padding","IconButton","handleDeleteBtnClick","Object","keys","inputs","input","keyToTitle","Lender","lenderMenuItems","beginningState","lenderInputs","selectLender","selectTier","addLender","reset","deleteLenderInput","selectedTier","tierMenuItems","tierSelectDisabled","selectedLender","lenderSelectDisabled","currencyFields","error","percentageFields","isTextFieldsEnabled","lenderName","MenuItem","lenderToPrograms","fieldLabel","newValue","isError","isNaN","newCurrencyFields","newPercentageFields","selectLenderName","tierName","selectIndex","hasAnyErrors","lenderInput","hasAnyErrorsInLenderInput","newLenderInputs","lenderInputIndex","splice","spacing","Select","disabled","width","currencyFieldLabel","sm","md","textboxOnChange","helperText","InputProps","startAdornment","InputAdornment","position","percentageFieldLabel","textAlign","Button","marginLeft","LeftPanel","handleChange","filterRef","createRef","parseProps","carDetails","selectedTabIndex","newSelectedTabIndex","makes","makeToModelsDict","models","yearSet","i","carDetail","make","model","year","yearRangeList","createRangeListContinuousValue","parseInt","lenderIdToLenderName","lenders","lender","lenderPrograms","lenderProgram","partsCount","Math","current","getFilterValues","Tabs","Tab","CarDescription","getRowValue","trim","rowName","row","getRowWithName","matches","details","backgroundColor","Table","TableRow","TableCell","colSpan","fontSize","getCarTitle","CarImagesGallery","items","images","showPlayButton","showFullscreenButton","showThumbnails","CarShowElement","fieldName","includes","convertDict","carJson","result","excludeCarDetailFields","convertFieldNameToLabel","isCurrencyField","image","original","Card","CardContent","lg","convertToImages","convertToCarDetails","domain","Car","cardOnClick","carYear","carMake","carModel","carTrim","history","withRouter","css","CarShow","sortOptionIndex","selectSortOption","number","carDetail1","carDetail2","total_cost","reverseNumberSign","mileage","hasFilterValues","filterValues","filterValue","filterFieldName","filterTitleToFieldName","selectedOptionsSet","has","minVal","maxVal","Number","MAX_SAFE_INTEGER","sortCarDetails","carDetailsAfterFilterAndSort","class","Menubar","AppBar","isBigScreen","Toolbar","aria-label","aria-controls","aria-haspopup","menuBtnOnClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","closeMenu","clipLoaderCss","HomePage","leftPanelRef","smooth","xl","isLoading","display","justifyContent","lendersJson","lenderProgramsJson","CarPage","goBack","location","carDetailsAvailable","AppClass","lenderTermsJson","Promise","all","fetch","then","responses","response","json","jsons","basename","process","path","App","theme","useTheme","mdUp","useMediaQuery","breakpoints","up","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","StyledTableCell","withStyles","head","palette","primary","main","common","white","body","StyledTableRow","root","background","default","CarCalculation","CarCalculationClass","mileageToKms","addCurrencySymbol","abs","pv","rate","periods","payment","future","type","eval","pow","getLenderId","calculateProfitFirstInterest","filterInputs","lenderData","interests","createCalculationDetail","profit","selectedInterest","lenderTerms","allLenderNames","selectedLenderIndex","allTierNames","selectedTierIndex","advance","interest","term","foundLenderTerm","foundLenderProgram","lenderId","lender_id","parseFloat","rateMin","rate_min","rateMax","rate_max","carKms","lenderTerm","min_kms","max_kms","Payment","maxFront","termType","x_clean","clean","average","rough","round","maxProfit","financed","holdBack","hold_back","funded","tradeAllowance","tradePayOff","downPayment","tradeAcv","paidOut","userInputTax","Tax","netPaid","calculationDetailsColumnHeaders","calculationDetailsValues","selectInterestEvent","selectedInterests","filtersInputs","newCalculationDetailsValues","entries","isValidFilterInputs","calculationDetails","firstInterest","lenderIndex","newInterest","header","columnValues","columnValue","index","interestMenuItems","tables","lenderCalculationDetailsValues","createCell","userInputsFilterData","createCalculationDetails","renderWithOneTable","renderWithThreeTables"],"mappings":"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","file":"static/js/main.a8bd944b.chunk.js","sourcesContent":["import React from 'react';\nimport {Checkbox} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nclass ListFilter extends React.Component{\n    constructor(props) {\n        super(props);\n        let optionCheckedDict = {};\n\n        for(let option of this.props.options){\n            optionCheckedDict[option] = true;\n        }\n\n        this.state = {\n            'Select All': true,\n            ...optionCheckedDict\n        };\n\n        this.selectAll = this.selectAll.bind(this);\n        this.optionOnchange = this.optionOnchange.bind(this);\n    }\n\n    getTitle(){\n        return this.props.title;\n    }\n\n    getValues(){\n        let selectedOptions = [];\n\n        for (let option of this.props.options){\n            if (this.state[option]){\n                selectedOptions.push(option);\n            }\n        }\n\n        return {\"selectedOptions\":selectedOptions};\n    }\n\n    componentWillReceiveProps(nextProps){\n        let optionsChanged = nextProps.options.length != this.props.options.length;\n\n        if(optionsChanged) {\n            let newState = {};\n\n            newState['Select All'] = true;\n\n            for (let option of nextProps.options) {\n                newState[option] = true;\n            }\n\n            this.setState({...newState});\n        }\n    }\n\n    selectAll(event){\n        let selectAllCheckbox = event.target;\n        let selectedCheckboxState = selectAllCheckbox.checked;\n        let newState = {...this.state};\n\n        for(let option of this.props.options){\n            if (selectAllCheckbox.checked){\n                newState[option] = true;\n            }else {\n                newState[option] = false;\n            }\n        }\n\n        newState['Select All'] = selectedCheckboxState;\n        this.setState(newState, this.props.onChange);\n    }\n\n    optionOnchange(event, name){\n\n        let checkbox = event.target;\n        let newState = {...this.state};\n        newState[name] = checkbox.checked;\n\n        let selectAll = true;\n\n        for(let option of this.props.options){\n            if(!newState[option]){\n                selectAll = false;\n            }\n        }\n\n        newState['Select All'] = selectAll;\n\n        this.setState(newState, this.props.onChange);\n        console.log((checkbox.checked?'Check ':'Unchecked ') + name);\n    }\n\n    render(){\n        let sortedOptions = [...this.props.options];\n        sortedOptions.sort();\n\n        let manyOptions = sortedOptions.length > 10;\n\n        return (\n            <Grid container>\n                <Grid item xs={12}>\n                    <Checkbox checked={this.state['Select All']} color={\"primary\"} onChange={this.selectAll} />All\n                </Grid>\n                {\n                    sortedOptions.map(item => (\n                        <Grid item xs={manyOptions?6:12}>\n                            <Checkbox checked={this.state[item]} color={\"primary\"}\n                                      onChange={(event) => this.optionOnchange(event, item)}/>{item}\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default ListFilter;","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport debounce from \"lodash/debounce\";\n\nclass RangeFilter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \"min\":\"\",\n            \"max\":\"\"\n        }\n\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 2000);\n        this.selectRange = this.selectRange.bind(this);\n    }\n\n    textFieldOnChange(event, textFieldName){\n        let newState = {};\n\n        newState[textFieldName] = event.target.value;\n\n        this.setState(newState);\n        this.onChangeDebounced();\n    }\n\n    onChangeDebounced = () => {\n        this.props.onChange();\n    }\n\n    getValues(){\n        return {\"min\":this.state.min, \"max\":this.state.max};\n    }\n\n    getMinTitle(){\n        return this.props.minTitle == undefined?\"Min\":this.props.minTitle;\n    }\n\n    getMaxTitle(){\n        return this.props.maxTitle == undefined?\"Max\":this.props.maxTitle;\n    }\n\n    getToText(){\n        return this.props.toText == undefined?\"To\":this.props.toText;\n    }\n\n    selectRange(event, min, max){\n        this.setState({\"min\":min, \"max\":max}, this.props.onChange);\n    }\n\n    render(){\n        return (\n            <Grid container>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"min\"]} label={this.getMinTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"min\")}/>\n                </Grid>\n                <Grid item xs={4} align={\"center\"}>\n                    {this.getToText()}\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField value={this.state[\"max\"]} label={this.getMaxTitle()}\n                               variant=\"outlined\" size={\"small\"} onChange={(event) => this.textFieldOnChange(event, \"max\")}/>\n                </Grid>\n                {\n                    this.props.rangeList?(<ul>{this.props.rangeList.map(range => {\n                        if (range.length == 1){\n                            return (<li><a href=\"#\" onClick={(event) => this.selectRange(event, range[0], range[0])}>{range[0]}</a></li>);\n                        }else if (range.length == 2){\n                            return (<li><a href=\"#\"  onClick={(event) => this.selectRange(event, range[0], range[1])}>{range[0]} - {range[1]}</a></li>);\n                        }\n\n                        return null;\n                    })}</ul>):(null)\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default RangeFilter;","import React from 'react';\nimport ListFilter from \"./ListFilter\";\nimport RangeFilter from \"./RangeFilter\";\nimport {Collapse} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {filters:this.props.filters};\n        this.filterOnChange = this.filterOnChange.bind(this);\n        this.createFilter = this.createFilter.bind(this);\n        this.expandOrCollapse = this.expandOrCollapse.bind(this);\n    }\n\n    expandBtnOnClick(event, filterTitle) {\n        let stateKeyName = filterTitle + '_expand';\n        let newState = {};\n        newState[stateKeyName] = !this.state[stateKeyName];\n\n        this.setState(newState);\n    }\n\n    filterOnChange(event, filterTitle){\n        console.log(\"filterOnChange\");\n        let newState = {...this.state};\n\n        for(let filter of newState.filters){\n            let isDependentList = filter[\"type\"] == \"list\" && \"dependent_filter\" in filter && \"dependent_list\" in filter;\n\n            if (isDependentList){\n                let dependentFilter = filter[\"dependent_filter\"];\n                let dependentList = filter[\"dependent_list\"];\n\n                let selectedOptions = this.refsDict[dependentFilter].getValues()[\"selectedOptions\"];\n                let newOptions = new Set();\n\n                for(let selectedOption of selectedOptions){\n                    dependentList[selectedOption].forEach(newOptions.add, newOptions);\n                }\n\n                filter[\"options\"] = Array.from(newOptions);\n            }\n        }\n\n        this.setState(newState, this.props.onChange);\n    }\n\n    getFilterValues(){\n        let values = {};\n\n        for(let title in this.refsDict){\n            let filterType = this.state.filters.filter(filter => filter[\"title\"]===title)[0][\"type\"];\n            values[title] = {\n                \"type\":filterType,\n                ...this.refsDict[title].getValues()\n            }\n        }\n\n        return values;\n    }\n\n    expandOrCollapse(event, filterTitle){\n        let stateName = filterTitle + '_expand';\n        let newState = {};\n\n        newState[stateName] = !this.state[stateName];\n        this.setState(newState);\n    }\n\n    createFilter(filter, filterIndex){\n        let lastFilterIndex = this.state.filters.length - 1;\n        let filterType = filter[\"type\"];\n        let filterComponent = undefined;\n\n        if (filterType == \"list\"){\n            filterComponent = <ListFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>;\n        }else if (filterType == \"range\"){\n            filterComponent = <RangeFilter {...filter} ref={curFilter => this.refsDict[filter[\"title\"]] = curFilter} onChange={(event) => this.filterOnChange(event, filter[\"title\"])}/>\n        }\n\n        return (\n            <React.Fragment>\n                <Grid item xs={12} className={\"filter\"}>\n                    <Grid container className={\"expandable\"} onClick={(event) => this.expandOrCollapse(event, filter[\"title\"])}>\n                        <Grid item xs={10}>\n                            <span className={'filter_title'}>{filter[\"title\"]}</span>\n                        </Grid>\n                        <Grid item xs={2} align='right'>\n                            {this.state[filter[\"title\"] + \"_expand\"]?(<ExpandLess/>):(<ExpandMore />)}\n                        </Grid>\n                    </Grid>\n                    <Collapse in={this.state[filter[\"title\"] + \"_expand\"]}>\n                        {filterComponent}\n                    </Collapse>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n\n    render(){\n        console.log('render');\n        console.log(this.state);\n        this.refsDict = {};\n\n        return (\n            <Grid container className={\"filter_main_content\"}>\n                {\n                    this.state.filters.map(this.createFilter)\n                }\n            </Grid>\n        )\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconButton } from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport { Paper } from '@material-ui/core';\n\nclass LenderInputs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    keyToTitle(key){\n        let result = key.replace('_',' ');\n\n        return result\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    render(){\n        return (\n        <Paper style={{padding:10}}>\n            <Grid container>\n                <Grid item xs={12} align={\"right\"}>\n                    <IconButton color=\"secondary\" onClick={this.props.handleDeleteBtnClick}>\n                        <Close />\n                    </IconButton>\n                </Grid>\n                {\n                    Object.keys(this.props.inputs).map(input =>\n                        <React.Fragment>\n                            <Grid item xs={6}>\n                            {this.keyToTitle(input)}\n                            </Grid>\n                            <Grid item xs={6}>\n                                {this.props.inputs[input]}\n                            </Grid>\n                        </React.Fragment>)\n                }\n        </Grid>\n        </Paper>);\n    }\n}\n\nexport default LenderInputs;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport LenderInputs from \"./LenderInputs\";\nimport './Lender.css';\n\nclass Lender extends React.Component {\n    beginningState(){\n        return {\n            selectedTier:'NONE',\n            tierMenuItems:[],\n            tierSelectDisabled:true,\n\n            selectedLender:'NONE',\n            lenderSelectDisabled:false,\n\n            currencyFields:{\n                \"Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Down Payment\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Allowance\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trade Payoff\":{\n                    value: \"\",\n                    error: false\n                },\n                \"Trace a.c.v\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            percentageFields:{\n                \"Tax\":{\n                    value: \"\",\n                    error: false\n                }\n            },\n            isTextFieldsEnabled:false\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lenderMenuItems:[],\n            ...this.beginningState(),\n            lenderInputs:[]\n        }\n\n        this.selectLender = this.selectLender.bind(this);\n        this.selectTier = this.selectTier.bind(this);\n        this.addLender = this.addLender.bind(this);\n        this.reset = this.reset.bind(this);\n        this.deleteLenderInput = this.deleteLenderInput.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let lenderMenuItems = [];\n\n        lenderMenuItems.push(<MenuItem value={'NONE'}>Please select lender</MenuItem>);\n\n        for (let lenderName in nextProps.lenderToPrograms){\n            lenderMenuItems.push(<MenuItem value={lenderName}>{lenderName}</MenuItem>);\n        }\n\n        this.setState({lenderMenuItems:lenderMenuItems});\n    }\n\n    textboxOnChange(event, fieldLabel){\n        let newValue = event.target.value;\n        let isError = isNaN(newValue);\n        console.log(isError);\n\n        if (fieldLabel in this.state.currencyFields){\n            let newCurrencyFields = {...this.state.currencyFields};\n            newCurrencyFields[fieldLabel] =  {\n                value:newValue,\n                error:isError\n            }\n\n            this.setState({currencyFields:newCurrencyFields});\n        }else if (fieldLabel in this.state.percentageFields){\n            let newPercentageFields = {...this.state.percentageFields};\n            newPercentageFields[fieldLabel] = {\n                value:newValue,\n                error:isError\n            }\n            this.setState({percentageFields:newPercentageFields})\n        }\n    }\n\n    selectLender(event){\n        let selectLenderName = event.target.value;\n\n        let tierSelectDisabled = true;\n\n        if (selectLenderName != 'NONE'){\n            tierSelectDisabled = false;\n        }\n\n        let tierMenuItems = [];\n        tierMenuItems.push(<MenuItem value={'NONE'}>Please select tier</MenuItem>);\n\n        for(let tierName of this.props.lenderToPrograms[selectLenderName]) {\n            tierMenuItems.push(<MenuItem value={tierName}>{tierName}</MenuItem>);\n        }\n\n        this.setState({\n            selectedLender:selectLenderName,\n            selectedTier:'NONE',\n            tierSelectDisabled: tierSelectDisabled,\n            tierMenuItems:tierMenuItems\n        });\n    }\n\n    selectTier(event){\n        let selectIndex = event.target.value;\n\n        this.setState({\n            selectedTier : selectIndex,\n            isTextFieldsEnabled:true\n        })\n    }\n\n    hasAnyErrorsInLenderInput(){\n        let hasAnyErrors = false;\n\n        Object.keys(this.state.currencyFields).forEach((key) => {\n            if (this.state.currencyFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        Object.keys(this.state.percentageFields).forEach((key) => {\n            if (this.state.percentageFields[key].error){\n                hasAnyErrors = true;\n            }\n        });\n\n        return hasAnyErrors;\n    }\n\n    addLender(event){\n        let lenderInput = {};\n        let hasAnyErrors = this.hasAnyErrorsInLenderInput();\n\n        if (this.state.selectedLender != 'NONE' && this.state.selectedTier != 'NONE' && !hasAnyErrors) {\n            lenderInput[\"lender\"] = this.state.selectedLender;\n            lenderInput[\"tier\"] = this.state.selectedTier;\n            lenderInput[\"payment\"] = this.state.currencyFields[\"Payment\"].value;\n            lenderInput[\"down payment\"] = this.state.currencyFields[\"Down Payment\"].value;\n            lenderInput[\"trade allowance\"] = this.state.currencyFields[\"Trade Allowance\"].value;\n            lenderInput[\"trade payoff\"] = this.state.currencyFields[\"Trade Payoff\"].value;\n            lenderInput[\"trade a.c.v\"] = this.state.currencyFields[\"Trace a.c.v\"].value;\n            lenderInput[\"tax\"] = this.state.percentageFields[\"Tax\"].value;\n\n            let newLenderInputs = this.state.lenderInputs;\n            newLenderInputs.push(lenderInput);\n\n            this.setState({lenderInputs: newLenderInputs});\n        }\n    }\n\n    reset(event){\n        this.setState({...this.beginningState()});\n    }\n\n    deleteLenderInput(event, lenderInputIndex){\n        let newLenderInputs = this.state.lenderInputs;\n\n        newLenderInputs.splice(lenderInputIndex, 1);\n\n        this.setState({lenderInputs:newLenderInputs});\n    }\n\n    render(){\n        return (\n          <Grid container className={\"lender_main_content padding10\"} spacing={2}>\n              <Grid item xs={12}>\n                  <Select onChange={this.selectLender} value={this.state.selectedLender} disabled={this.state.lenderSelectDisabled} style={{width:'100%'}}>\n                      {this.state.lenderMenuItems}\n                  </Select>\n              </Grid>\n              <Grid item xs={12}>\n                  <Select onChange={this.selectTier} value={this.state.selectedTier} disabled={this.state.tierSelectDisabled} style={{width:'100%'}}>\n                      {this.state.tierMenuItems}\n                  </Select>\n              </Grid>\n              {Object.keys(this.state.currencyFields).map(currencyFieldLabel => (\n                      <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                      label={currencyFieldLabel}\n                                                                                      variant=\"outlined\"\n                                                                                      onChange={(event) => this.textboxOnChange(event, currencyFieldLabel)}\n                                                                                      error = {this.state.currencyFields[currencyFieldLabel].error}\n                                                                                      helperText={this.state.currencyFields[currencyFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                      value={this.state.currencyFields[currencyFieldLabel].value}\n                                                                                      InputProps={{\n                                                                                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                                                                      }\n                                                                                      }\n                                                                                      size={\"small\"}\n                      /></Grid>\n                  )\n              )\n              }\n              {Object.keys(this.state.percentageFields).map(percentageFieldLabel => (\n                      <Grid item xs={6} sm={3} md={6} style={{padding:10}}><TextField disabled={!this.state.isTextFieldsEnabled}\n                                                                                      label={percentageFieldLabel}\n                                                                                      variant=\"outlined\"\n                                                                                      onChange={(event) => this.textboxOnChange(event, percentageFieldLabel)}\n                                                                                      error = {this.state.percentageFields[percentageFieldLabel].error}\n                                                                                      helperText={this.state.percentageFields[percentageFieldLabel].error?\"Invalid Value\":\"\"}\n                                                                                      value={this.state.percentageFields[percentageFieldLabel].value}\n                                                                                      InputProps={{\n                                                                                          startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                                                                                      }}\n                                                                                      size={\"small\"}\n                      /></Grid>\n                  )\n              )\n              }\n              <Grid item xs={12} style={{textAlign:\"center\"}}>\n                  <Button variant=\"contained\" color={\"primary\"} onClick={this.addLender}>Add</Button>\n                  <Button variant=\"contained\" color={\"secondary\"} onClick={this.reset} style={{marginLeft:10}}>Reset</Button>\n              </Grid>\n              {\n                  this.state.lenderInputs.map((lenderInput, lenderInputIndex) =>\n                      <Grid item xs={12}>\n                          <LenderInputs inputs={lenderInput} handleDeleteBtnClick={(event) => this.deleteLenderInput(lenderInputIndex)}/>\n                      </Grid>)\n              }\n          </Grid>\n        );\n    }\n}\n\nexport default Lender;","import React from 'react';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Filter from './Filter';\nimport './LeftPanel.css';\nimport Lender from './Lender';\n\nclass LeftPanel extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.filterRef = React.createRef();\n        const {filters, lenderToPrograms, carDetails} = this.parseProps(this.props);\n        console.log(this.props);\n        console.log(filters);\n\n        this.state = {\n            selectedTabIndex:0,\n            filters:filters,\n            lenderToPrograms:lenderToPrograms,\n            carDetails:carDetails\n        }\n    }\n\n    handleChange(event, newSelectedTabIndex){\n        this.setState({selectedTabIndex:newSelectedTabIndex});\n    }\n\n    parseProps(props) {\n        let makes = new Set();\n        let makeToModelsDict = {}\n        let models = new Set();\n        let yearSet = new Set();\n\n        for (let i = 0; i < props.carDetails.length; i++) {\n            let carDetail = props.carDetails[i];\n            let make = carDetail[\"make\"];\n            let model = carDetail[\"model\"];\n            let year = carDetail[\"year\"];\n\n            makes.add(make);\n            models.add(model);\n            if (!isNaN(year)) {\n                yearSet.add(year);\n            }\n\n            if (!(make in makeToModelsDict)) {\n                makeToModelsDict[make] = new Set();\n            }\n\n            makeToModelsDict[make].add(model);\n        }\n\n        let yearRangeList = [];\n\n        // Create year range list\n        for (let year of yearSet) {\n            yearRangeList.push([year]);\n        }\n\n        let filters = [\n            {\n                \"title\": \"Make\",\n                \"type\": \"list\",\n                \"options\": Array.from(makes)\n            },\n            {\n                \"title\": \"Model\",\n                \"type\": \"list\",\n                \"dependent_filter\": \"Make\",\n                \"dependent_list\": makeToModelsDict,\n                \"options\": Array.from(models)\n            },\n            {\n                \"title\": \"Year\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"rangeList\": yearRangeList\n            },\n            {\n                \"title\": \"Mileage\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"rangeList\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"mileage\"])), 10)\n            },\n            {\n                \"title\": \"Total cost\",\n                \"type\": \"range\",\n                \"minTitle\": \"Min\",\n                \"maxTitle\": \"Max\",\n                \"rangeList\": this.createRangeListContinuousValue(props.carDetails.map(carDetail => parseInt(carDetail[\"total_cost\"])), 10)\n            }\n        ];\n\n        let lenderToPrograms = {};\n        let lenderIdToLenderName = {};\n        props.lenders.forEach(lender => {\n            lenderIdToLenderName[lender[\"id\"]] = lender[\"name\"];\n        });\n\n        props.lenderPrograms.forEach(lenderProgram => {\n            let lenderName = lenderIdToLenderName[lenderProgram[\"lender_id\"]];\n\n            if (!(lenderName in lenderToPrograms)) {\n                lenderToPrograms[lenderName] = [];\n            }\n\n            lenderToPrograms[lenderName].push(lenderProgram[\"name\"]);\n        });\n\n        return {filters: filters, lenderToPrograms: lenderToPrograms, carDetails: props.carDetails};\n    }\n\n    createRangeListContinuousValue(values, partsCount){\n        let min = Math.min(...values);\n        let max = Math.max(...values);\n        let x = (max - min)/partsCount;\n\n        return [[min, max]];\n    }\n\n    getFilterValues(){\n        return this.filterRef.current.getFilterValues();\n    }\n\n    render(){\n        return (\n        <React.Fragment>\n            <Tabs value={this.state.selectedTabIndex} onChange={this.handleChange}>\n                <Tab label={\"Filter\"} className={this.state.selectedTabIndex==0?\"tab_selected\":\"tab_deselected\"}/>\n                <Tab label={\"Lender\"} className={this.state.selectedTabIndex==1?\"tab_selected\":\"tab_deselected\"} />\n            </Tabs>\n            <div className={this.state.selectedTabIndex==0?'':'hide'}>\n                <Filter ref={this.filterRef} filters={this.state.filters}\n                        onChange={this.props.filterOnChange}\n                />\n            </div>\n            <div className={this.state.selectedTabIndex==1?'':'hide'}>\n                <Lender lenderToPrograms={this.state.lenderToPrograms} />\n            </div>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default LeftPanel;","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default class CarDescription extends React.Component {\n    getCarTitle() {\n        let year = this.getRowValue('YEAR');\n        let make = this.getRowValue('MAKE');\n        let model = this.getRowValue('MODEL');\n        let trim = this.getRowValue('TRIM');\n\n        return `${year} ${make} ${model} ${trim}`;\n    }\n\n    getRowValue(rowName){\n        let row = this.getRowWithName(rowName);\n\n        if (row != null){\n            return row.value;\n        }\n\n        return '';\n    }\n\n    getRowWithName(rowName){\n        let matches = this.props.details.filter(row => (row.name == rowName));\n\n        if (matches.length > 0){\n            return matches[0];\n        }\n\n        return null;\n    }\n    render() {\n        return (\n            <Paper style={{padding: \"20px\", backgroundColor: \"rgb(247, 248, 248)\"}}>\n                <Table>\n                    <TableRow>\n                        <TableCell colSpan={2} style={{textAlign: \"center\"}}><b\n                            style={{fontSize: \"1.2rem\"}}>{this.getCarTitle()}</b></TableCell>\n                    </TableRow>\n                    {this.props.details.map(row => (\n                        <TableRow>\n                            <TableCell style={{padding: \"0px\"}}>\n                                <b>{row.name}</b>\n                            </TableCell>\n                            <TableCell style={{padding: \"0px\"}}>\n                                {row.value}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </Table>\n            </Paper>\n        )\n    }\n}","import * as React from \"react\";\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './CarImagesGallery.css';\n\nexport default class CarImagesGallery extends React.Component{\n    render(){\n        return (\n            <ImageGallery items={this.props.images} showPlayButton={false} showFullscreenButton={false} showThumbnails={false}/>\n        );\n    }\n}","import * as React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CarDescription from \"./CarDescription\";\nimport CarCalculation from \"./CarCalculation\";\nimport CarImagesGallery from \"./CarImagesGallery\";\nimport CarShowElementButtons from \"./CarShowElementButtons\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElement extends React.Component{\n    excludeCarDetailFields(fieldName){\n        let excludedFields = ['id', 'images', 'img_url', 'x_clean', 'clean', 'average', 'rough', 'series'];\n\n        return excludedFields.includes(fieldName);\n    }\n\n    convertFieldNameToLabel(fieldName){\n        let convertDict = {\n            'total_cost': 'TOTAL COST'\n        }\n\n        if (fieldName in convertDict){\n            return convertDict[fieldName];\n        }\n\n        return fieldName\n    }\n\n    isCurrencyField(fieldName){\n        return ['total_cost'].includes(fieldName);\n    }\n    convertToCarDetails(carJson){\n        let result = [];\n        let currencySymbol = '$';\n\n        for(let key in carJson){\n            if (!this.excludeCarDetailFields(key)){\n                let name = this.convertFieldNameToLabel(key).toUpperCase();\n                let value = carJson[key];\n\n                if (this.isCurrencyField(key)){\n                    value = currencySymbol + value;\n                }\n\n                result.push({\n                    name: name,\n                    value: value\n                });\n            }\n        }\n\n        return result;\n    }\n\n    convertToImages(carDetail){\n        console.log(carDetail);\n\n        let images = [];\n        for(let image of carDetail[\"images\"]){\n            console.log(image);\n            images.push({original:image[\"src\"]});\n        }\n\n        console.log(images);\n        return images;\n    }\n\n    render() {\n        console.log(this.props.details);\n\n        return (\n           <Card style={{width:\"100%\"}}>\n               <CardContent>\n                   <Grid container spacing={2}>\n                       <Grid item xs={12} lg={7}>\n                            <CarImagesGallery images={this.convertToImages(this.props.details)}/>\n                       </Grid>\n                       <Grid item xs={12} lg={5}>\n                           <CarDescription details={this.convertToCarDetails(this.props.details)}/>\n                       </Grid>\n                       {/*<Grid item xs={12}>*/}\n                       {/*    <CarCalculation filtersInputs={this.props.filtersInputs} lenderData={this.props.lenderData} details={this.props.details}/>*/}\n                       {/*</Grid>*/}\n                       {/*<Grid item xs={12}>*/}\n                       {/*    <CarShowElementButtons />*/}\n                       {/*</Grid>*/}\n                   </Grid>\n               </CardContent>\n           </Card>\n        )\n    }\n}","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default class CarShowElementButtons extends React.Component{\n    render(){\n        return <React.Fragment>\n            <Grid container spacing={1}>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Save</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Pictures</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Breakdown</Button>\n                </Grid>\n                <Grid item xs={6} md={2} lg={2}>\n                    <Button variant=\"contained\" color={\"primary\"} style={{width:\"100%\"}}>Send</Button>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    }\n}","var domain = 'https://lender-filter-backend-test.herokuapp.com';\n\nfunction fetchCars(){\n    return fetch(`${domain}/cars/`);\n}\n\nfunction fetchLenders(){\n    return fetch(`${domain}/lenders/`);\n}\n\nfunction fetchLenderPrograms(){\n    return fetch(`${domain}/lenders/programs/`);\n}\n\nfunction fetchLenderTerms(){\n    return fetch(`${domain}/lenders/terms/`)\n}\n\n\nexport {fetchCars, fetchLenders, fetchLenderPrograms, fetchLenderTerms};","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from \"@material-ui/core/Grid\";\nimport ImageGallery from \"react-image-gallery\";\nimport { withRouter } from \"react-router\";\n\nclass Car extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.cardOnClick = this.cardOnClick.bind(this);\n    }\n\n    getCarTitle(){\n        let carYear = this.props.details['year'];\n        let carMake = this.props.details['make'];\n        let carModel = this.props.details['model'];\n        let carTrim = this.props.details['trim'];\n\n        return `${carYear} ${carMake} ${carModel} ${carTrim}`;\n    }\n\n    cardOnClick(){\n        const {history} = this.props;\n\n        history.push('/car', {carDetails:this.props.details})\n    }\n\n    render(){\n        return (\n            <Card className={\"car\"} onClick={this.cardOnClick}>\n                <CardContent>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <ImageGallery items={[{original:\"https://drive.google.com/uc?export=view&id=1PNPS_e8i8a_m2Owox2ncuuFWNotAbYh6\"}]} showPlayButton={false} showFullscreenButton={false} showThumbnails={false}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <span className={\"car_title\"}>{this.getCarTitle()}</span>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <span className={\"car_total_cost\"}>${this.props.details['total_cost']}</span>\n                        </Grid>\n                        <Grid item xs={6} align={\"right\"}>\n                            <span className={\"car_mileage\"}>{this.props.details['mileage']}</span>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default withRouter(Car);","import * as React from \"react\";\nimport CarShowElement from \"./CarShowElement\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {styled, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {css} from \"@emotion/core\";\nimport {ClipLoader} from \"react-spinners\";\nimport './CarShow.css';\nimport {fetchCars} from \"./Api\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {calculateProfitFirstInterest} from \"./CarCalculation\";\nimport Car from './Car.js';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass CarShow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sortOptionIndex:-1\n        }\n\n        this.selectSortOption = this.selectSortOption.bind(this);\n    }\n\n    filterTitleToFieldName(filterTitle){\n        let dict = {\n            \"Make\":\"make\",\n            \"Model\":\"model\",\n            \"Year\":\"year\",\n            \"Total cost\":\"total_cost\",\n            \"Mileage\":\"mileage\"\n        }\n\n        return dict[filterTitle];\n    }\n\n    reverseNumberSign(number){\n        return -number;\n    }\n\n    sortCarDetails(carDetails, sortOptionIndex){\n        switch(sortOptionIndex){\n            case 1:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost));\n                break;\n            case 2:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.total_cost) - parseInt(carDetail2.total_cost)));\n                break;\n            case 3:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage));\n                break;\n            case 4:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.mileage) - parseInt(carDetail2.mileage)));\n                break;\n            case 5:\n                carDetails.sort((carDetail1, carDetail2) => this.reverseNumberSign(parseInt(carDetail1.year) - parseInt(carDetail2.year)));\n                break;\n            case 6:\n                carDetails.sort((carDetail1, carDetail2) => parseInt(carDetail1.year) - parseInt(carDetail2.year));\n                break;\n        }\n\n        return carDetails;\n    }\n\n    carDetails(){\n        let filterValuesLength = Object.keys(this.props.filterValues).length;\n        let hasFilterValues = filterValuesLength > 0;\n        let carDetails = [...this.props.carDetails];\n\n        if (hasFilterValues) {\n\n\n            for(let filterTitle in this.props.filterValues){\n                let filterValue = this.props.filterValues[filterTitle];\n                let filterType = filterValue[\"type\"];\n                let filterFieldName = this.filterTitleToFieldName(filterTitle);\n\n                if (filterType == \"list\"){\n                    let selectedOptions = filterValue[\"selectedOptions\"];\n                    let selectedOptionsSet = new Set(selectedOptions);\n\n                    carDetails = carDetails.filter(carDetail => selectedOptionsSet.has(carDetail[filterFieldName]));\n                }else if(filterType == \"range\"){\n                    let minVal = filterValue[\"min\"];\n                    let maxVal = filterValue[\"max\"];\n\n                    if (minVal !== \"\" || maxVal != \"\") {\n                        if (minVal == \"\") {\n                            minVal = 0;\n                        }\n\n                        if (maxVal == \"\") {\n                            maxVal = Number.MAX_SAFE_INTEGER;\n                        }\n\n                        carDetails = carDetails.filter(carDetail => carDetail[filterFieldName] >= minVal && carDetail[filterFieldName] <= maxVal);\n                    }\n                }\n            }\n\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }else{\n            // Sort\n            if (this.state.sortOptionIndex != -1){\n                carDetails = this.sortCarDetails(carDetails, this.state.sortOptionIndex);\n            }\n\n            return carDetails;\n        }\n    }\n\n    selectSortOption(event){\n        let sortOptionIndex = event.target.value;\n\n        this.setState({sortOptionIndex:sortOptionIndex});\n    }\n\n    render() {\n        let carDetailsAfterFilterAndSort = this.carDetails();\n\n        return (<Grid container spacing={2}>\n            <Grid item xs={6}>\n                <span class={\"matches\"}>{carDetailsAfterFilterAndSort.length + \" matches\"}</span>\n            </Grid>\n            <Grid item xs={6} align={\"right\"}>\n                <span className={\"sortBy\"}>Sort by </span>\n                <Select value={this.state.sortOptionIndex} onChange={this.selectSortOption}>\n                    <MenuItem value={1}>Lowest Price</MenuItem>\n                    <MenuItem value={2}>Highest Price</MenuItem>\n                    <MenuItem value={3}>Lowest Mileage</MenuItem>\n                    <MenuItem value={4}>Highest Mileage</MenuItem>\n                    <MenuItem value={5}>Newest Year</MenuItem>\n                    <MenuItem value={6}>Oldest Year</MenuItem>\n                </Select>\n            </Grid>\n            {carDetailsAfterFilterAndSort.map(carDetail => (\n               <Grid item xs={12} md={4} lg={3}>\n                   <Car details={carDetail}/>\n               </Grid>\n            ))}\n        </Grid>);\n    }\n}\n\nexport default CarShow;","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Menubar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        return (\n            <>\n                        <AppBar position=\"static\">\n                            {this.props.isBigScreen ? (\n                                <React.Fragment>\n                                    <Tabs>\n                                        <Tab label=\"Home\"/>\n                                        <Tab label=\"Rate Sheet\" disabled/>\n                                        <Tab label=\"Quick Quote\" disabled/>\n                                        <Tab label=\"Lender Assist\" disabled/>\n                                    </Tabs>\n                                </React.Fragment>) : (\n                                <Toolbar>\n                                    <IconButton\n                                        aria-label=\"menu\"\n                                        aria-controls=\"menu-appbar\"\n                                        aria-haspopup=\"true\"\n                                        style={{\"color\":\"white\"}}\n                                        onClick={this.menuBtnOnClick}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"menu-appbar\"\n                                        anchorEl={this.state.anchorEl}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right',\n                                        }}\n                                        open={Boolean(this.state.anchorEl)}\n                                        onClose={this.closeMenu}\n                                    >\n                                        <MenuItem>HOME</MenuItem>\n                                        <MenuItem>RATE SHEET</MenuItem>\n                                        <MenuItem>QUICK QUOTE</MenuItem>\n                                        <MenuItem>LENDER ASSIST</MenuItem>\n                                    </Menu>\n                                </Toolbar>\n                            )\n                            }\n                        </AppBar>\n            </>\n        )\n    }\n}\n\nexport default Menubar;","import React from 'react';\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport LeftPanel from \"./LeftPanel\";\nimport {ClipLoader} from \"react-spinners\";\nimport CarShow from \"./CarShow\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\nimport {css} from \"@emotion/core\";\nimport Menubar from \"./Menubar\";\n\nconst clipLoaderCss = css`\n    border-color:rgb(55,71,172);\n    position:absolute;\n    border-bottom-color:transparent;\n    top:50%;\n`;\n\nclass HomePage extends React.Component{\n    constructor() {\n        super();\n\n        this.leftPanelRef = React.createRef();\n        this.state = {\n            filterValues: {}\n        }\n        this.filterOnChange = this.filterOnChange.bind(this);\n    }\n\n    filterOnChange(){\n        this.setState({filterValues:this.leftPanelRef.current.getFilterValues()});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ScrollToTop smooth />\n                <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                    <Grid item xl={1} xs={0} />\n                    <Grid item xl={10} xs={12}>\n                        <Menubar isBigScreen={this.props.isBigScreen}/>\n                    </Grid>\n                    <Grid item xl={1} xs={0}/>\n                    <Grid item sm={1} xs={0}/>\n                    {this.props.isLoading?(\n                        <Grid item xs={12}>\n                            <div style={{display:'flex', justifyContent:'center'}}><ClipLoader css={clipLoaderCss}/></div>\n                        </Grid>\n                    ):(\n                        <>\n                        <Grid item md={2} sm={3} xs={12}>\n                            <LeftPanel ref={this.leftPanelRef} carDetails={this.props.carJson} lenders={this.props.lendersJson} lenderPrograms={this.props.lenderProgramsJson} filterOnChange={this.filterOnChange}/>\n                        </Grid>\n                        <Grid item md={8} sm={7} xs={12}>\n                            <CarShow carDetails={this.props.carJson} filterValues={this.state.filterValues}/>\n                        </Grid>\n                        </>\n                    )}\n                    <Grid item sm={1} xs={0}/>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Menubar from \"./Menubar\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport CarShowElement from \"./CarShowElement\";\n\nclass CarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.goBack = this.goBack.bind(this);\n    }\n\n    goBack(){\n        const {history} = this.props;\n\n        history.push('/');\n    }\n\n    render() {\n        const {history, location} = this.props;\n        let carDetailsAvailable = location.state && location.state.carDetails;\n\n        return (\n            <>\n                <ScrollToTop smooth />\n                <Grid container style={{backgroundColor:\"rgb(247,248,248)\"}}>\n                    <Grid item xl={1} xs={0} />\n                    <Grid item xl={10} xs={12}>\n                        <Menubar isBigScreen={this.props.isBigScreen}/>\n                    </Grid>\n                    <Grid item xl={1} xs={0}/>\n                    <Grid item xl={1} xs={0} />\n                    <Grid item xl={10} xs={12}>\n                        <Grid container item>\n                            <Grid item xs={12}>\n                                <BsArrowLeft /> <a href={\"#\"} onClick={this.goBack}>Search Results</a>\n                            </Grid>\n                        </Grid>\n                        {carDetailsAvailable?<CarShowElement details={location.state.carDetails}/>:'Not found'}\n                    </Grid>\n                    <Grid item xl={1} xs={0}/>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default withRouter(CarPage);","import React from 'react';\nimport './App.css';\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport \"react-scroll-to-top/lib/index.css\";\nimport HomePage from \"./HomePage\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CarPage from \"./CarPage\";\nimport {fetchCars, fetchLenderPrograms, fetchLenders, fetchLenderTerms} from \"./Api\";\n\nconst App = (props) => {\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <AppClass isBigScreen={mdUp}/>\n}\n\n\nclass AppClass extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            carJson:[],\n            lendersJson:[],\n            lenderTermsJson:[],\n            lenderProgramsJson:[],\n            isLoading: true\n        }\n\n        Promise.all([fetchCars(), fetchLenders(), fetchLenderTerms(), fetchLenderPrograms()]).then(responses => Promise.all(responses.map(response => response.json()))).then(jsons => {\n            let carJson = jsons[0];\n            let lendersJson = jsons[1];\n            let lenderTermsJson = jsons[2];\n            let lenderProgramsJson = jsons[3];\n\n            this.setState({carJson:carJson, lendersJson:lendersJson, lenderTermsJson:lenderTermsJson, lenderProgramsJson:lenderProgramsJson, isLoading:false});\n        });\n    }\n\n    render(){\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path=\"/car\">\n                        <CarPage isBigScreen={this.props.isBigScreen} />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage isBigScreen={this.props.isBigScreen} {...this.state}/>\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst CarCalculation = (props)=>{\n    const theme = useTheme();\n    const mdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return <CarCalculationClass isBigScreen={mdUp} {...props}/>\n}\n\nfunction mileageToKms(mileage){\n    return mileage * 1.60934;\n}\n\n\n\nfunction addCurrencySymbol(value){\n    if (value < 0){\n        return `-$${Math.abs(value)}`\n    }else{\n        return `$${value}`\n    }\n}\n\nfunction pv(rate, periods, payment, future, type) {\n    // Initialize type\n    var type = (typeof type === 'undefined') ? 0 : type;\n\n    // Evaluate rate and periods (TODO: replace with secure expression evaluator)\n    rate = eval(rate);\n    periods = eval(periods);\n\n    // Return present value\n    if (rate === 0) {\n        return - payment * periods - future;\n    } else {\n        return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 +rate * type) - future) / Math.pow(1 + rate, periods);\n    }\n}\n\nfunction getLenderId(lenderName, lenders){\n    for(let i = 0; i < lenders.length; i++){\n        if (lenderName == lenders[i].name)\n            return lenders[i].id;\n    }\n\n    return null;\n}\n\nexport function calculateProfitFirstInterest(filterInputs, lenderData, carDetails){\n    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, carDetails);\n    let interestColumnIndex = 3;\n    let profitColumnIndex = 8;\n    let interests = calculationDetails[interestColumnIndex].split(',');\n\n    if (interests.length > 0) {\n        // Select first interest as default\n        let firstInterest = interests[0];\n\n        let calculationDetailsForFirstInterest = createCalculationDetail(firstInterest, filterInputs, lenderData, carDetails);\n        let profit = calculationDetailsForFirstInterest[profitColumnIndex];\n\n        if (profit != 'NOT_FOUND')\n            return profit;\n    }\n\n    return null;\n}\n\nfunction createCalculationDetail(selectedInterest, filterInputs, lenderData, carDetails){\n    console.log('createCalculationDetail()');\n    console.log(selectedInterest);\n    console.log(filterInputs);\n    console.log(lenderData);\n    console.log(carDetails);\n\n    let lenders = lenderData[0];\n    let lenderPrograms = lenderData[1];\n    let lenderTerms = lenderData[2];\n\n    let lenderName = filterInputs.allLenderNames[filterInputs.selectedLenderIndex - 1];\n    let tierName = filterInputs.allTierNames[filterInputs.selectedTierIndex - 1];\n    console.log('lenderName = ' + lenderName);\n    console.log('tierName = ' + tierName);\n\n    // Advance\n    let advance = 'NOT_FOUND';\n    let interest = 'NOT_FOUND';\n    let term = 'NOT_FOUND';\n    let foundLenderTerm = null;\n    let foundLenderProgram = null;\n    let lenderId = getLenderId(lenderName, lenders);\n    console.log('lenderId = ' + lenderId);\n\n    if(lenderId != null){\n        for(let lenderProgram of lenderPrograms){\n            if (lenderProgram.lender_id == lenderId && lenderProgram.name == tierName){\n                foundLenderProgram = lenderProgram;\n\n                // Advance\n                if(!isNaN(lenderProgram.advance)){\n                    advance = parseFloat(lenderProgram.advance);\n                }\n\n                // Interest\n                let rateMin = parseFloat(lenderProgram.rate_min);\n                let rateMax = parseFloat(lenderProgram.rate_max);\n                interest = '';\n\n                for(let rate = rateMin; rate < rateMax; rate+=1){\n                    interest += rate + ',';\n                }\n\n                interest += rateMax;\n\n                break;\n            }\n        }\n\n        let carKms = mileageToKms(parseFloat(carDetails.mileage));\n        console.log('carKms = ' + carKms);\n\n        for(let lenderTerm of lenderTerms){\n            if (lenderTerm.lender_id == lenderId && lenderTerm.min_kms <= carKms && lenderTerm.max_kms >= carKms && lenderTerm.year == parseInt(carDetails.year)){\n                // Term\n                term = lenderTerm.term;\n                foundLenderTerm = lenderTerm;\n                break;\n            }\n        }\n    }\n\n    console.log('advance = ' + advance);\n    console.log('interest = ' + interest);\n    console.log('term = ' + term);\n\n    let payment = parseFloat(filterInputs.currencyFields.Payment.value);\n    let back = '0';\n\n    // Calculate max front\n    let maxFront = 'NOT_FOUND';\n\n    if (foundLenderTerm !=null && advance != \"NOT_FOUND\"){\n        let termType = foundLenderTerm.type.replace(/\\s/g, '');\n        console.log('termType = ' + termType);\n\n        switch(termType.toLowerCase()){\n            case 'x-clean':\n                maxFront = carDetails.x_clean * advance - carDetails.total_cost;\n                break;\n            case 'clean':\n                maxFront = carDetails.clean  * advance - carDetails.total_cost;\n                break;\n            case 'average':\n                maxFront = carDetails.average  * advance - carDetails.total_cost;\n                break;\n            case 'rough':\n                maxFront = carDetails.rough  * advance - carDetails.total_cost;\n                break;\n        }\n\n        maxFront = Math.round(maxFront);\n    }\n\n    console.log('maxFront = ' + maxFront);\n\n    // Calculate max profit\n    let maxProfit = 'NOT_FOUND';\n\n    if (selectedInterest != -1 && term!='NOT_FOUND') {\n        let discount = 0;\n        let tax = 0;\n        let financed = pv((selectedInterest / 100 + discount + tax) / 12, term, -payment, 0);\n        let holdBack = foundLenderProgram.hold_back;\n        let funded = financed * (1 - holdBack);\n\n        console.log('financed = ' + financed);\n        console.log('holdBack = ' + holdBack);\n        console.log('funded = ' + funded);\n\n        let lender = 0;\n        let ppsa = 0;\n\n        let tradeAllowance = 0;\n        if (filterInputs.currencyFields[\"Trade Allowance\"].value != '' && !isNaN(filterInputs.currencyFields[\"Trade Allowance\"].value)) {\n            tradeAllowance = parseFloat(filterInputs.currencyFields[\"Trade Allowance\"].value);\n        }\n\n        let tradePayOff = 0;\n        if (filterInputs.currencyFields[\"Trade Payoff\"].value != '' && !isNaN(filterInputs.currencyFields[\"Trade Payoff\"].value)) {\n            tradePayOff = parseFloat(filterInputs.currencyFields[\"Trade Payoff\"].value)\n        }\n\n        let downPayment = 0;\n        if (filterInputs.currencyFields[\"Down Payment\"].value != '' && !isNaN(filterInputs.currencyFields[\"Down Payment\"].value)) {\n            downPayment = parseFloat(filterInputs.currencyFields[\"Down Payment\"].value);\n        }\n\n        let tradeAcv = 0;\n        if (filterInputs.currencyFields[\"Trace a.c.v\"].value != '' && !isNaN(filterInputs.currencyFields[\"Trace a.c.v\"].value)) {\n            tradeAcv = parseFloat(filterInputs.currencyFields[\"Trace a.c.v\"].value)\n        }\n\n        console.log('tradeAllowance = ' + tradeAllowance);\n        console.log('tradePayOff = ' + tradePayOff);\n        console.log('downPayment = ' + downPayment);\n        console.log('tradeAcv = ' + tradeAcv);\n\n        let paidOut = funded - lender - ppsa + tradeAllowance - tradePayOff + downPayment;\n        console.log('paidOut = ' + paidOut);\n\n        let userInputTax = 0;\n\n        if (filterInputs.percentageFields.Tax.value != '' && !isNaN(filterInputs.percentageFields.Tax.value)) {\n            console.log(filterInputs.percentageFields.Tax.value);\n            userInputTax = parseFloat(filterInputs.percentageFields.Tax.value) / 100;\n        }\n\n        console.log('userInputTax = ' + userInputTax);\n\n        let netPaid = paidOut*(1-userInputTax) + tradeAcv;\n        console.log('netPaid = ' + netPaid);\n\n        if (netPaid - carDetails.total_cost < maxFront){\n            maxProfit = netPaid - carDetails.total_cost;\n        }else {\n            maxProfit = maxFront;\n        }\n\n        maxProfit = Math.round(maxProfit);\n    }\n\n    console.log('maxProfit = ' + maxProfit);\n\n    if (maxFront != 'NOT_FOUND'){\n        maxFront = addCurrencySymbol(maxFront);\n    }\n\n    if (maxProfit != 'NOT_FOUND'){\n        maxProfit = addCurrencySymbol(maxProfit);\n    }\n\n    console.log('End createCalculationDetail()');\n    return [lenderName, tierName, (advance * 100) + '%', interest, term, '$' + payment, back, maxFront, maxProfit];\n}\n\nclass CarCalculationClass extends React.Component{\n    constructor() {\n        super();\n\n        this.calculationDetailsColumnHeaders =[\n            \"Lender\",\n            \"Tier\",\n            \"Advance\",\n            \"Interest\",\n            \"Term\",\n            \"Payment\",\n            \"Back\",\n            \"Front\",\n            \"Profit\"\n        ];\n\n        this.state = {\n            calculationDetailsValues:[],\n            interests:[-1,-1,-1]\n        }\n\n        this.selectInterestEvent = this.selectInterestEvent.bind(this);\n    }\n\n    createCalculationDetails(selectedInterests, filtersInputs, lenderData, details){\n        let newCalculationDetailsValues = [];\n\n        for(let [i, filterInputs] of filtersInputs.entries()){\n            if(this.isValidFilterInputs(filterInputs)) {\n                if (selectedInterests[i] == -1){\n                    let calculationDetails = createCalculationDetail(-1, filterInputs, lenderData, details);\n                    let interestColumnIndex = 3;\n                    let interests = calculationDetails[interestColumnIndex].split(',');\n\n                    if (interests.length > 0) {\n                        // Select first interest as default\n                        let firstInterest = interests[0];\n                        this.state.interests[i] = firstInterest;\n\n                        newCalculationDetailsValues.push(createCalculationDetail(firstInterest, filterInputs, lenderData, details));\n                    }else{\n                        newCalculationDetailsValues.push(calculationDetails);\n                    }\n                }\n                else{\n                    newCalculationDetailsValues.push(createCalculationDetail(selectedInterests[i], filterInputs, lenderData, details));\n                }\n            }\n        }\n\n        return newCalculationDetailsValues;\n    }\n\n    isValidFilterInputs(filterInputs){\n        return filterInputs.selectedLenderIndex != 0 && filterInputs.selectedTierIndex != 0;\n    }\n\n    selectInterestEvent(event, lenderIndex){\n        let newInterest = event.target.value;\n        let interests = this.state.interests;\n        interests[lenderIndex] = newInterest;\n\n        this.setState({interests:interests});\n    }\n\n    renderWithOneTable(calculationDetailsValues){\n        return (\n            <React.Fragment>\n                <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                    <Table>\n                        <TableHead>\n                                <StyledTableRow>\n                                {this.calculationDetailsColumnHeaders.map(header => (\n                                    <StyledTableCell>{header}</StyledTableCell>\n                                ))}\n                                </StyledTableRow>\n                        </TableHead>\n                        {\n                            calculationDetailsValues.map((columnValues, lenderIndex) =>(\n                                <StyledTableRow>\n                                    {\n                                        columnValues.map((columnValue, index) => {\n                                            let interestColumnIndex = 3;\n\n                                            if (index == interestColumnIndex){\n                                                let interestMenuItems = [];\n\n                                                columnValue.split(',').forEach((interest, index) => {\n                                                    interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n                                                });\n\n                                                return (\n                                                    <StyledTableCell>\n                                                        <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                                                            {interestMenuItems}\n                                                        </Select>\n                                                    </StyledTableCell>\n                                                )\n                                            }\n                                            else\n                                            return (\n                                                <StyledTableCell>\n                                                    {columnValue}\n                                                </StyledTableCell>\n                                            )\n                                        })\n                                    }\n                                </StyledTableRow>\n                            ))\n                        }\n                    </Table>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n    createCell(value, index, lenderIndex){\n        let interestColumnIndex = 3;\n\n        if (index == interestColumnIndex){\n            let interestMenuItems = [];\n\n            value.split(',').forEach((interest, index) => {\n                interestMenuItems.push(<MenuItem value={interest}>{interest} %</MenuItem>);\n            });\n\n            return (\n                    <Select onChange={(event) => this.selectInterestEvent(event, lenderIndex)} value={this.state.interests[lenderIndex]}>\n                        {interestMenuItems}\n                    </Select>\n            )\n        }\n        else\n            return <React.Fragment>\n                {value}\n            </React.Fragment>\n    }\n\n    renderWithThreeTables(calculationDetailsValues){\n        let tables = [];\n\n        for(let [lenderIndex, lenderCalculationDetailsValues] of calculationDetailsValues.entries()){\n            tables.push(\n                <Grid item xs={12}>\n                    <Paper style={{backgroundColor:\"rgb(247, 248, 248)\"}}>\n                        <Table>\n                            <TableHead>\n                                <StyledTableRow>\n                                    <StyledTableCell>Name</StyledTableCell>\n                                    <StyledTableCell>Value</StyledTableCell>\n                                </StyledTableRow>\n                            </TableHead>\n                            {\n                                lenderCalculationDetailsValues.map((row, index) => (\n                                    <StyledTableRow>\n                                        <StyledTableCell>{this.calculationDetailsColumnHeaders[index]}</StyledTableCell>\n                                        <StyledTableCell>{this.createCell(row, index, lenderIndex)}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))\n                            }\n                        </Table>\n                    </Paper>\n                </Grid>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={4}>\n                    {tables}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n\n\n    render(){\n        let userInputsFilterData = this.props.filtersInputs != undefined && this.props.filtersInputs.length > 0;\n        let calculationDetailsValues = this.createCalculationDetails(this.state.interests, this.props.filtersInputs, this.props.lenderData, this.props.details);\n\n        if (userInputsFilterData){\n            if (this.props.isBigScreen){\n                return this.renderWithOneTable(calculationDetailsValues);\n            }else{\n                return this.renderWithThreeTables(calculationDetailsValues);\n            }\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default CarCalculation;"],"sourceRoot":""}